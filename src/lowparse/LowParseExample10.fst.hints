[
  "¿Ï˜6Ì†TÎ“Ú+$š1~A",
  [
    [
      "LowParseExample10.msg_type_HelloRetryRequest",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "9be49f4fe299b66cd94ab811a14ce0ef"
    ],
    [
      "LowParseExample10.msg_type_other",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "equation_FStar.Bytes.lbytes",
        "equation_LowParseExample10.msg_type",
        "haseqTm_refine_b0383769854f2b8d05d9f8fb03a8cbd4",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "typing_FStar.Bytes.bytes"
      ],
      0,
      "92ba8c78eec47fe5e89fc1397af5c23a"
    ],
    [
      "LowParseExample10.__proj__HelloRetryRequest__item___0",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "disc_equation_LowParseExample10.HelloRetryRequest",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_b27395aca785c5f0dff5cf7eb1ddbe7b"
      ],
      0,
      "e03baf76f1fa1927a7fe7bad1c8ccacb"
    ],
    [
      "LowParseExample10.__proj__Other__item___0",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "disc_equation_LowParseExample10.Other",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_8148533b4aef5ed92e970bdd6a36d495"
      ],
      0,
      "431bcd65e9efa50631bfd1a5384b51f8"
    ],
    [
      "LowParseExample10.t_tag_cond",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "equation_FStar.Bytes.lbytes",
        "equation_LowParseExample10.msg_type",
        "haseqTm_refine_b0383769854f2b8d05d9f8fb03a8cbd4",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "typing_FStar.Bytes.bytes"
      ],
      0,
      "baa818209f1d7c813c8df88734d358f4"
    ],
    [
      "LowParseExample10.parse_t_payload",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion",
        "equation_LowParseExample10.t_payload"
      ],
      0,
      "505df52a9a9f406d4dbf1bd72c8feda4"
    ],
    [
      "LowParseExample10.t_synth",
      1,
      2,
      1,
      [
        "@query", "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_HelloRetryRequest_",
        "equation_LowParseExample10.t_payload",
        "equation_LowParseExample10.t_tag_cond",
        "primitive_Prims.op_Equality"
      ],
      0,
      "8a7594adb2d1b3af092f6e8c4dee0fdf"
    ],
    [
      "LowParseExample10.parse_t_param",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_LowParseExample10.HelloRetryRequest",
        "constructor_distinct_LowParseExample10.Other",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_HelloRetryRequest_",
        "equation_LowParseExample10.t_synth",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "primitive_Prims.op_Equality",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParseExample10.HelloRetryRequest__0",
        "projection_inverse_LowParseExample10.Mkt_other_contents",
        "projection_inverse_LowParseExample10.Mkt_other_msg_type",
        "projection_inverse_LowParseExample10.Other__0"
      ],
      0,
      "a13f6e025a7e952adbbac909499cf4fd"
    ],
    [
      "LowParseExample10.parse_t",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Pervasives.Native_pretyping_b53dbd183c526bc5d0f20d7b966ae125",
        "LowParseExample10_interpretation_Tm_arrow_604a12f64f1d9f0b1f9fc67bfbb0eaf1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_elim_LowParse.Spec.Base.Mkparser_kind_",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Pervasives.dfst", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload", "equation_Prims.nat",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "function_token_typing_LowParseExample10.parse_t_param",
        "function_token_typing_LowParseExample10.parse_t_payload",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Prims.nat", "int_inversion",
        "lemma_FStar.Pervasives.invertOption", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_Prims.Mkdtuple2__1",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2_b",
        "refinement_interpretation_FStar.UInt_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "refinement_interpretation_LowParse.Spec.Base_Tm_refine_9fc4b705eaf2fe68d9cc8785e7df72bf",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind"
      ],
      0,
      "78e73f494f2193ca578b0b909a87f621"
    ],
    [
      "LowParseExample10.serialize_t_payload",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_b97e1e5c8e297e7763719037d4e387c3",
        "Prims_pretyping_f537159ed795b314b4e58c260361ae86", "bool_inversion",
        "bool_typing", "constructor_distinct_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.Pervasives.dsnd",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.t_payload", "equation_Prims.nat",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParseExample10.parse_t_param",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "projection_inverse_Prims.Mkdtuple2_b",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "typing_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser"
      ],
      0,
      "741345fef0deca826205fd2582a754e8"
    ],
    [
      "LowParseExample10.t_synth_recip",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "disc_equation_LowParseExample10.HelloRetryRequest",
        "disc_equation_LowParseExample10.Other",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_other",
        "equation_LowParseExample10.t_payload",
        "equation_LowParseExample10.t_tag_cond",
        "fuel_guarded_inversion_LowParseExample10.t",
        "primitive_Prims.op_Equality",
        "proj_equation_LowParseExample10.Mkt_other_msg_type",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_f0496eb03f3fb51b5e4ca0d53ea58c01",
        "typing_LowParseExample10.__proj__Mkt_other__item__contents",
        "typing_LowParseExample10.__proj__Mkt_other__item__msg_type"
      ],
      0,
      "247a5957f317f509d9f8b4cab29c153b"
    ],
    [
      "LowParseExample10.serialize_t_param",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParseExample10_pretyping_f0231244d75fee90e4c78cc6de8957b9",
        "data_elim_LowParseExample10.Other", "equation_FStar.UInt.min_int",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_other",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.t_synth",
        "equation_LowParseExample10.t_synth_recip",
        "equation_LowParseExample10.t_tag_cond",
        "fuel_guarded_inversion_LowParseExample10.t",
        "fuel_guarded_inversion_LowParseExample10.t_other",
        "primitive_Prims.op_Equality", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_synth",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParseExample10.Mkt_other_contents",
        "proj_equation_LowParseExample10.Mkt_other_msg_type",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_synth",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_Tm_refine_f0496eb03f3fb51b5e4ca0d53ea58c01",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_synth",
        "token_correspondence_LowParseExample10.t_synth",
        "typing_LowParseExample10.__proj__Mkt_other__item__msg_type"
      ],
      0,
      "1d237c1bb2532bee6c6bd1f2ce727774"
    ],
    [
      "LowParseExample10.serialize_t",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Pervasives.Native_pretyping_b53dbd183c526bc5d0f20d7b966ae125",
        "LowParseExample10_interpretation_Tm_arrow_604a12f64f1d9f0b1f9fc67bfbb0eaf1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_elim_LowParse.Spec.Base.Mkparser_kind_",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Pervasives.dfst", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload", "equation_Prims.nat",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "function_token_typing_LowParseExample10.parse_t_payload",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_Prims.Mkdtuple2__1",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_Prims.Mkdtuple2__1",
        "refinement_interpretation_FStar.UInt_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length"
      ],
      0,
      "87c6578050dd298c8c4dba17d836b504"
    ],
    [
      "LowParseExample10.parse32_t",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "LowParseExample10_interpretation_Tm_arrow_3eea9580507f50fd4c64a460891f6585",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.Pervasives.dfst",
        "equation_FStar.Pervasives.dsnd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Bytes.parse_flbytes",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.t_payload",
        "equation_LowParseExample10.t_synth",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParseExample10.parse_t_payload",
        "function_token_typing_LowParseExample10.t_tag_cond",
        "function_token_typing_Prims.__cache_version_number__",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_synth",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_synth",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_Tm_refine_4926c3a5c6882fc85df8d4d50feba2b8",
        "refinement_interpretation_Tm_refine_721fb2a54217de3b9128452b3504409b",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "refinement_interpretation_Tm_refine_b0383769854f2b8d05d9f8fb03a8cbd4",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_synth",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "token_correspondence_LowParseExample10.t_synth",
        "token_correspondence_LowParseExample10.t_tag_cond",
        "typing_FStar.UInt32.v"
      ],
      0,
      "7b1cef089f431f17e03da118d536782c"
    ],
    [
      "LowParseExample10.serialize32_t",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_62cc14b5bc99202a16dfbf4047012081",
        "LowParseExample10_interpretation_Tm_arrow_3eea9580507f50fd4c64a460891f6585",
        "LowParseExample10_interpretation_Tm_arrow_5a7ab0d9e9579d7c6b774a19441bfcf3",
        "LowParseExample10_pretyping_f0231244d75fee90e4c78cc6de8957b9",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "constructor_distinct_LowParseExample10.HelloRetryRequest",
        "constructor_distinct_LowParseExample10.Other",
        "data_elim_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param",
        "data_elim_LowParseExample10.Mkt_other",
        "data_elim_LowParseExample10.Other", "data_elim_Prims.Mkdtuple2",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "disc_equation_LowParseExample10.HelloRetryRequest",
        "disc_equation_LowParseExample10.Other",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.Pervasives.dfst",
        "equation_FStar.Pervasives.dsnd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_other",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.serialize_t",
        "equation_LowParseExample10.serialize_t_param",
        "equation_LowParseExample10.serialize_t_payload",
        "equation_LowParseExample10.t_payload",
        "equation_LowParseExample10.t_synth_recip",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "fuel_guarded_inversion_LowParseExample10.t",
        "fuel_guarded_inversion_LowParseExample10.t_other",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParseExample10.parse_t_payload",
        "function_token_typing_LowParseExample10.t_synth_recip",
        "function_token_typing_LowParseExample10.t_tag_cond",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion",
        "interpretation_Tm_abs_09c28ab1a9f7d546838dbe2b397edec9",
        "interpretation_Tm_abs_3d2ad010c580b423b4f1f8212c7606b4",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_payload_serializer",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_tag_serializer",
        "proj_equation_LowParseExample10.Mkt_other_msg_type",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_payload_serializer",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_tag_serializer",
        "projection_inverse_LowParseExample10.HelloRetryRequest__0",
        "projection_inverse_LowParseExample10.Other__0",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_Tm_refine_07033d2b2c1d2fb6c1dd88a8f1110ac2",
        "refinement_interpretation_Tm_refine_71309db5c8a02161752d5b2e74801d2c",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "refinement_interpretation_Tm_refine_b0383769854f2b8d05d9f8fb03a8cbd4",
        "refinement_interpretation_Tm_refine_f0496eb03f3fb51b5e4ca0d53ea58c01",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkserialize_ifthenelse_param__item__serialize_ifthenelse_payload_serializer",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkserialize_ifthenelse_param__item__serialize_ifthenelse_synth_recip",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.serialize_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "token_correspondence_LowParseExample10.t_synth_recip",
        "token_correspondence_LowParseExample10.t_tag_cond",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length",
        "typing_LowParseExample10.__proj__Mkt_other__item__contents",
        "typing_LowParseExample10.__proj__Mkt_other__item__msg_type",
        "typing_LowParseExample10.msg_type_HelloRetryRequest"
      ],
      0,
      "877443c9c41a318e2a242eae99193bbc"
    ],
    [
      "LowParseExample10.size32_t",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_62cc14b5bc99202a16dfbf4047012081",
        "LowParseExample10_interpretation_Tm_arrow_3eea9580507f50fd4c64a460891f6585",
        "LowParseExample10_interpretation_Tm_arrow_5a7ab0d9e9579d7c6b774a19441bfcf3",
        "LowParseExample10_pretyping_f0231244d75fee90e4c78cc6de8957b9",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "constructor_distinct_LowParseExample10.HelloRetryRequest",
        "constructor_distinct_LowParseExample10.Other",
        "data_elim_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param",
        "data_elim_LowParseExample10.Mkt_other",
        "data_elim_LowParseExample10.Other", "data_elim_Prims.Mkdtuple2",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "disc_equation_LowParseExample10.HelloRetryRequest",
        "disc_equation_LowParseExample10.Other",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.Pervasives.dfst",
        "equation_FStar.Pervasives.dsnd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.SLow.Base.size32_constant_precond",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_other",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.serialize_t",
        "equation_LowParseExample10.serialize_t_param",
        "equation_LowParseExample10.serialize_t_payload",
        "equation_LowParseExample10.t_payload",
        "equation_LowParseExample10.t_synth_recip",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "fuel_guarded_inversion_LowParseExample10.t",
        "fuel_guarded_inversion_LowParseExample10.t_other",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParseExample10.parse_t_payload",
        "function_token_typing_LowParseExample10.t_synth_recip",
        "function_token_typing_LowParseExample10.t_tag_cond",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion",
        "interpretation_Tm_abs_09c28ab1a9f7d546838dbe2b397edec9",
        "interpretation_Tm_abs_3d2ad010c580b423b4f1f8212c7606b4",
        "lemma_FStar.UInt32.uv_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_payload_serializer",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_tag_serializer",
        "proj_equation_LowParseExample10.Mkt_other_msg_type",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_payload_serializer",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_tag_serializer",
        "projection_inverse_LowParseExample10.HelloRetryRequest__0",
        "projection_inverse_LowParseExample10.Other__0",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_Tm_refine_07033d2b2c1d2fb6c1dd88a8f1110ac2",
        "refinement_interpretation_Tm_refine_71309db5c8a02161752d5b2e74801d2c",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "refinement_interpretation_Tm_refine_b0383769854f2b8d05d9f8fb03a8cbd4",
        "refinement_interpretation_Tm_refine_f0496eb03f3fb51b5e4ca0d53ea58c01",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkserialize_ifthenelse_param__item__serialize_ifthenelse_payload_serializer",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkserialize_ifthenelse_param__item__serialize_ifthenelse_synth_recip",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.serialize_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "token_correspondence_LowParseExample10.t_synth_recip",
        "token_correspondence_LowParseExample10.t_tag_cond",
        "typing_FStar.Bytes.len", "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length",
        "typing_LowParseExample10.__proj__Mkt_other__item__contents",
        "typing_LowParseExample10.__proj__Mkt_other__item__msg_type",
        "typing_LowParseExample10.msg_type_HelloRetryRequest",
        "typing_LowParseExample10.msg_type_HelloRetryRequest_"
      ],
      0,
      "b77a311ae5530f695a3cc43b2db2c385"
    ],
    [
      "LowParseExample10.test_HelloRetryRequest",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion",
        "equation_FStar.Bytes.lbytes",
        "equation_FStar.Monotonic.HyperStack.mem",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.t_tag_cond",
        "fuel_guarded_inversion_LowParse.Low.Base.slice",
        "primitive_Prims.op_Equality",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "refinement_interpretation_Tm_refine_1c74b2b61a6d377c2449ad4e10dade85",
        "refinement_interpretation_Tm_refine_b0383769854f2b8d05d9f8fb03a8cbd4",
        "refinement_interpretation_Tm_refine_c060639a5717524442b06ff525743bf4",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParseExample10.t_tag_cond",
        "typing_LowParseExample10.msg_type_HelloRetryRequest"
      ],
      0,
      "47941128c76547d2573e8dc1ce1b53bf"
    ],
    [
      "LowParseExample10.test_HelloRetryRequest",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "equation_FStar.Monotonic.HyperStack.mem",
        "refinement_interpretation_Tm_refine_c060639a5717524442b06ff525743bf4"
      ],
      0,
      "0ff6282270299e6af86001c64ba51c21"
    ],
    [
      "LowParseExample10.validate_t",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_02becc629355d2797fd015c10e1b77dc",
        "LowParseExample10_interpretation_Tm_arrow_3eea9580507f50fd4c64a460891f6585",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_elim_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param",
        "data_elim_Prims.Mkdtuple2",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.Pervasives.dfst",
        "equation_FStar.Pervasives.dsnd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.parser_kind_metadata_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.t_payload", "equation_Prims.nat",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParseExample10.parse_t_payload",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Prims.nat",
        "lemma_FStar.Pervasives.invertOption", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_Tm_refine_07033d2b2c1d2fb6c1dd88a8f1110ac2",
        "refinement_interpretation_Tm_refine_109040755b4d561330e03553f10a188b",
        "refinement_interpretation_Tm_refine_9fc4b705eaf2fe68d9cc8785e7df72bf",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "refinement_interpretation_Tm_refine_b0383769854f2b8d05d9f8fb03a8cbd4",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "typing_FStar.Bytes.len", "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_LowParse.Spec.Base.glb",
        "typing_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParseExample10.msg_type_HelloRetryRequest",
        "typing_LowParseExample10.msg_type_HelloRetryRequest_",
        "typing_LowParseExample10.parse_t_param"
      ],
      0,
      "547694b698e6fc3383dd5e29d830ead0"
    ],
    [
      "LowParseExample10.jump_t",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Pervasives.Native_pretyping_b53dbd183c526bc5d0f20d7b966ae125",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_58a05dab681568e2152048deebc856f7",
        "LowParseExample10_interpretation_Tm_arrow_604a12f64f1d9f0b1f9fc67bfbb0eaf1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_elim_LowParse.Spec.Base.Mkparser_kind_",
        "data_elim_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Pervasives.dfst", "equation_FStar.Pervasives.dsnd",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.jump_constant_size",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.Low.Int.jump_u16",
        "equation_LowParse.Low.Int.jump_u32",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.t_payload", "equation_Prims.nat",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "function_token_typing_LowParseExample10.parse_t_param",
        "function_token_typing_LowParseExample10.parse_t_payload",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_FStar.UInt_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length"
      ],
      0,
      "94a8374353a21b716f53003634b10db4"
    ],
    [
      "LowParseExample10.t_elim",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "disc_equation_LowParseExample10.HelloRetryRequest",
        "disc_equation_LowParseExample10.Other", "equation_Prims.squash",
        "fuel_guarded_inversion_LowParseExample10.t",
        "refinement_interpretation_Tm_refine_8d65e998a07dd53ec478e27017d9dba5"
      ],
      0,
      "e347bb3d7e9bafb657cc20241ba7eb4c"
    ],
    [
      "LowParseExample10.t_elim",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Pervasives.Native_pretyping_b53dbd183c526bc5d0f20d7b966ae125",
        "LowParseExample10_interpretation_Tm_arrow_604a12f64f1d9f0b1f9fc67bfbb0eaf1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "constructor_distinct_LowParseExample10.HelloRetryRequest",
        "constructor_distinct_LowParseExample10.Other",
        "data_elim_LowParse.Spec.Base.Mkparser_kind_",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Pervasives.dfst", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.valid_content",
        "equation_LowParse.Low.Base.valid_content_pos",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.parser_kind_metadata_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Combinators.and_then_metadata",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_HelloRetryRequest_",
        "equation_LowParseExample10.parse_t",
        "equation_LowParseExample10.parse_t_kind",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.t_synth",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "fuel_guarded_inversion_LowParse.Low.Base.slice",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "function_token_typing_LowParseExample10.parse_t_payload",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_synth",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_LowParseExample10.Mkt_other_msg_type",
        "proj_equation_Prims.Mkdtuple2__1",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_synth",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_LowParseExample10.HelloRetryRequest__0",
        "projection_inverse_LowParseExample10.Mkt_other_msg_type",
        "projection_inverse_LowParseExample10.Other__0",
        "projection_inverse_Prims.Mkdtuple2__1",
        "refinement_interpretation_FStar.UInt_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_synth",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.t_synth",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length"
      ],
      0,
      "badb6b68fbefd74721593a35813fcd11"
    ],
    [
      "LowParseExample10.t_test_HelloRetryRequest",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "equation_FStar.Monotonic.HyperStack.mem",
        "refinement_interpretation_Tm_refine_c4ec5147bd06d91f6b75cba20cce33ed"
      ],
      0,
      "603930dcacf89bb3b8ce256eb9f2898d"
    ],
    [
      "LowParseExample10.t_test_HelloRetryRequest",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParseExample10_pretyping_f0231244d75fee90e4c78cc6de8957b9",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_LowParseExample10.Other",
        "disc_equation_FStar.Pervasives.Native.Some",
        "disc_equation_LowParseExample10.HelloRetryRequest",
        "equation_FStar.Monotonic.HyperStack.mem",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Bytes.parse_flbytes",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_other",
        "equation_LowParseExample10.parse_t",
        "equation_LowParseExample10.parse_t_kind",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "fuel_guarded_inversion_LowParse.Low.Base.slice",
        "fuel_guarded_inversion_LowParseExample10.t",
        "fuel_guarded_inversion_LowParseExample10.t_other",
        "kinding_LowParseExample10.t@tok", "primitive_Prims.op_Equality",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "refinement_interpretation_Tm_refine_c060639a5717524442b06ff525743bf4",
        "refinement_interpretation_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b",
        "refinement_interpretation_Tm_refine_c4ec5147bd06d91f6b75cba20cce33ed",
        "refinement_interpretation_Tm_refine_f0496eb03f3fb51b5e4ca0d53ea58c01",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParseExample10.t_tag_cond",
        "typing_LowParse.Low.Base.contents",
        "typing_LowParseExample10.__proj__Mkt_other__item__msg_type",
        "typing_LowParseExample10.parse_t",
        "typing_LowParseExample10.parse_t_kind"
      ],
      0,
      "16b0f32d461183a0a3809a3b7313948d"
    ],
    [
      "LowParseExample10.clens_HelloRetryRequest",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion",
        "disc_equation_LowParseExample10.HelloRetryRequest",
        "typing_LowParseExample10.uu___is_HelloRetryRequest"
      ],
      0,
      "57e8d582684460a0999f589a2a96a12c"
    ],
    [
      "LowParseExample10.t_gaccessor_HelloRetryRequest",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.UInt32_pretyping_041e3a67a2d2b51fd702f1f88cfc3b44",
        "LowParse.Low.Base_interpretation_Tm_arrow_4a60cee54783322023f20d9c14aaaf26",
        "LowParse.Low.Base_interpretation_Tm_arrow_e10244fef8e647789619c7fac8710174",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_02becc629355d2797fd015c10e1b77dc",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_8e87e96daba885a82ddb988e32e86e88",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_e415e9ab718ed317c2fe77ef40313125",
        "LowParseExample10_interpretation_Tm_arrow_3eea9580507f50fd4c64a460891f6585",
        "LowParseExample10_pretyping_f0231244d75fee90e4c78cc6de8957b9",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f537159ed795b314b4e58c260361ae86",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_FStar.UInt32.t",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "constructor_distinct_Prims.unit",
        "data_elim_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param",
        "data_elim_LowParseExample10.Other", "data_elim_Prims.Mkdtuple2",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "disc_equation_LowParseExample10.HelloRetryRequest", "eq2-interp",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.Pervasives.dfst",
        "equation_FStar.Pervasives.dsnd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Low.Base.clens_eq",
        "equation_LowParse.Low.IfThenElse.clens_ifthenelse_payload",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.parser_kind_metadata_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.clens_HelloRetryRequest",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_other",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.serialize_t_param",
        "equation_LowParseExample10.t_payload",
        "equation_LowParseExample10.t_synth_recip",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_LowParseExample10.t",
        "fuel_guarded_inversion_LowParseExample10.t_other",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "function_token_typing_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "function_token_typing_LowParseExample10.parse_t_payload",
        "function_token_typing_LowParseExample10.t_tag_cond",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Prims.nat", "int_inversion", "int_typing",
        "interpretation_Tm_abs_51a22a2862df093c63b5483a890ddce4",
        "interpretation_Tm_abs_5766817d79a53360a286fdd98cee8273",
        "interpretation_Tm_abs_6e153a8a75e9f4014e6b1d0e3f86032b",
        "interpretation_Tm_abs_ece18789b56d84d5afe36e9513c515d6",
        "kinding_LowParseExample10.t@tok",
        "lemma_FStar.Pervasives.invertOption", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_cond",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_get",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "proj_equation_LowParseExample10.Mkt_other_msg_type",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_cond",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_get",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_Tm_refine_109040755b4d561330e03553f10a188b",
        "refinement_interpretation_Tm_refine_9fc4b705eaf2fe68d9cc8785e7df72bf",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "refinement_interpretation_Tm_refine_b0383769854f2b8d05d9f8fb03a8cbd4",
        "refinement_interpretation_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b",
        "refinement_interpretation_Tm_refine_f0496eb03f3fb51b5e4ca0d53ea58c01",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_cond",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkserialize_ifthenelse_param__item__serialize_ifthenelse_synth_recip",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "token_correspondence_LowParseExample10.t_synth_recip",
        "token_correspondence_LowParseExample10.t_tag_cond",
        "typing_FStar.Bytes.len", "typing_FStar.UInt32.v",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_LowParse.Spec.Base.glb",
        "typing_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParseExample10.__proj__Mkt_other__item__msg_type",
        "typing_LowParseExample10.clens_HelloRetryRequest",
        "typing_LowParseExample10.msg_type_HelloRetryRequest",
        "typing_LowParseExample10.msg_type_HelloRetryRequest_",
        "typing_LowParseExample10.parse_t_param", "unit_typing"
      ],
      0,
      "05695a5ee023ab1bb29725534175f371"
    ],
    [
      "LowParseExample10.t_accessor_HelloRetryRequest",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.UInt32_pretyping_041e3a67a2d2b51fd702f1f88cfc3b44",
        "LowParse.Low.Base_interpretation_Tm_arrow_4a60cee54783322023f20d9c14aaaf26",
        "LowParse.Low.Base_interpretation_Tm_arrow_e10244fef8e647789619c7fac8710174",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_02becc629355d2797fd015c10e1b77dc",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_62cc14b5bc99202a16dfbf4047012081",
        "LowParseExample10_interpretation_Tm_arrow_3eea9580507f50fd4c64a460891f6585",
        "LowParseExample10_pretyping_f0231244d75fee90e4c78cc6de8957b9",
        "Prims_interpretation_Tm_arrow_e06752ba152f81447b312efcdf8f0e23",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f537159ed795b314b4e58c260361ae86",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_FStar.UInt32.t",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "constructor_distinct_Prims.unit",
        "data_elim_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param",
        "data_elim_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param",
        "data_elim_LowParseExample10.Other", "data_elim_Prims.Mkdtuple2",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "disc_equation_LowParseExample10.HelloRetryRequest", "eq2-interp",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equality_tok_LowParse.Spec.Base.ParserStrong@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.Pervasives.dfst",
        "equation_FStar.Pervasives.dsnd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Low.Base.clens_eq",
        "equation_LowParse.Low.IfThenElse.clens_ifthenelse_payload",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.parser_kind_metadata_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.clens_HelloRetryRequest",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_other",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.serialize_t_param",
        "equation_LowParseExample10.t_payload",
        "equation_LowParseExample10.t_synth_recip",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_LowParseExample10.t",
        "fuel_guarded_inversion_LowParseExample10.t_other",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "function_token_typing_LowParseExample10.parse_t_payload",
        "function_token_typing_LowParseExample10.t_payload",
        "function_token_typing_LowParseExample10.t_synth_recip",
        "function_token_typing_LowParseExample10.t_tag_cond",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Prims.nat", "int_inversion", "int_typing",
        "interpretation_Tm_abs_51a22a2862df093c63b5483a890ddce4",
        "interpretation_Tm_abs_5766817d79a53360a286fdd98cee8273",
        "interpretation_Tm_abs_6e153a8a75e9f4014e6b1d0e3f86032b",
        "interpretation_Tm_abs_ece18789b56d84d5afe36e9513c515d6",
        "kinding_LowParseExample10.t@tok",
        "lemma_FStar.Pervasives.invertOption", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_cond",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_get",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "proj_equation_LowParseExample10.Mkt_other_msg_type",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_cond",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_get",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_Tm_refine_109040755b4d561330e03553f10a188b",
        "refinement_interpretation_Tm_refine_9fc4b705eaf2fe68d9cc8785e7df72bf",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "refinement_interpretation_Tm_refine_b0383769854f2b8d05d9f8fb03a8cbd4",
        "refinement_interpretation_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b",
        "refinement_interpretation_Tm_refine_f0496eb03f3fb51b5e4ca0d53ea58c01",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_cond",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkserialize_ifthenelse_param__item__serialize_ifthenelse_synth_recip",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "token_correspondence_LowParseExample10.t_synth_recip",
        "token_correspondence_LowParseExample10.t_tag_cond",
        "typing_FStar.Bytes.len", "typing_FStar.UInt32.v",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_LowParse.Spec.Base.glb",
        "typing_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParseExample10.__proj__Mkt_other__item__msg_type",
        "typing_LowParseExample10.clens_HelloRetryRequest",
        "typing_LowParseExample10.msg_type_HelloRetryRequest",
        "typing_LowParseExample10.msg_type_HelloRetryRequest_",
        "typing_LowParseExample10.parse_t_param",
        "typing_LowParseExample10.t_synth_recip", "unit_typing"
      ],
      0,
      "ea8b2f04ebcac80acc16ffafdf591340"
    ],
    [
      "LowParseExample10.clens_other",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion",
        "disc_equation_LowParseExample10.Other",
        "typing_LowParseExample10.uu___is_Other"
      ],
      0,
      "def5730bfdc220a237c92583c4e5adaf"
    ],
    [
      "LowParseExample10.t_gaccessor_other",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.UInt16_pretyping_9807ddb0e569187e389675611f2acf1e",
        "LowParse.Low.Base_interpretation_Tm_arrow_4a60cee54783322023f20d9c14aaaf26",
        "LowParse.Low.Base_interpretation_Tm_arrow_e10244fef8e647789619c7fac8710174",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_62cc14b5bc99202a16dfbf4047012081",
        "LowParseExample10_interpretation_Tm_arrow_5a7ab0d9e9579d7c6b774a19441bfcf3",
        "LowParseExample10_pretyping_f0231244d75fee90e4c78cc6de8957b9",
        "Prims_interpretation_Tm_arrow_e06752ba152f81447b312efcdf8f0e23",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f537159ed795b314b4e58c260361ae86",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_FStar.UInt16.t",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "constructor_distinct_Prims.unit",
        "data_elim_LowParse.Spec.Base.Mkparser_kind_",
        "data_elim_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param",
        "data_elim_LowParseExample10.Other",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "disc_equation_LowParseExample10.Other", "eq2-interp",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.Pervasives.dfst",
        "equation_FStar.Pervasives.dsnd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Low.Base.clens_eq",
        "equation_LowParse.Low.IfThenElse.clens_ifthenelse_payload",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.parser_kind_metadata_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.clens_other",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_other",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.serialize_t_param",
        "equation_LowParseExample10.t_payload",
        "equation_LowParseExample10.t_synth_recip",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_LowParse.Spec.Base.parser_kind_",
        "fuel_guarded_inversion_LowParseExample10.t",
        "fuel_guarded_inversion_LowParseExample10.t_other",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "function_token_typing_LowParseExample10.t_payload",
        "function_token_typing_LowParseExample10.t_synth_recip",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Prims.nat", "int_inversion", "int_typing",
        "interpretation_Tm_abs_5766817d79a53360a286fdd98cee8273",
        "interpretation_Tm_abs_6a782478763b807e4aa948680efc75bc",
        "interpretation_Tm_abs_6e153a8a75e9f4014e6b1d0e3f86032b",
        "interpretation_Tm_abs_edcf95dadee8575b35c7e4d8a532f8ef",
        "kinding_LowParseExample10.t@tok",
        "lemma_FStar.Pervasives.invertOption", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_cond",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_get",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_cond",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_get",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_Tm_refine_109040755b4d561330e03553f10a188b",
        "refinement_interpretation_Tm_refine_4d5241eb6fe198666a8101195bbd4a2a",
        "refinement_interpretation_Tm_refine_9fc4b705eaf2fe68d9cc8785e7df72bf",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "refinement_interpretation_Tm_refine_b0383769854f2b8d05d9f8fb03a8cbd4",
        "refinement_interpretation_Tm_refine_ba523126f67e00e7cd55f0b92f16681d",
        "refinement_interpretation_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b",
        "refinement_interpretation_Tm_refine_f0496eb03f3fb51b5e4ca0d53ea58c01",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_cond",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkserialize_ifthenelse_param__item__serialize_ifthenelse_synth_recip",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "token_correspondence_LowParseExample10.t_synth_recip",
        "token_correspondence_LowParseExample10.t_tag_cond",
        "typing_FStar.Bytes.len",
        "typing_FStar.Pervasives.Native.__proj__Some__item__v",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_metadata",
        "typing_LowParse.Spec.Base.glb",
        "typing_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "typing_LowParse.Spec.Int.parse_u16_kind",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParseExample10.__proj__Mkt_other__item__msg_type",
        "typing_LowParseExample10.clens_other",
        "typing_LowParseExample10.msg_type_HelloRetryRequest",
        "typing_LowParseExample10.msg_type_HelloRetryRequest_",
        "typing_LowParseExample10.parse_t_param",
        "typing_LowParseExample10.serialize_t_param", "unit_typing"
      ],
      0,
      "f81a9baf72d941820f9a0231f12d2c5f"
    ],
    [
      "LowParseExample10.t_accessor_other",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.UInt16_pretyping_9807ddb0e569187e389675611f2acf1e",
        "LowParse.Low.Base_interpretation_Tm_arrow_4a60cee54783322023f20d9c14aaaf26",
        "LowParse.Low.Base_interpretation_Tm_arrow_e10244fef8e647789619c7fac8710174",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_02becc629355d2797fd015c10e1b77dc",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_62cc14b5bc99202a16dfbf4047012081",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_8e87e96daba885a82ddb988e32e86e88",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_e415e9ab718ed317c2fe77ef40313125",
        "LowParseExample10_interpretation_Tm_arrow_3eea9580507f50fd4c64a460891f6585",
        "LowParseExample10_interpretation_Tm_arrow_5a7ab0d9e9579d7c6b774a19441bfcf3",
        "LowParseExample10_pretyping_f0231244d75fee90e4c78cc6de8957b9",
        "Prims_interpretation_Tm_arrow_e06752ba152f81447b312efcdf8f0e23",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f537159ed795b314b4e58c260361ae86",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_FStar.UInt16.t",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "constructor_distinct_Prims.unit",
        "data_elim_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param",
        "data_elim_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param",
        "data_elim_LowParseExample10.Mkt_other",
        "data_elim_LowParseExample10.Other",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "disc_equation_LowParseExample10.Other", "eq2-interp",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equality_tok_LowParse.Spec.Base.ParserStrong@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.Pervasives.dfst",
        "equation_FStar.Pervasives.dsnd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Low.Base.clens_eq",
        "equation_LowParse.Low.IfThenElse.clens_ifthenelse_payload",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.parser_kind_metadata_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.clens_other",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_other",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.serialize_t_param",
        "equation_LowParseExample10.t_payload",
        "equation_LowParseExample10.t_synth_recip",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_LowParseExample10.t",
        "fuel_guarded_inversion_LowParseExample10.t_other",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "function_token_typing_LowParse.Spec.Base.parser_kind",
        "function_token_typing_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "function_token_typing_LowParseExample10.parse_t_payload",
        "function_token_typing_LowParseExample10.t_payload",
        "function_token_typing_LowParseExample10.t_synth_recip",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Prims.nat", "int_inversion", "int_typing",
        "interpretation_Tm_abs_5766817d79a53360a286fdd98cee8273",
        "interpretation_Tm_abs_6a782478763b807e4aa948680efc75bc",
        "interpretation_Tm_abs_6e153a8a75e9f4014e6b1d0e3f86032b",
        "interpretation_Tm_abs_edcf95dadee8575b35c7e4d8a532f8ef",
        "kinding_LowParseExample10.t@tok",
        "lemma_FStar.Pervasives.invertOption", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_cond",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_get",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "proj_equation_LowParseExample10.Mkt_other_msg_type",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_cond",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_get",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_Tm_refine_109040755b4d561330e03553f10a188b",
        "refinement_interpretation_Tm_refine_9fc4b705eaf2fe68d9cc8785e7df72bf",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "refinement_interpretation_Tm_refine_b0383769854f2b8d05d9f8fb03a8cbd4",
        "refinement_interpretation_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b",
        "refinement_interpretation_Tm_refine_f0496eb03f3fb51b5e4ca0d53ea58c01",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_cond",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkserialize_ifthenelse_param__item__serialize_ifthenelse_synth_recip",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "token_correspondence_LowParseExample10.t_synth_recip",
        "token_correspondence_LowParseExample10.t_tag_cond",
        "typing_FStar.Bytes.len",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_metadata",
        "typing_LowParse.Spec.Base.glb",
        "typing_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParseExample10.clens_other",
        "typing_LowParseExample10.msg_type_HelloRetryRequest",
        "typing_LowParseExample10.msg_type_HelloRetryRequest_",
        "typing_LowParseExample10.parse_t_param",
        "typing_Prims.__proj__Mkdtuple2__item___1",
        "typing_Tm_abs_4f6e32afbcd10f305b42112ef6384669", "unit_typing"
      ],
      0,
      "7ec6f0b4aec54f5b2c7b19a4652fc74b"
    ],
    [
      "LowParseExample10.t_intro_HelloRetryRequest",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "equation_Prims.squash", "l_and-interp",
        "refinement_interpretation_Tm_refine_8d65e998a07dd53ec478e27017d9dba5",
        "unit_typing"
      ],
      0,
      "d9b58dbedf12c5f3a47cdbaeb3b9e900"
    ],
    [
      "LowParseExample10.t_intro_HelloRetryRequest",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Pervasives.Native_pretyping_b53dbd183c526bc5d0f20d7b966ae125",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_elim_LowParse.Spec.Base.Mkparser_kind_",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Pervasives.dfst", "equation_FStar.Pervasives.dsnd",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.parser_kind_metadata_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Combinators.and_then_metadata",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_HelloRetryRequest_",
        "equation_LowParseExample10.parse_t",
        "equation_LowParseExample10.parse_t_kind",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.t_payload",
        "equation_LowParseExample10.t_synth",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "function_token_typing_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_synth",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_synth",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_FStar.UInt_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_synth",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "token_correspondence_LowParseExample10.t_synth",
        "token_correspondence_LowParseExample10.t_tag_cond",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length"
      ],
      0,
      "178d09bea801d3d27875b6ab691bac15"
    ],
    [
      "LowParseExample10.t_intro_other",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "eq2-interp",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_Prims.squash", "l_and-interp", "l_not-interp",
        "refinement_interpretation_Tm_refine_8d65e998a07dd53ec478e27017d9dba5",
        "unit_typing"
      ],
      0,
      "6cf51a8bd59b7e7e4aebad9f087d468b"
    ],
    [
      "LowParseExample10.t_intro_other",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Pervasives.Native_pretyping_b53dbd183c526bc5d0f20d7b966ae125",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_elim_LowParse.Spec.Base.Mkparser_kind_",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Pervasives.dfst", "equation_FStar.Pervasives.dsnd",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.parser_kind_metadata_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Combinators.and_then_metadata",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_HelloRetryRequest_",
        "equation_LowParseExample10.parse_t",
        "equation_LowParseExample10.parse_t_kind",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.t_payload",
        "equation_LowParseExample10.t_synth",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "function_token_typing_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_synth",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_synth",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_FStar.UInt_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_synth",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "token_correspondence_LowParseExample10.t_synth",
        "token_correspondence_LowParseExample10.t_tag_cond",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length"
      ],
      0,
      "465269e630c012ead53c42725b269162"
    ],
    [
      "LowParseExample10.main",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "equality_tok_C.EXIT_SUCCESS@tok",
        "equation_FStar.HyperStack.ST.equal_domains",
        "equation_FStar.Monotonic.Heap.equal_dom",
        "equation_FStar.Monotonic.HyperHeap.hmap",
        "equation_FStar.Monotonic.HyperStack.mem",
        "function_token_typing_FStar.Monotonic.Heap.heap",
        "lemma_FStar.HyperStack.ST.lemma_same_refs_in_all_regions_intro",
        "lemma_FStar.Set.lemma_equal_refl",
        "refinement_interpretation_Tm_refine_9a74d818566e70513bc032cc3b65a144",
        "typing_FStar.Map.domain", "typing_FStar.Monotonic.HyperHeap.rid",
        "typing_FStar.Monotonic.HyperStack.get_hmap",
        "typing_tok_C.EXIT_SUCCESS@tok"
      ],
      0,
      "c40afcdb7976603c5eb181ea78f1b7b3"
    ]
  ]
]