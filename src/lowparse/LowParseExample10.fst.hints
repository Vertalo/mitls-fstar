[
  "¿Ï˜6Ì†TÎ“Ú+$š1~A",
  [
    [
      "LowParseExample10.msg_type_HelloRetryRequest",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "68b54b77003ff57bca9ff291338f0463"
    ],
    [
      "LowParseExample10.msg_type_other",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "equation_FStar.Bytes.lbytes",
        "equation_LowParseExample10.msg_type",
        "haseqTm_refine_b0383769854f2b8d05d9f8fb03a8cbd4",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "typing_FStar.Bytes.bytes"
      ],
      0,
      "88f7216d10817b1f635e0ff4a931c9fe"
    ],
    [
      "LowParseExample10.__proj__HelloRetryRequest__item___0",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "disc_equation_LowParseExample10.HelloRetryRequest",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_b27395aca785c5f0dff5cf7eb1ddbe7b"
      ],
      0,
      "ed13958e4c75c2903176c69c11f72a4e"
    ],
    [
      "LowParseExample10.__proj__Other__item___0",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "disc_equation_LowParseExample10.Other",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_8148533b4aef5ed92e970bdd6a36d495"
      ],
      0,
      "4de9cf11f31f4b721fcd7adcbf316518"
    ],
    [
      "LowParseExample10.t_tag_cond",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "equation_FStar.Bytes.lbytes",
        "equation_LowParseExample10.msg_type",
        "haseqTm_refine_b0383769854f2b8d05d9f8fb03a8cbd4",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "typing_FStar.Bytes.bytes"
      ],
      0,
      "28dbb992346adcaefbe4fc79110fda2a"
    ],
    [
      "LowParseExample10.parse_t_payload",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion",
        "equation_LowParseExample10.t_payload"
      ],
      0,
      "063d0daee456f62fbce99bafb0a9ef95"
    ],
    [
      "LowParseExample10.t_synth",
      1,
      2,
      1,
      [
        "@query", "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_HelloRetryRequest_",
        "equation_LowParseExample10.t_payload",
        "equation_LowParseExample10.t_tag_cond",
        "primitive_Prims.op_Equality"
      ],
      0,
      "788889668b083d2b9e639ff700c403e6"
    ],
    [
      "LowParseExample10.parse_t_param",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_LowParseExample10.HelloRetryRequest",
        "constructor_distinct_LowParseExample10.Other",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_HelloRetryRequest_",
        "equation_LowParseExample10.t_synth",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "primitive_Prims.op_Equality",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParseExample10.HelloRetryRequest__0",
        "projection_inverse_LowParseExample10.Mkt_other_contents",
        "projection_inverse_LowParseExample10.Mkt_other_msg_type",
        "projection_inverse_LowParseExample10.Other__0"
      ],
      0,
      "bf10358a2f9d61535c00a5a1da34d4ce"
    ],
    [
      "LowParseExample10.parse_t",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Pervasives.Native_pretyping_b53dbd183c526bc5d0f20d7b966ae125",
        "LowParseExample10_interpretation_Tm_arrow_604a12f64f1d9f0b1f9fc67bfbb0eaf1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_elim_LowParse.Spec.Base.Mkparser_kind_",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Pervasives.dfst", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload", "equation_Prims.nat",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "function_token_typing_LowParseExample10.parse_t_param",
        "function_token_typing_LowParseExample10.parse_t_payload",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Prims.nat", "int_inversion",
        "lemma_FStar.Pervasives.invertOption", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_Prims.Mkdtuple2__1",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2_b",
        "refinement_interpretation_FStar.UInt_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "refinement_interpretation_LowParse.Spec.Base_Tm_refine_9fc4b705eaf2fe68d9cc8785e7df72bf",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind"
      ],
      0,
      "23fec44ce5d7c39474f8102dc5e11904"
    ],
    [
      "LowParseExample10.serialize_t_payload",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_b97e1e5c8e297e7763719037d4e387c3",
        "Prims_pretyping_f537159ed795b314b4e58c260361ae86", "bool_inversion",
        "bool_typing", "constructor_distinct_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.Pervasives.dsnd",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.t_payload", "equation_Prims.nat",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParseExample10.parse_t_param",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "projection_inverse_Prims.Mkdtuple2_b",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "typing_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser"
      ],
      0,
      "18ea71d5133e1d5e9c7f9b7c90c567b5"
    ],
    [
      "LowParseExample10.t_synth_recip",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "disc_equation_LowParseExample10.HelloRetryRequest",
        "disc_equation_LowParseExample10.Other",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_other",
        "equation_LowParseExample10.t_payload",
        "equation_LowParseExample10.t_tag_cond",
        "fuel_guarded_inversion_LowParseExample10.t",
        "primitive_Prims.op_Equality",
        "proj_equation_LowParseExample10.Mkt_other_msg_type",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_f0496eb03f3fb51b5e4ca0d53ea58c01",
        "typing_LowParseExample10.__proj__Mkt_other__item__contents",
        "typing_LowParseExample10.__proj__Mkt_other__item__msg_type"
      ],
      0,
      "42722f5f4f77024455fc9ce1566c5e2c"
    ],
    [
      "LowParseExample10.serialize_t_param",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParseExample10_pretyping_f0231244d75fee90e4c78cc6de8957b9",
        "data_elim_LowParseExample10.Other", "equation_FStar.UInt.min_int",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_other",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.t_synth",
        "equation_LowParseExample10.t_synth_recip",
        "equation_LowParseExample10.t_tag_cond",
        "fuel_guarded_inversion_LowParseExample10.t",
        "fuel_guarded_inversion_LowParseExample10.t_other",
        "primitive_Prims.op_Equality", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_synth",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParseExample10.Mkt_other_contents",
        "proj_equation_LowParseExample10.Mkt_other_msg_type",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_synth",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_Tm_refine_f0496eb03f3fb51b5e4ca0d53ea58c01",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_synth",
        "token_correspondence_LowParseExample10.t_synth",
        "typing_LowParseExample10.__proj__Mkt_other__item__msg_type"
      ],
      0,
      "d7864ab5bd9f99fc1665f45b9a43436d"
    ],
    [
      "LowParseExample10.serialize_t",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Pervasives.Native_pretyping_b53dbd183c526bc5d0f20d7b966ae125",
        "LowParseExample10_interpretation_Tm_arrow_604a12f64f1d9f0b1f9fc67bfbb0eaf1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_elim_LowParse.Spec.Base.Mkparser_kind_",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Pervasives.dfst", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload", "equation_Prims.nat",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "function_token_typing_LowParseExample10.parse_t_payload",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_Prims.Mkdtuple2__1",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_Prims.Mkdtuple2__1",
        "refinement_interpretation_FStar.UInt_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length"
      ],
      0,
      "d885018db8e2fb1823bca125fb472006"
    ],
    [
      "LowParseExample10.parse32_t",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "LowParseExample10_interpretation_Tm_arrow_3eea9580507f50fd4c64a460891f6585",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.Pervasives.dfst",
        "equation_FStar.Pervasives.dsnd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Bytes.parse_flbytes",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.t_payload",
        "equation_LowParseExample10.t_synth",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParseExample10.parse_t_payload",
        "function_token_typing_LowParseExample10.t_tag_cond",
        "function_token_typing_Prims.__cache_version_number__",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_synth",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_synth",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_Tm_refine_4926c3a5c6882fc85df8d4d50feba2b8",
        "refinement_interpretation_Tm_refine_721fb2a54217de3b9128452b3504409b",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "refinement_interpretation_Tm_refine_b0383769854f2b8d05d9f8fb03a8cbd4",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_synth",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "token_correspondence_LowParseExample10.t_synth",
        "token_correspondence_LowParseExample10.t_tag_cond",
        "typing_FStar.UInt32.v"
      ],
      0,
      "9bf3a34b8df947be61d2cb62f7094263"
    ],
    [
      "LowParseExample10.serialize32_t",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_62cc14b5bc99202a16dfbf4047012081",
        "LowParseExample10_interpretation_Tm_arrow_3eea9580507f50fd4c64a460891f6585",
        "LowParseExample10_interpretation_Tm_arrow_5a7ab0d9e9579d7c6b774a19441bfcf3",
        "LowParseExample10_pretyping_f0231244d75fee90e4c78cc6de8957b9",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "constructor_distinct_LowParseExample10.HelloRetryRequest",
        "constructor_distinct_LowParseExample10.Other",
        "data_elim_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param",
        "data_elim_LowParseExample10.Mkt_other",
        "data_elim_LowParseExample10.Other", "data_elim_Prims.Mkdtuple2",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "disc_equation_LowParseExample10.HelloRetryRequest",
        "disc_equation_LowParseExample10.Other",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.Pervasives.dfst",
        "equation_FStar.Pervasives.dsnd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_other",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.serialize_t",
        "equation_LowParseExample10.serialize_t_param",
        "equation_LowParseExample10.serialize_t_payload",
        "equation_LowParseExample10.t_payload",
        "equation_LowParseExample10.t_synth_recip",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "fuel_guarded_inversion_LowParseExample10.t",
        "fuel_guarded_inversion_LowParseExample10.t_other",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParseExample10.parse_t_payload",
        "function_token_typing_LowParseExample10.t_synth_recip",
        "function_token_typing_LowParseExample10.t_tag_cond",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion",
        "interpretation_Tm_abs_09c28ab1a9f7d546838dbe2b397edec9",
        "interpretation_Tm_abs_3d2ad010c580b423b4f1f8212c7606b4",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_payload_serializer",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_tag_serializer",
        "proj_equation_LowParseExample10.Mkt_other_msg_type",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_payload_serializer",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_tag_serializer",
        "projection_inverse_LowParseExample10.HelloRetryRequest__0",
        "projection_inverse_LowParseExample10.Other__0",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_Tm_refine_07033d2b2c1d2fb6c1dd88a8f1110ac2",
        "refinement_interpretation_Tm_refine_71309db5c8a02161752d5b2e74801d2c",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "refinement_interpretation_Tm_refine_b0383769854f2b8d05d9f8fb03a8cbd4",
        "refinement_interpretation_Tm_refine_f0496eb03f3fb51b5e4ca0d53ea58c01",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkserialize_ifthenelse_param__item__serialize_ifthenelse_payload_serializer",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkserialize_ifthenelse_param__item__serialize_ifthenelse_synth_recip",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.serialize_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "token_correspondence_LowParseExample10.t_synth_recip",
        "token_correspondence_LowParseExample10.t_tag_cond",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length",
        "typing_LowParseExample10.__proj__Mkt_other__item__contents",
        "typing_LowParseExample10.__proj__Mkt_other__item__msg_type",
        "typing_LowParseExample10.msg_type_HelloRetryRequest"
      ],
      0,
      "d301ff86a0cbde1b18793d763e605790"
    ],
    [
      "LowParseExample10.size32_t",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_62cc14b5bc99202a16dfbf4047012081",
        "LowParseExample10_interpretation_Tm_arrow_3eea9580507f50fd4c64a460891f6585",
        "LowParseExample10_interpretation_Tm_arrow_5a7ab0d9e9579d7c6b774a19441bfcf3",
        "LowParseExample10_pretyping_f0231244d75fee90e4c78cc6de8957b9",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "constructor_distinct_LowParseExample10.HelloRetryRequest",
        "constructor_distinct_LowParseExample10.Other",
        "data_elim_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param",
        "data_elim_LowParseExample10.Mkt_other",
        "data_elim_LowParseExample10.Other", "data_elim_Prims.Mkdtuple2",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "disc_equation_LowParseExample10.HelloRetryRequest",
        "disc_equation_LowParseExample10.Other",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.Pervasives.dfst",
        "equation_FStar.Pervasives.dsnd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.SLow.Base.size32_constant_precond",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_other",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.serialize_t",
        "equation_LowParseExample10.serialize_t_param",
        "equation_LowParseExample10.serialize_t_payload",
        "equation_LowParseExample10.t_payload",
        "equation_LowParseExample10.t_synth_recip",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "fuel_guarded_inversion_LowParseExample10.t",
        "fuel_guarded_inversion_LowParseExample10.t_other",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParseExample10.parse_t_payload",
        "function_token_typing_LowParseExample10.t_synth_recip",
        "function_token_typing_LowParseExample10.t_tag_cond",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion",
        "interpretation_Tm_abs_09c28ab1a9f7d546838dbe2b397edec9",
        "interpretation_Tm_abs_3d2ad010c580b423b4f1f8212c7606b4",
        "lemma_FStar.UInt32.uv_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_payload_serializer",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_tag_serializer",
        "proj_equation_LowParseExample10.Mkt_other_msg_type",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_payload_serializer",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_tag_serializer",
        "projection_inverse_LowParseExample10.HelloRetryRequest__0",
        "projection_inverse_LowParseExample10.Other__0",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_Tm_refine_07033d2b2c1d2fb6c1dd88a8f1110ac2",
        "refinement_interpretation_Tm_refine_71309db5c8a02161752d5b2e74801d2c",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "refinement_interpretation_Tm_refine_b0383769854f2b8d05d9f8fb03a8cbd4",
        "refinement_interpretation_Tm_refine_f0496eb03f3fb51b5e4ca0d53ea58c01",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkserialize_ifthenelse_param__item__serialize_ifthenelse_payload_serializer",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkserialize_ifthenelse_param__item__serialize_ifthenelse_synth_recip",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.serialize_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "token_correspondence_LowParseExample10.t_synth_recip",
        "token_correspondence_LowParseExample10.t_tag_cond",
        "typing_FStar.Bytes.len", "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length",
        "typing_LowParseExample10.__proj__Mkt_other__item__contents",
        "typing_LowParseExample10.__proj__Mkt_other__item__msg_type",
        "typing_LowParseExample10.msg_type_HelloRetryRequest",
        "typing_LowParseExample10.msg_type_HelloRetryRequest_"
      ],
      0,
      "39d072c68bb437c546654eba792ee592"
    ],
    [
      "LowParseExample10.test_HelloRetryRequest",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion",
        "equation_FStar.Bytes.lbytes",
        "equation_FStar.Monotonic.HyperStack.mem",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.t_tag_cond",
        "fuel_guarded_inversion_LowParse.Low.Base.slice",
        "primitive_Prims.op_Equality",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "refinement_interpretation_Tm_refine_1c74b2b61a6d377c2449ad4e10dade85",
        "refinement_interpretation_Tm_refine_b0383769854f2b8d05d9f8fb03a8cbd4",
        "refinement_interpretation_Tm_refine_c060639a5717524442b06ff525743bf4",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParseExample10.t_tag_cond",
        "typing_LowParseExample10.msg_type_HelloRetryRequest"
      ],
      0,
      "f5e49c16f9562c3e76554c2b1b036a0c"
    ],
    [
      "LowParseExample10.test_HelloRetryRequest",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "equation_FStar.Monotonic.HyperStack.mem",
        "refinement_interpretation_Tm_refine_c060639a5717524442b06ff525743bf4"
      ],
      0,
      "f76a005c4af85b5b7f2551cecddc728d"
    ],
    [
      "LowParseExample10.validate_t",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_02becc629355d2797fd015c10e1b77dc",
        "LowParseExample10_interpretation_Tm_arrow_3eea9580507f50fd4c64a460891f6585",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_elim_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param",
        "data_elim_Prims.Mkdtuple2",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.Pervasives.dfst",
        "equation_FStar.Pervasives.dsnd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.parser_kind_metadata_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.t_payload", "equation_Prims.nat",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParseExample10.parse_t_payload",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Prims.nat",
        "lemma_FStar.Pervasives.invertOption", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_Tm_refine_07033d2b2c1d2fb6c1dd88a8f1110ac2",
        "refinement_interpretation_Tm_refine_109040755b4d561330e03553f10a188b",
        "refinement_interpretation_Tm_refine_9fc4b705eaf2fe68d9cc8785e7df72bf",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "refinement_interpretation_Tm_refine_b0383769854f2b8d05d9f8fb03a8cbd4",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "typing_FStar.Bytes.len", "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_LowParse.Spec.Base.glb",
        "typing_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParseExample10.msg_type_HelloRetryRequest",
        "typing_LowParseExample10.msg_type_HelloRetryRequest_",
        "typing_LowParseExample10.parse_t_param"
      ],
      0,
      "40e127ca48492e4d5947006fe6c4f4a2"
    ],
    [
      "LowParseExample10.jump_t",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Pervasives.Native_pretyping_b53dbd183c526bc5d0f20d7b966ae125",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_58a05dab681568e2152048deebc856f7",
        "LowParseExample10_interpretation_Tm_arrow_604a12f64f1d9f0b1f9fc67bfbb0eaf1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_elim_LowParse.Spec.Base.Mkparser_kind_",
        "data_elim_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Pervasives.dfst", "equation_FStar.Pervasives.dsnd",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.jump_constant_size",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.Low.Int.jump_u16",
        "equation_LowParse.Low.Int.jump_u32",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.t_payload", "equation_Prims.nat",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "function_token_typing_LowParseExample10.parse_t_param",
        "function_token_typing_LowParseExample10.parse_t_payload",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_FStar.UInt_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length"
      ],
      0,
      "aab439632cdfe959b279f8afb0ab1d04"
    ],
    [
      "LowParseExample10.t_elim",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "disc_equation_LowParseExample10.HelloRetryRequest",
        "disc_equation_LowParseExample10.Other", "equation_Prims.squash",
        "fuel_guarded_inversion_LowParseExample10.t",
        "refinement_interpretation_Tm_refine_8d65e998a07dd53ec478e27017d9dba5"
      ],
      0,
      "1cce3f8d23513d6d83e44e4c56b62857"
    ],
    [
      "LowParseExample10.t_elim",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Pervasives.Native_pretyping_b53dbd183c526bc5d0f20d7b966ae125",
        "LowParseExample10_interpretation_Tm_arrow_604a12f64f1d9f0b1f9fc67bfbb0eaf1",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "constructor_distinct_LowParseExample10.HelloRetryRequest",
        "constructor_distinct_LowParseExample10.Other",
        "data_elim_LowParse.Spec.Base.Mkparser_kind_",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Pervasives.dfst", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.valid_content",
        "equation_LowParse.Low.Base.valid_content_pos",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.parser_kind_metadata_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Combinators.and_then_metadata",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_HelloRetryRequest_",
        "equation_LowParseExample10.parse_t",
        "equation_LowParseExample10.parse_t_kind",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.t_synth",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "fuel_guarded_inversion_LowParse.Low.Base.slice",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "function_token_typing_LowParseExample10.parse_t_payload",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_synth",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_LowParseExample10.Mkt_other_msg_type",
        "proj_equation_Prims.Mkdtuple2__1",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_synth",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_LowParseExample10.HelloRetryRequest__0",
        "projection_inverse_LowParseExample10.Mkt_other_msg_type",
        "projection_inverse_LowParseExample10.Other__0",
        "projection_inverse_Prims.Mkdtuple2__1",
        "refinement_interpretation_FStar.UInt_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_synth",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.t_synth",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length"
      ],
      0,
      "d1950643165e15b74a96ba03e41ded51"
    ],
    [
      "LowParseExample10.t_test_HelloRetryRequest",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "equation_FStar.Monotonic.HyperStack.mem",
        "refinement_interpretation_Tm_refine_c4ec5147bd06d91f6b75cba20cce33ed"
      ],
      0,
      "58970e7863ab853cee9b72d31dfca219"
    ],
    [
      "LowParseExample10.t_test_HelloRetryRequest",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParseExample10_pretyping_f0231244d75fee90e4c78cc6de8957b9",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_LowParseExample10.Other",
        "disc_equation_FStar.Pervasives.Native.Some",
        "disc_equation_LowParseExample10.HelloRetryRequest",
        "equation_FStar.Monotonic.HyperStack.mem",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Bytes.parse_flbytes",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_other",
        "equation_LowParseExample10.parse_t",
        "equation_LowParseExample10.parse_t_kind",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "fuel_guarded_inversion_LowParse.Low.Base.slice",
        "fuel_guarded_inversion_LowParseExample10.t",
        "fuel_guarded_inversion_LowParseExample10.t_other",
        "kinding_LowParseExample10.t@tok", "primitive_Prims.op_Equality",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "refinement_interpretation_Tm_refine_c060639a5717524442b06ff525743bf4",
        "refinement_interpretation_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b",
        "refinement_interpretation_Tm_refine_c4ec5147bd06d91f6b75cba20cce33ed",
        "refinement_interpretation_Tm_refine_f0496eb03f3fb51b5e4ca0d53ea58c01",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParseExample10.t_tag_cond",
        "typing_LowParse.Low.Base.contents",
        "typing_LowParseExample10.__proj__Mkt_other__item__msg_type",
        "typing_LowParseExample10.parse_t",
        "typing_LowParseExample10.parse_t_kind"
      ],
      0,
      "15bfa697fd1c3b766f21cae75cc70a7f"
    ],
    [
      "LowParseExample10.clens_HelloRetryRequest",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion",
        "disc_equation_LowParseExample10.HelloRetryRequest",
        "typing_LowParseExample10.uu___is_HelloRetryRequest"
      ],
      0,
      "e5e05627263f124af3c578cb043698ee"
    ],
    [
      "LowParseExample10.t_gaccessor_HelloRetryRequest",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.UInt32_pretyping_041e3a67a2d2b51fd702f1f88cfc3b44",
        "LowParse.Low.Base_interpretation_Tm_arrow_4a60cee54783322023f20d9c14aaaf26",
        "LowParse.Low.Base_interpretation_Tm_arrow_e10244fef8e647789619c7fac8710174",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_02becc629355d2797fd015c10e1b77dc",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_8e87e96daba885a82ddb988e32e86e88",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_e415e9ab718ed317c2fe77ef40313125",
        "LowParseExample10_interpretation_Tm_arrow_3eea9580507f50fd4c64a460891f6585",
        "LowParseExample10_pretyping_f0231244d75fee90e4c78cc6de8957b9",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f537159ed795b314b4e58c260361ae86",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_FStar.UInt32.t",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "constructor_distinct_Prims.unit",
        "data_elim_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param",
        "data_elim_LowParseExample10.Other", "data_elim_Prims.Mkdtuple2",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "disc_equation_LowParseExample10.HelloRetryRequest", "eq2-interp",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.Pervasives.dfst",
        "equation_FStar.Pervasives.dsnd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Low.Base.clens_eq",
        "equation_LowParse.Low.IfThenElse.clens_ifthenelse_payload",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.parser_kind_metadata_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.clens_HelloRetryRequest",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_other",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.serialize_t_param",
        "equation_LowParseExample10.t_payload",
        "equation_LowParseExample10.t_synth_recip",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_LowParseExample10.t",
        "fuel_guarded_inversion_LowParseExample10.t_other",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "function_token_typing_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "function_token_typing_LowParseExample10.parse_t_payload",
        "function_token_typing_LowParseExample10.t_tag_cond",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Prims.nat", "int_inversion", "int_typing",
        "interpretation_Tm_abs_51a22a2862df093c63b5483a890ddce4",
        "interpretation_Tm_abs_5766817d79a53360a286fdd98cee8273",
        "interpretation_Tm_abs_6e153a8a75e9f4014e6b1d0e3f86032b",
        "interpretation_Tm_abs_ece18789b56d84d5afe36e9513c515d6",
        "kinding_LowParseExample10.t@tok",
        "lemma_FStar.Pervasives.invertOption", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_cond",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_get",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "proj_equation_LowParseExample10.Mkt_other_msg_type",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_cond",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_get",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_Tm_refine_109040755b4d561330e03553f10a188b",
        "refinement_interpretation_Tm_refine_9fc4b705eaf2fe68d9cc8785e7df72bf",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "refinement_interpretation_Tm_refine_b0383769854f2b8d05d9f8fb03a8cbd4",
        "refinement_interpretation_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b",
        "refinement_interpretation_Tm_refine_f0496eb03f3fb51b5e4ca0d53ea58c01",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_cond",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkserialize_ifthenelse_param__item__serialize_ifthenelse_synth_recip",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "token_correspondence_LowParseExample10.t_synth_recip",
        "token_correspondence_LowParseExample10.t_tag_cond",
        "typing_FStar.Bytes.len", "typing_FStar.UInt32.v",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_LowParse.Spec.Base.glb",
        "typing_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParseExample10.__proj__Mkt_other__item__msg_type",
        "typing_LowParseExample10.clens_HelloRetryRequest",
        "typing_LowParseExample10.msg_type_HelloRetryRequest",
        "typing_LowParseExample10.msg_type_HelloRetryRequest_",
        "typing_LowParseExample10.parse_t_param", "unit_typing"
      ],
      0,
      "5512adc85a2a73d10593a254484aec19"
    ],
    [
      "LowParseExample10.t_accessor_HelloRetryRequest",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.UInt32_pretyping_041e3a67a2d2b51fd702f1f88cfc3b44",
        "LowParse.Low.Base_interpretation_Tm_arrow_4a60cee54783322023f20d9c14aaaf26",
        "LowParse.Low.Base_interpretation_Tm_arrow_e10244fef8e647789619c7fac8710174",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_02becc629355d2797fd015c10e1b77dc",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_62cc14b5bc99202a16dfbf4047012081",
        "LowParseExample10_interpretation_Tm_arrow_3eea9580507f50fd4c64a460891f6585",
        "LowParseExample10_pretyping_f0231244d75fee90e4c78cc6de8957b9",
        "Prims_interpretation_Tm_arrow_e06752ba152f81447b312efcdf8f0e23",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f537159ed795b314b4e58c260361ae86",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_FStar.UInt32.t",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "constructor_distinct_Prims.unit",
        "data_elim_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param",
        "data_elim_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param",
        "data_elim_LowParseExample10.Other", "data_elim_Prims.Mkdtuple2",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "disc_equation_LowParseExample10.HelloRetryRequest", "eq2-interp",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equality_tok_LowParse.Spec.Base.ParserStrong@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.Pervasives.dfst",
        "equation_FStar.Pervasives.dsnd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Low.Base.clens_eq",
        "equation_LowParse.Low.IfThenElse.clens_ifthenelse_payload",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.parser_kind_metadata_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.clens_HelloRetryRequest",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_other",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.serialize_t_param",
        "equation_LowParseExample10.t_payload",
        "equation_LowParseExample10.t_synth_recip",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_LowParseExample10.t",
        "fuel_guarded_inversion_LowParseExample10.t_other",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "function_token_typing_LowParseExample10.parse_t_payload",
        "function_token_typing_LowParseExample10.t_payload",
        "function_token_typing_LowParseExample10.t_synth_recip",
        "function_token_typing_LowParseExample10.t_tag_cond",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Prims.nat", "int_inversion", "int_typing",
        "interpretation_Tm_abs_51a22a2862df093c63b5483a890ddce4",
        "interpretation_Tm_abs_5766817d79a53360a286fdd98cee8273",
        "interpretation_Tm_abs_6e153a8a75e9f4014e6b1d0e3f86032b",
        "interpretation_Tm_abs_ece18789b56d84d5afe36e9513c515d6",
        "kinding_LowParseExample10.t@tok",
        "lemma_FStar.Pervasives.invertOption", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_cond",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_get",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "proj_equation_LowParseExample10.Mkt_other_msg_type",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_cond",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_get",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_Tm_refine_109040755b4d561330e03553f10a188b",
        "refinement_interpretation_Tm_refine_9fc4b705eaf2fe68d9cc8785e7df72bf",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "refinement_interpretation_Tm_refine_b0383769854f2b8d05d9f8fb03a8cbd4",
        "refinement_interpretation_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b",
        "refinement_interpretation_Tm_refine_f0496eb03f3fb51b5e4ca0d53ea58c01",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_cond",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkserialize_ifthenelse_param__item__serialize_ifthenelse_synth_recip",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "token_correspondence_LowParseExample10.t_synth_recip",
        "token_correspondence_LowParseExample10.t_tag_cond",
        "typing_FStar.Bytes.len", "typing_FStar.UInt32.v",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_LowParse.Spec.Base.glb",
        "typing_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParseExample10.__proj__Mkt_other__item__msg_type",
        "typing_LowParseExample10.clens_HelloRetryRequest",
        "typing_LowParseExample10.msg_type_HelloRetryRequest",
        "typing_LowParseExample10.msg_type_HelloRetryRequest_",
        "typing_LowParseExample10.parse_t_param",
        "typing_LowParseExample10.t_synth_recip", "unit_typing"
      ],
      0,
      "09b7ec88d322eeeafb10dd1587b34cf8"
    ],
    [
      "LowParseExample10.clens_other",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion",
        "disc_equation_LowParseExample10.Other",
        "typing_LowParseExample10.uu___is_Other"
      ],
      0,
      "9fa5a2935c4c7a1babad194c6ee2f044"
    ],
    [
      "LowParseExample10.t_gaccessor_other",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.UInt16_pretyping_9807ddb0e569187e389675611f2acf1e",
        "LowParse.Low.Base_interpretation_Tm_arrow_4a60cee54783322023f20d9c14aaaf26",
        "LowParse.Low.Base_interpretation_Tm_arrow_e10244fef8e647789619c7fac8710174",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_62cc14b5bc99202a16dfbf4047012081",
        "LowParseExample10_interpretation_Tm_arrow_5a7ab0d9e9579d7c6b774a19441bfcf3",
        "LowParseExample10_pretyping_f0231244d75fee90e4c78cc6de8957b9",
        "Prims_interpretation_Tm_arrow_e06752ba152f81447b312efcdf8f0e23",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f537159ed795b314b4e58c260361ae86",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_FStar.UInt16.t",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "constructor_distinct_Prims.unit",
        "data_elim_LowParse.Spec.Base.Mkparser_kind_",
        "data_elim_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param",
        "data_elim_LowParseExample10.Other",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "disc_equation_LowParseExample10.Other", "eq2-interp",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.Pervasives.dfst",
        "equation_FStar.Pervasives.dsnd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Low.Base.clens_eq",
        "equation_LowParse.Low.IfThenElse.clens_ifthenelse_payload",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.parser_kind_metadata_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.clens_other",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_other",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.serialize_t_param",
        "equation_LowParseExample10.t_payload",
        "equation_LowParseExample10.t_synth_recip",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_LowParse.Spec.Base.parser_kind_",
        "fuel_guarded_inversion_LowParseExample10.t",
        "fuel_guarded_inversion_LowParseExample10.t_other",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "function_token_typing_LowParseExample10.t_payload",
        "function_token_typing_LowParseExample10.t_synth_recip",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Prims.nat", "int_inversion", "int_typing",
        "interpretation_Tm_abs_5766817d79a53360a286fdd98cee8273",
        "interpretation_Tm_abs_6a782478763b807e4aa948680efc75bc",
        "interpretation_Tm_abs_6e153a8a75e9f4014e6b1d0e3f86032b",
        "interpretation_Tm_abs_edcf95dadee8575b35c7e4d8a532f8ef",
        "kinding_LowParseExample10.t@tok",
        "lemma_FStar.Pervasives.invertOption", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_cond",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_get",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_cond",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_get",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_Tm_refine_109040755b4d561330e03553f10a188b",
        "refinement_interpretation_Tm_refine_4d5241eb6fe198666a8101195bbd4a2a",
        "refinement_interpretation_Tm_refine_9fc4b705eaf2fe68d9cc8785e7df72bf",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "refinement_interpretation_Tm_refine_b0383769854f2b8d05d9f8fb03a8cbd4",
        "refinement_interpretation_Tm_refine_ba523126f67e00e7cd55f0b92f16681d",
        "refinement_interpretation_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b",
        "refinement_interpretation_Tm_refine_f0496eb03f3fb51b5e4ca0d53ea58c01",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_cond",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkserialize_ifthenelse_param__item__serialize_ifthenelse_synth_recip",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "token_correspondence_LowParseExample10.t_synth_recip",
        "token_correspondence_LowParseExample10.t_tag_cond",
        "typing_FStar.Bytes.len",
        "typing_FStar.Pervasives.Native.__proj__Some__item__v",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_metadata",
        "typing_LowParse.Spec.Base.glb",
        "typing_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "typing_LowParse.Spec.Int.parse_u16_kind",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParseExample10.__proj__Mkt_other__item__msg_type",
        "typing_LowParseExample10.clens_other",
        "typing_LowParseExample10.msg_type_HelloRetryRequest",
        "typing_LowParseExample10.msg_type_HelloRetryRequest_",
        "typing_LowParseExample10.parse_t_param",
        "typing_LowParseExample10.serialize_t_param", "unit_typing"
      ],
      0,
      "63de682f2dcd6f1186ec2526fa589143"
    ],
    [
      "LowParseExample10.t_accessor_other",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.UInt16_pretyping_9807ddb0e569187e389675611f2acf1e",
        "LowParse.Low.Base_interpretation_Tm_arrow_4a60cee54783322023f20d9c14aaaf26",
        "LowParse.Low.Base_interpretation_Tm_arrow_e10244fef8e647789619c7fac8710174",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_02becc629355d2797fd015c10e1b77dc",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_62cc14b5bc99202a16dfbf4047012081",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_8e87e96daba885a82ddb988e32e86e88",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_e415e9ab718ed317c2fe77ef40313125",
        "LowParseExample10_interpretation_Tm_arrow_3eea9580507f50fd4c64a460891f6585",
        "LowParseExample10_interpretation_Tm_arrow_5a7ab0d9e9579d7c6b774a19441bfcf3",
        "LowParseExample10_pretyping_f0231244d75fee90e4c78cc6de8957b9",
        "Prims_interpretation_Tm_arrow_e06752ba152f81447b312efcdf8f0e23",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f537159ed795b314b4e58c260361ae86",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_FStar.UInt16.t",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "constructor_distinct_Prims.unit",
        "data_elim_LowParse.Spec.Base.Mkparser_kind_",
        "data_elim_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param",
        "data_elim_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param",
        "data_elim_LowParseExample10.Mkt_other",
        "data_elim_LowParseExample10.Other",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "disc_equation_LowParseExample10.Other", "eq2-interp",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equality_tok_LowParse.Spec.Base.ParserStrong@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.Pervasives.dfst",
        "equation_FStar.Pervasives.dsnd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Low.Base.clens_eq",
        "equation_LowParse.Low.IfThenElse.clens_ifthenelse_payload",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.parser_kind_metadata_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.clens_other",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_other",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.serialize_t_param",
        "equation_LowParseExample10.t_payload",
        "equation_LowParseExample10.t_synth_recip",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_LowParse.Spec.Base.parser_kind_",
        "fuel_guarded_inversion_LowParseExample10.t",
        "fuel_guarded_inversion_LowParseExample10.t_other",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "function_token_typing_LowParse.Spec.Base.parser_kind",
        "function_token_typing_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "function_token_typing_LowParseExample10.parse_t_payload",
        "function_token_typing_LowParseExample10.t_payload",
        "function_token_typing_LowParseExample10.t_synth_recip",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Prims.nat", "int_inversion", "int_typing",
        "interpretation_Tm_abs_5766817d79a53360a286fdd98cee8273",
        "interpretation_Tm_abs_6a782478763b807e4aa948680efc75bc",
        "interpretation_Tm_abs_6e153a8a75e9f4014e6b1d0e3f86032b",
        "interpretation_Tm_abs_edcf95dadee8575b35c7e4d8a532f8ef",
        "kinding_LowParseExample10.t@tok",
        "lemma_FStar.Pervasives.invertOption", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_cond",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_get",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "proj_equation_LowParseExample10.Mkt_other_msg_type",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_cond",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_get",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_Tm_refine_109040755b4d561330e03553f10a188b",
        "refinement_interpretation_Tm_refine_4d5241eb6fe198666a8101195bbd4a2a",
        "refinement_interpretation_Tm_refine_9fc4b705eaf2fe68d9cc8785e7df72bf",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "refinement_interpretation_Tm_refine_b0383769854f2b8d05d9f8fb03a8cbd4",
        "refinement_interpretation_Tm_refine_ba523126f67e00e7cd55f0b92f16681d",
        "refinement_interpretation_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b",
        "refinement_interpretation_Tm_refine_f0496eb03f3fb51b5e4ca0d53ea58c01",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_cond",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkserialize_ifthenelse_param__item__serialize_ifthenelse_synth_recip",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "token_correspondence_LowParseExample10.t_synth_recip",
        "token_correspondence_LowParseExample10.t_tag_cond",
        "typing_FStar.Bytes.len",
        "typing_FStar.Pervasives.Native.__proj__Some__item__v",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_metadata",
        "typing_LowParse.Spec.Base.glb",
        "typing_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParseExample10.clens_other",
        "typing_LowParseExample10.msg_type_HelloRetryRequest",
        "typing_LowParseExample10.msg_type_HelloRetryRequest_",
        "typing_LowParseExample10.parse_t_param",
        "typing_Prims.__proj__Mkdtuple2__item___1",
        "typing_Tm_abs_4f6e32afbcd10f305b42112ef6384669", "unit_typing"
      ],
      0,
      "9b6e4516065b5a9e8602486f28edb71f"
    ],
    [
      "LowParseExample10.t_intro_HelloRetryRequest",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "equation_Prims.squash", "l_and-interp",
        "refinement_interpretation_Tm_refine_8d65e998a07dd53ec478e27017d9dba5",
        "unit_typing"
      ],
      0,
      "43160f0fb7ec1df2c86d153cc3d11825"
    ],
    [
      "LowParseExample10.t_intro_HelloRetryRequest",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Pervasives.Native_pretyping_b53dbd183c526bc5d0f20d7b966ae125",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_elim_LowParse.Spec.Base.Mkparser_kind_",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Pervasives.dfst", "equation_FStar.Pervasives.dsnd",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.parser_kind_metadata_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Combinators.and_then_metadata",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_HelloRetryRequest_",
        "equation_LowParseExample10.parse_t",
        "equation_LowParseExample10.parse_t_kind",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.t_payload",
        "equation_LowParseExample10.t_synth",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "function_token_typing_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_synth",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_synth",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_FStar.UInt_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_synth",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "token_correspondence_LowParseExample10.t_synth",
        "token_correspondence_LowParseExample10.t_tag_cond",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length"
      ],
      0,
      "d75769aaf26f32c0161d85a569100306"
    ],
    [
      "LowParseExample10.t_intro_other",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "eq2-interp",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_Prims.squash", "l_and-interp", "l_not-interp",
        "refinement_interpretation_Tm_refine_8d65e998a07dd53ec478e27017d9dba5",
        "unit_typing"
      ],
      0,
      "82f3c0c7f5e851a0471f88d8b31165a4"
    ],
    [
      "LowParseExample10.t_intro_other",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.Pervasives.Native_pretyping_b53dbd183c526bc5d0f20d7b966ae125",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_elim_LowParse.Spec.Base.Mkparser_kind_",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Pervasives.dfst", "equation_FStar.Pervasives.dsnd",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.Spec.Base.glb",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.parser_kind_metadata_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Combinators.and_then_metadata",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_LowParse.Spec.Int.parse_u16_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParseExample10.msg_type",
        "equation_LowParseExample10.msg_type_HelloRetryRequest",
        "equation_LowParseExample10.msg_type_HelloRetryRequest_",
        "equation_LowParseExample10.parse_t",
        "equation_LowParseExample10.parse_t_kind",
        "equation_LowParseExample10.parse_t_param",
        "equation_LowParseExample10.parse_t_payload",
        "equation_LowParseExample10.t_payload",
        "equation_LowParseExample10.t_synth",
        "equation_LowParseExample10.t_tag_cond", "equation_Prims.nat",
        "function_token_typing_LowParse.Spec.Bytes.parse_all_bytes_kind",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_synth",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_synth",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_FStar.UInt_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_synth",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParseExample10.parse_t_payload",
        "token_correspondence_LowParseExample10.t_payload",
        "token_correspondence_LowParseExample10.t_synth",
        "token_correspondence_LowParseExample10.t_tag_cond",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length"
      ],
      0,
      "15e1eb2bc1d23eab4c57e08d88cd7429"
    ],
    [
      "LowParseExample10.main",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "equality_tok_C.EXIT_SUCCESS@tok",
        "equation_FStar.HyperStack.ST.equal_domains",
        "equation_FStar.Monotonic.Heap.equal_dom",
        "equation_FStar.Monotonic.HyperHeap.hmap",
        "equation_FStar.Monotonic.HyperStack.mem",
        "function_token_typing_FStar.Monotonic.Heap.heap",
        "lemma_FStar.HyperStack.ST.lemma_same_refs_in_all_regions_intro",
        "lemma_FStar.Set.lemma_equal_refl",
        "refinement_interpretation_Tm_refine_9a74d818566e70513bc032cc3b65a144",
        "typing_FStar.Map.domain", "typing_FStar.Monotonic.HyperHeap.rid",
        "typing_FStar.Monotonic.HyperStack.get_hmap",
        "typing_tok_C.EXIT_SUCCESS@tok"
      ],
      0,
      "2a636edc9efbdfe584edf4671538ab8d"
    ]
  ]
]