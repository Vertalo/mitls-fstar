[
  "Ru/}˜\u0002\u0010z\u000b,h\b•\\Ç¤",
  [
    [
      "LowParse.SLow.Array.parse32_array",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "26377045166ed4922dba40d0df0810f2"
    ],
    [
      "LowParse.SLow.Array.parse32_array",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt32.n",
        "equation_LowParse.Spec.Array.fldata_array_precond",
        "equation_LowParse.Spec.Array.fldata_to_array",
        "equation_LowParse.Spec.Array.parse_array",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.List.parse_list_kind", "equation_Prims.nat",
        "fuel_guarded_inversion_LowParse.Spec.Base.parser_kind_",
        "function_token_typing_FStar.UInt32.n", "int_inversion",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_Multiply",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "refinement_interpretation_LowParse.Spec.Array_Tm_refine_78b0ee420a5898bd97c89c87e2becd8c",
        "refinement_interpretation_LowParse.Spec.Base_Tm_refine_9fc4b705eaf2fe68d9cc8785e7df72bf",
        "refinement_interpretation_Prims_Tm_refine_ba523126f67e00e7cd55f0b92f16681d",
        "token_correspondence_LowParse.Spec.Array.fldata_to_array",
        "unit_inversion"
      ],
      0,
      "aeedb471775cce946877fb86d365b6ca"
    ],
    [
      "LowParse.SLow.Array.serialize32_array",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt32.n", "equation_LowParse.Spec.Array.array",
        "equation_LowParse.Spec.Array.array_to_fldata",
        "equation_LowParse.Spec.Array.fldata_array_precond",
        "equation_LowParse.Spec.Array.fldata_to_array",
        "equation_LowParse.Spec.Array.parse_array",
        "equation_LowParse.Spec.Array.serialize_array",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Combinators.synth_inverse",
        "equation_LowParse.Spec.List.parse_list_kind", "equation_Prims.nat",
        "fuel_guarded_inversion_LowParse.Spec.Base.parser_kind_",
        "function_token_typing_FStar.UInt32.n", "int_inversion",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_Multiply",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "refinement_interpretation_LowParse.Spec.Array_Tm_refine_78b0ee420a5898bd97c89c87e2becd8c",
        "refinement_interpretation_LowParse.Spec.Base_Tm_refine_9fc4b705eaf2fe68d9cc8785e7df72bf",
        "refinement_interpretation_Prims_Tm_refine_ba523126f67e00e7cd55f0b92f16681d",
        "token_correspondence_LowParse.Spec.Array.array_to_fldata",
        "token_correspondence_LowParse.Spec.Array.fldata_to_array",
        "unit_inversion"
      ],
      0,
      "4ec2c72b96529a111d8fb97f91b82b70"
    ],
    [
      "LowParse.SLow.Array.size32_array",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "d3d506b72ad62a4d8d6c559af033308f"
    ],
    [
      "LowParse.SLow.Array.size32_array",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "equation_LowParse.SLow.Base.size32_constant_precond",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.FLData.parse_fldata_kind",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_FStar.UInt32_Tm_refine_6c25b42778726de94cd4dac42edb4860",
        "refinement_interpretation_LowParse.Spec.Array_Tm_refine_78b0ee420a5898bd97c89c87e2becd8c"
      ],
      0,
      "a93a242de2dc8fc45d455b67ea0f14f7"
    ],
    [
      "LowParse.SLow.Array.parse32_vlarray",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "05b69d406631c685e4044cb46f4bddf0"
    ],
    [
      "LowParse.SLow.Array.parse32_vlarray",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_LowParse.Spec.Array.parse_vlarray",
        "equation_LowParse.Spec.Array.vldata_to_vlarray",
        "equation_LowParse.Spec.Array.vldata_vlarray_precond",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.List.parse_list_kind", "equation_Prims.nat",
        "fuel_guarded_inversion_LowParse.Spec.Base.parser_kind_",
        "int_inversion", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_LowParse.Spec.Array_Tm_refine_021ccdfae3111dc774bd231713e05ef9",
        "refinement_interpretation_LowParse.Spec.Base_Tm_refine_9fc4b705eaf2fe68d9cc8785e7df72bf",
        "refinement_interpretation_Prims_Tm_refine_ba523126f67e00e7cd55f0b92f16681d",
        "token_correspondence_LowParse.Spec.Array.vldata_to_vlarray",
        "unit_inversion"
      ],
      0,
      "635e54092b7be3d315f1029dee946170"
    ],
    [
      "LowParse.SLow.Array.serialize32_vlarray",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt32.n",
        "equation_LowParse.Spec.Array.parse_vlarray",
        "equation_LowParse.Spec.Array.serialize_vlarray",
        "equation_LowParse.Spec.Array.vlarray",
        "equation_LowParse.Spec.Array.vldata_to_vlarray",
        "equation_LowParse.Spec.Array.vldata_vlarray_precond",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Combinators.synth_inverse",
        "equation_LowParse.Spec.List.parse_list_kind", "equation_Prims.nat",
        "fuel_guarded_inversion_LowParse.Spec.Base.parser_kind_",
        "function_token_typing_FStar.UInt32.n", "int_inversion",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_GreaterThan", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_LowParse.SLow.Array_Tm_refine_d94fdd2d29efbb2023f6774b768e1314",
        "refinement_interpretation_LowParse.Spec.Array_Tm_refine_021ccdfae3111dc774bd231713e05ef9",
        "refinement_interpretation_LowParse.Spec.Base_Tm_refine_9fc4b705eaf2fe68d9cc8785e7df72bf",
        "refinement_interpretation_Prims_Tm_refine_ba523126f67e00e7cd55f0b92f16681d",
        "token_correspondence_LowParse.Spec.Array.vlarray_to_vldata",
        "token_correspondence_LowParse.Spec.Array.vldata_to_vlarray",
        "unit_inversion"
      ],
      0,
      "575d4bad33a31f6e5e5ed9ccd05a4d64"
    ],
    [
      "LowParse.SLow.Array.size32_vlarray",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "equation_LowParse.Spec.Array.vldata_vlarray_precond",
        "equation_Prims.nat", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_GreaterThan",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_LowParse.SLow.Array_Tm_refine_d94fdd2d29efbb2023f6774b768e1314",
        "refinement_interpretation_LowParse.Spec.Array_Tm_refine_021ccdfae3111dc774bd231713e05ef9"
      ],
      0,
      "84f1916276f7e249685fee49095527dc"
    ],
    [
      "LowParse.SLow.Array.size32_vlarray",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt32.n",
        "equation_LowParse.SLow.Base.size32_constant_precond",
        "equation_LowParse.Spec.Array.parse_vlarray",
        "equation_LowParse.Spec.Array.serialize_vlarray",
        "equation_LowParse.Spec.Array.vlarray",
        "equation_LowParse.Spec.Array.vldata_to_vlarray",
        "equation_LowParse.Spec.Array.vldata_vlarray_precond",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Combinators.synth_inverse",
        "equation_LowParse.Spec.List.parse_list_kind",
        "equation_LowParse.Spec.VLData.parse_bounded_vldata_kind",
        "equation_LowParse.Spec.VLData.parse_bounded_vldata_strong_kind",
        "equation_Prims.nat",
        "fuel_guarded_inversion_LowParse.Spec.Base.parser_kind_",
        "function_token_typing_FStar.UInt32.n", "int_inversion",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality", "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_LowParse.SLow.Array_Tm_refine_d94fdd2d29efbb2023f6774b768e1314",
        "refinement_interpretation_LowParse.SLow.Array_Tm_refine_eb52ee2e400bdfe2fd2e469ca79ba1a7",
        "refinement_interpretation_LowParse.Spec.Array_Tm_refine_021ccdfae3111dc774bd231713e05ef9",
        "refinement_interpretation_LowParse.Spec.Base_Tm_refine_9fc4b705eaf2fe68d9cc8785e7df72bf",
        "refinement_interpretation_Prims_Tm_refine_ba523126f67e00e7cd55f0b92f16681d",
        "token_correspondence_LowParse.Spec.Array.vlarray_to_vldata",
        "token_correspondence_LowParse.Spec.Array.vldata_to_vlarray",
        "unit_inversion"
      ],
      0,
      "9d59fba71fe0de5ec7ead53c5f664532"
    ]
  ]
]