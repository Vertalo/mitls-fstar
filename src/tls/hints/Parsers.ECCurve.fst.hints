[
  "™½‰¾¹Dz$\u0011öFÃCîí%",
  [
    [
      "Parsers.ECCurve.eCCurve",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "equation_Parsers.ECCurve_a.eCCurve_a",
        "equation_Parsers.ECCurve_b.eCCurve_b",
        "haseqTm_refine_ded83f0e40056526ff4d5b32368d0718",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "typing_FStar.Bytes.bytes"
      ],
      0,
      "b8248baf00d7ac17c36907701a32ebdf"
    ],
    [
      "Parsers.ECCurve.synth_eCCurve_recip_inverse",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "equation_LowParse.Spec.Combinators.synth_inverse",
        "equation_Parsers.ECCurve.eCCurve_",
        "equation_Parsers.ECCurve.synth_eCCurve",
        "equation_Parsers.ECCurve.synth_eCCurve_recip",
        "equation_Parsers.ECCurve_a.eCCurve_a",
        "equation_Parsers.ECCurve_b.eCCurve_b",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "proj_equation_Parsers.ECCurve.MkeCCurve_a",
        "proj_equation_Parsers.ECCurve.MkeCCurve_b",
        "projection_inverse_Parsers.ECCurve.MkeCCurve_a",
        "projection_inverse_Parsers.ECCurve.MkeCCurve_b",
        "token_correspondence_Parsers.ECCurve.synth_eCCurve",
        "token_correspondence_Parsers.ECCurve.synth_eCCurve_recip"
      ],
      0,
      "3b03c411e8a58a23d05fe779ac84368a"
    ],
    [
      "Parsers.ECCurve.synth_eCCurve_injective",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Combinators.synth_inverse",
        "equation_Parsers.ECCurve.eCCurve_",
        "equation_Parsers.ECCurve.synth_eCCurve",
        "equation_Parsers.ECCurve.synth_eCCurve_recip",
        "equation_Parsers.ECCurve_a.eCCurve_a",
        "equation_Parsers.ECCurve_b.eCCurve_b",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Parsers.ECCurve.eCCurve",
        "proj_equation_Parsers.ECCurve.MkeCCurve_a",
        "proj_equation_Parsers.ECCurve.MkeCCurve_b",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_Parsers.ECCurve.MkeCCurve_a",
        "projection_inverse_Parsers.ECCurve.MkeCCurve_b",
        "token_correspondence_Parsers.ECCurve.synth_eCCurve",
        "token_correspondence_Parsers.ECCurve.synth_eCCurve_recip"
      ],
      0,
      "3adf6f771df217fd28d48354f276ed3b"
    ],
    [
      "Parsers.ECCurve.synth_eCCurve_inverse",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_Parsers.ECCurve.eCCurve"
      ],
      0,
      "3e16efddd681777d25e1321a38e679de"
    ],
    [
      "Parsers.ECCurve.synth_eCCurve_recip_injective",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Parsers.ECCurve.eCCurve_",
        "equation_Parsers.ECCurve.synth_eCCurve_recip",
        "equation_Parsers.ECCurve_a.eCCurve_a",
        "equation_Parsers.ECCurve_b.eCCurve_b",
        "fuel_guarded_inversion_Parsers.ECCurve.eCCurve",
        "proj_equation_Parsers.ECCurve.MkeCCurve_a",
        "proj_equation_Parsers.ECCurve.MkeCCurve_b",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "token_correspondence_Parsers.ECCurve.synth_eCCurve_recip"
      ],
      0,
      "e3b3d1961ef4a781de156336af88e9be"
    ],
    [
      "Parsers.ECCurve.eCCurve_parser",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.get_parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_Parsers.ECCurve.eCCurve_",
        "equation_Parsers.ECCurve.eCCurve__parser",
        "equation_Parsers.ECCurve.eCCurve__parser_kind",
        "equation_Parsers.ECCurve.eCCurve_parser_kind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "0bb5a391be3cafb29d5b9ec4f7ac6425"
    ],
    [
      "Parsers.ECCurve.eCCurve'_serializer",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ECCurve_a.eCCurve_a_parser_kind",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "ed911b16f6bdb0841d23cd633cd8a505"
    ],
    [
      "Parsers.ECCurve.eCCurve_serializer",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.get_parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_Parsers.ECCurve.eCCurve_",
        "equation_Parsers.ECCurve.eCCurve__parser",
        "equation_Parsers.ECCurve.eCCurve__parser_kind",
        "equation_Parsers.ECCurve.eCCurve_parser_kind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "8e2e3ec0e8e00dc5f47c71380e3e6d8d"
    ],
    [
      "Parsers.ECCurve.eCCurve_bytesize_eq",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.serialize",
        "equation_Parsers.ECCurve.eCCurve_bytesize"
      ],
      0,
      "1051c5a3e7add801ad4b706f6ba05066"
    ],
    [
      "Parsers.ECCurve.eCCurve_parser32",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.get_parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_Parsers.ECCurve.eCCurve_",
        "equation_Parsers.ECCurve.eCCurve__parser",
        "equation_Parsers.ECCurve.eCCurve__parser_kind",
        "equation_Parsers.ECCurve.eCCurve_parser_kind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "8653aa6d8767f3d7d2fb7c5d38c70bf0"
    ],
    [
      "Parsers.ECCurve.eCCurve'_serializer32",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.max_uint32",
        "equation_LowParse.SLow.Combinators.serialize32_kind_precond",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ECCurve_a.eCCurve_a_parser_kind",
        "equation_Parsers.ECCurve_b.eCCurve_b_parser_kind",
        "equation_Prims.nat",
        "function_token_typing_Prims.__cache_version_number__",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "typing_FStar.UInt32.v", "typing_LowParse.Low.Base.max_uint32"
      ],
      0,
      "0d83d9e6a7f2c62203816305a0583fe8"
    ],
    [
      "Parsers.ECCurve.eCCurve_serializer32",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.get_parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_Parsers.ECCurve.eCCurve_",
        "equation_Parsers.ECCurve.eCCurve__parser",
        "equation_Parsers.ECCurve.eCCurve__parser_kind",
        "equation_Parsers.ECCurve.eCCurve_parser_kind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "2beb1d4b763ca7c3c504a6b694154453"
    ],
    [
      "Parsers.ECCurve.eCCurve'_size32",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ECCurve_a.eCCurve_a_parser_kind",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "26201672d1c785702e92c88980f55336"
    ],
    [
      "Parsers.ECCurve.eCCurve_size32",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.get_parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_Parsers.ECCurve.eCCurve_",
        "equation_Parsers.ECCurve.eCCurve__parser",
        "equation_Parsers.ECCurve.eCCurve__parser_kind",
        "equation_Parsers.ECCurve.eCCurve_parser_kind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "25b67849303739084b51a603b594e534"
    ],
    [
      "Parsers.ECCurve.eCCurve_validator",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.get_parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_Parsers.ECCurve.eCCurve_",
        "equation_Parsers.ECCurve.eCCurve__parser",
        "equation_Parsers.ECCurve.eCCurve__parser_kind",
        "equation_Parsers.ECCurve.eCCurve_parser_kind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "f163c789116e5552ddbff35d03ea4290"
    ],
    [
      "Parsers.ECCurve.eCCurve_jumper",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.get_parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_Parsers.ECCurve.eCCurve_",
        "equation_Parsers.ECCurve.eCCurve__parser",
        "equation_Parsers.ECCurve.eCCurve__parser_kind",
        "equation_Parsers.ECCurve.eCCurve_parser_kind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "19da7eb05b14e35e2d6b88239e76592f"
    ],
    [
      "Parsers.ECCurve.eCCurve_bytesize_eqn",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ECCurve.eCCurve_",
        "equation_Parsers.ECCurve.eCCurve__parser",
        "equation_Parsers.ECCurve.eCCurve__serializer",
        "equation_Parsers.ECCurve.eCCurve_bytesize",
        "equation_Parsers.ECCurve.eCCurve_serializer",
        "equation_Parsers.ECCurve.synth_eCCurve_recip",
        "equation_Parsers.ECCurve_a.eCCurve_a_parser_kind",
        "equation_Parsers.ECCurve_b.eCCurve_b_parser_kind",
        "fuel_guarded_inversion_Parsers.ECCurve.eCCurve",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "unit_inversion"
      ],
      0,
      "3bb88b5ac6be7275468c0bb2c78c611d"
    ],
    [
      "Parsers.ECCurve.gaccessor'_eCCurve_a",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ECCurve_a.eCCurve_a_parser_kind",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "f7918084d5885868d67d1eb9f9d70ffe"
    ],
    [
      "Parsers.ECCurve.accessor'_eCCurve_a",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ECCurve_a.eCCurve_a_parser_kind",
        "equation_Parsers.ECCurve_b.eCCurve_b_parser_kind",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "3998e51bc00a641fd7643dc95a0edd3c"
    ],
    [
      "Parsers.ECCurve.accessor'_eCCurve_b",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_Parsers.ECCurve_a.eCCurve_a_parser_kind",
        "equation_Parsers.ECCurve_b.eCCurve_b_parser_kind",
        "equation_Prims.nat", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "2300a889174c9f4873bab3d862801d8f"
    ],
    [
      "Parsers.ECCurve.clens_eCCurve_eCCurve'",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "9e3bbea1d97a158d19243454f0cef28a"
    ],
    [
      "Parsers.ECCurve.gaccessor_eCCurve_eCCurve'",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ECCurve_a.eCCurve_a_parser_kind",
        "equation_Parsers.ECCurve_b.eCCurve_b_parser_kind",
        "equation_Prims.nat", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "fd302a23daf8468d05c2a23f8b08ffb5"
    ],
    [
      "Parsers.ECCurve.accessor_eCCurve_eCCurve'",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ECCurve_a.eCCurve_a_parser_kind",
        "equation_Parsers.ECCurve_b.eCCurve_b_parser_kind",
        "equation_Prims.nat", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "30b2f7d8be1468fb01df43ca57eb6fa7"
    ],
    [
      "Parsers.ECCurve.gaccessor_eCCurve_a",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "equation_FStar.Pervasives.Native.fst",
        "equation_LowParse.Low.Base.clens_compose",
        "equation_LowParse.Low.Base.clens_compose_cond",
        "equation_LowParse.Low.Base.clens_eq",
        "equation_LowParse.Low.Base.clens_id",
        "equation_LowParse.Low.Combinators.clens_fst",
        "equation_LowParse.Low.Combinators.clens_synth",
        "equation_Parsers.ECCurve.clens_eCCurve_a",
        "equation_Parsers.ECCurve.clens_eCCurve_eCCurve_",
        "equation_Parsers.ECCurve.eCCurve_",
        "equation_Parsers.ECCurve.synth_eCCurve_recip",
        "equation_Parsers.ECCurve_a.eCCurve_a",
        "equation_Parsers.ECCurve_b.eCCurve_b", "equation_Prims.l_True",
        "fuel_guarded_inversion_Parsers.ECCurve.eCCurve",
        "interpretation_Tm_abs_1150ff03d7e6ff814eedd429975064b4",
        "interpretation_Tm_abs_4a6fb92fc3aadbdc6543585d1b85d3da",
        "interpretation_Tm_abs_597898f7d3dcd9313ee6d6d3c5437077",
        "interpretation_Tm_abs_623d8abb9383ae0818a611aa801ca23d",
        "interpretation_Tm_abs_66926e89e50e2ac69caf858cc1113f07",
        "proj_equation_FStar.Pervasives.Native.Mktuple2__1",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_cond",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_get",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_cond",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_get",
        "token_correspondence_FStar.Pervasives.Native.fst",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_cond",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "token_correspondence_LowParse.Low.Base.clens_compose_cond",
        "token_correspondence_Parsers.ECCurve.__proj__MkeCCurve__item__a",
        "token_correspondence_Parsers.ECCurve.synth_eCCurve_recip",
        "true_interp"
      ],
      0,
      "3b34930e4b72406fb4e8885c6f4ab0fb"
    ],
    [
      "Parsers.ECCurve.accessor_eCCurve_a",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "equation_FStar.Pervasives.Native.fst", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.clens_compose",
        "equation_LowParse.Low.Base.clens_compose_cond",
        "equation_LowParse.Low.Base.clens_eq",
        "equation_LowParse.Low.Base.clens_id",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.Low.Combinators.clens_fst",
        "equation_LowParse.Low.Combinators.clens_synth",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_Parsers.ECCurve.clens_eCCurve_a",
        "equation_Parsers.ECCurve.clens_eCCurve_eCCurve_",
        "equation_Parsers.ECCurve.eCCurve_",
        "equation_Parsers.ECCurve.synth_eCCurve_recip",
        "equation_Parsers.ECCurve_a.eCCurve_a",
        "equation_Parsers.ECCurve_a.eCCurve_a_parser_kind",
        "equation_Parsers.ECCurve_b.eCCurve_b",
        "equation_Parsers.ECCurve_b.eCCurve_b_parser_kind",
        "equation_Prims.l_True",
        "fuel_guarded_inversion_Parsers.ECCurve.eCCurve",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion",
        "interpretation_Tm_abs_1150ff03d7e6ff814eedd429975064b4",
        "interpretation_Tm_abs_4a6fb92fc3aadbdc6543585d1b85d3da",
        "interpretation_Tm_abs_597898f7d3dcd9313ee6d6d3c5437077",
        "interpretation_Tm_abs_623d8abb9383ae0818a611aa801ca23d",
        "interpretation_Tm_abs_66926e89e50e2ac69caf858cc1113f07",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Mktuple2__1",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_cond",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_get",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_cond",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_get",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_07033d2b2c1d2fb6c1dd88a8f1110ac2",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "token_correspondence_FStar.Pervasives.Native.fst",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_cond",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "token_correspondence_LowParse.Low.Base.clens_compose_cond",
        "token_correspondence_Parsers.ECCurve.__proj__MkeCCurve__item__a",
        "token_correspondence_Parsers.ECCurve.synth_eCCurve_recip",
        "true_interp", "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length"
      ],
      0,
      "7255a5630129acafa14cdf94846152ad"
    ],
    [
      "Parsers.ECCurve.gaccessor_eCCurve_b",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "equation_FStar.Pervasives.Native.snd",
        "equation_LowParse.Low.Base.clens_compose",
        "equation_LowParse.Low.Base.clens_compose_cond",
        "equation_LowParse.Low.Base.clens_eq",
        "equation_LowParse.Low.Base.clens_id",
        "equation_LowParse.Low.Combinators.clens_snd",
        "equation_LowParse.Low.Combinators.clens_synth",
        "equation_Parsers.ECCurve.clens_eCCurve_b",
        "equation_Parsers.ECCurve.clens_eCCurve_eCCurve_",
        "equation_Parsers.ECCurve.eCCurve_",
        "equation_Parsers.ECCurve.synth_eCCurve_recip",
        "equation_Parsers.ECCurve_a.eCCurve_a",
        "equation_Parsers.ECCurve_b.eCCurve_b", "equation_Prims.l_True",
        "fuel_guarded_inversion_Parsers.ECCurve.eCCurve",
        "interpretation_Tm_abs_1150ff03d7e6ff814eedd429975064b4",
        "interpretation_Tm_abs_4a6fb92fc3aadbdc6543585d1b85d3da",
        "interpretation_Tm_abs_597898f7d3dcd9313ee6d6d3c5437077",
        "interpretation_Tm_abs_623d8abb9383ae0818a611aa801ca23d",
        "interpretation_Tm_abs_66926e89e50e2ac69caf858cc1113f07",
        "proj_equation_FStar.Pervasives.Native.Mktuple2__2",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_cond",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_get",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_cond",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_get",
        "token_correspondence_FStar.Pervasives.Native.snd",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_cond",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "token_correspondence_LowParse.Low.Base.clens_compose_cond",
        "token_correspondence_Parsers.ECCurve.__proj__MkeCCurve__item__b",
        "token_correspondence_Parsers.ECCurve.synth_eCCurve_recip",
        "true_interp"
      ],
      0,
      "cd1d9ef72a7f56d3c5b19b6bb609955f"
    ],
    [
      "Parsers.ECCurve.accessor_eCCurve_b",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "equation_FStar.Pervasives.Native.snd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.clens_compose",
        "equation_LowParse.Low.Base.clens_compose_cond",
        "equation_LowParse.Low.Base.clens_eq",
        "equation_LowParse.Low.Base.clens_id",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.Low.Combinators.clens_snd",
        "equation_LowParse.Low.Combinators.clens_synth",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_Parsers.ECCurve.clens_eCCurve_b",
        "equation_Parsers.ECCurve.clens_eCCurve_eCCurve_",
        "equation_Parsers.ECCurve.eCCurve_",
        "equation_Parsers.ECCurve.synth_eCCurve_recip",
        "equation_Parsers.ECCurve_a.eCCurve_a",
        "equation_Parsers.ECCurve_a.eCCurve_a_parser_kind",
        "equation_Parsers.ECCurve_b.eCCurve_b",
        "equation_Parsers.ECCurve_b.eCCurve_b_parser_kind",
        "equation_Prims.l_True",
        "fuel_guarded_inversion_Parsers.ECCurve.eCCurve",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion",
        "interpretation_Tm_abs_1150ff03d7e6ff814eedd429975064b4",
        "interpretation_Tm_abs_4a6fb92fc3aadbdc6543585d1b85d3da",
        "interpretation_Tm_abs_597898f7d3dcd9313ee6d6d3c5437077",
        "interpretation_Tm_abs_623d8abb9383ae0818a611aa801ca23d",
        "interpretation_Tm_abs_66926e89e50e2ac69caf858cc1113f07",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Mktuple2__2",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_cond",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_get",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_cond",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_get",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_07033d2b2c1d2fb6c1dd88a8f1110ac2",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "token_correspondence_FStar.Pervasives.Native.snd",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_cond",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "token_correspondence_LowParse.Low.Base.clens_compose_cond",
        "token_correspondence_Parsers.ECCurve.__proj__MkeCCurve__item__b",
        "token_correspondence_Parsers.ECCurve.synth_eCCurve_recip",
        "true_interp", "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length"
      ],
      0,
      "81ec973766cdc1b253361e030c6fb066"
    ],
    [
      "Parsers.ECCurve.eCCurve_valid",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.squash",
        "l_and-interp",
        "refinement_interpretation_Tm_refine_8d65e998a07dd53ec478e27017d9dba5"
      ],
      0,
      "b392800d4276c91b80c90b5495edef1b"
    ],
    [
      "Parsers.ECCurve.eCCurve_valid",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "equation_LowParse.Low.Base.valid_content",
        "equation_LowParse.Low.Base.valid_content_pos",
        "equation_LowParse.Low.Base.valid_pos",
        "equation_LowParse.Spec.Base.get_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_Parsers.ECCurve.eCCurve_",
        "equation_Parsers.ECCurve.eCCurve__parser",
        "equation_Parsers.ECCurve.eCCurve__parser_kind",
        "equation_Parsers.ECCurve.eCCurve_parser",
        "equation_Parsers.ECCurve.synth_eCCurve",
        "equation_Parsers.ECCurve_a.eCCurve_a",
        "equation_Parsers.ECCurve_b.eCCurve_b",
        "fuel_guarded_inversion_LowParse.Slice.slice",
        "function_token_typing_Parsers.ECCurve.eCCurve_",
        "lemma_LowParse.Low.Base.valid_pos_get_valid_pos",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "typing_Parsers.ECCurve.eCCurve__parser",
        "typing_Parsers.ECCurve.eCCurve_parser_kind"
      ],
      0,
      "f97e9aa97acaf804b0c4ee1207dfa6bc"
    ]
  ]
]