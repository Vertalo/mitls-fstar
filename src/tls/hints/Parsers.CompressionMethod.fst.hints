[
  "d\u0014ˇ∑\u001câyƒ6Å«0∫˛^",
  [
    [
      "Parsers.CompressionMethod.compressionMethod",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.eqtype",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "typing_FStar.UInt8.t"
      ],
      0,
      "3cfc2fe2159a3d5ed13883bcf3eae737"
    ],
    [
      "Parsers.CompressionMethod.__proj__Unknown_compressionMethod__item___0",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "disc_equation_Parsers.CompressionMethod.Unknown_compressionMethod",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_024d66cc355bb4f5c02304d3ef6c059f"
      ],
      0,
      "2fc9ca7cf9ce5ca76bebfc743cac863c"
    ],
    [
      "Parsers.CompressionMethod.string_of_compressionMethod",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "disc_equation_Parsers.CompressionMethod.NullCompression",
        "disc_equation_Parsers.CompressionMethod.Unknown_compressionMethod",
        "fuel_guarded_inversion_Parsers.CompressionMethod.compressionMethod"
      ],
      0,
      "6a7de7868b3a71efed565d75cfd717a4"
    ],
    [
      "Parsers.CompressionMethod.compressionMethod_enum",
      1,
      2,
      1,
      [
        "@query", "assumption_FStar.UInt8.t__uu___haseq",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "7b2a1b473b85c9bb3305474b073b69f0"
    ],
    [
      "Parsers.CompressionMethod.synth_compressionMethod",
      1,
      2,
      1,
      [
        "@query", "assumption_FStar.UInt8.t__uu___haseq",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "8328990b0ac9c7cb7fd3d3e7650283a1"
    ],
    [
      "Parsers.CompressionMethod.synth_compressionMethod",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "assumption_FStar.UInt8.t__uu___haseq",
        "data_elim_LowParse.Spec.Enum.Unknown",
        "disc_equation_LowParse.Spec.Enum.Known",
        "disc_equation_LowParse.Spec.Enum.Unknown",
        "equation_LowParse.Spec.Enum.unknown_enum_repr",
        "equation_Parsers.CompressionMethod.compressionMethod_enum",
        "fuel_guarded_inversion_LowParse.Spec.Enum.maybe_enum_key",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_LowParse.Spec.Enum.Unknown__0",
        "refinement_interpretation_Tm_refine_42952339d1ff6a9a240497d58590f0b2"
      ],
      0,
      "7094297e2fa42bf42bc5f2cb5cb58317"
    ],
    [
      "Parsers.CompressionMethod.synth_compressionMethod_inv",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq",
        "b2t_def", "bool_inversion",
        "equation_Parsers.CompressionMethod.known_compressionMethod_repr",
        "equation_Prims.l_imp", "equation_Prims.squash", "l_imp-interp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_Negation",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_d6aa9e8768c8e7738160b0f98ab27ef1",
        "typing_Parsers.CompressionMethod.uu___is_Unknown_compressionMethod"
      ],
      0,
      "a064c8fa073a9f72d271f85e9e93ebc9"
    ],
    [
      "Parsers.CompressionMethod.lemma_synth_compressionMethod_inv'",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq",
        "equation_LowParse.Spec.Combinators.synth_inverse",
        "equation_Prims.l_Forall", "equation_Prims.squash",
        "l_quant_interp_daba523f4b09b6231192690c2835cf51",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "token_correspondence_Parsers.CompressionMethod.synth_compressionMethod",
        "token_correspondence_Parsers.CompressionMethod.synth_compressionMethod_inv"
      ],
      0,
      "e3d8d75faedda561df7d6336d38f1e7b"
    ],
    [
      "Parsers.CompressionMethod.lemma_synth_compressionMethod_inj",
      1,
      2,
      1,
      [
        "@query", "assumption_FStar.UInt8.t__uu___haseq",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "5c1e79774ac5f168e12f2f717df7b41c"
    ],
    [
      "Parsers.CompressionMethod.lemma_synth_compressionMethod_inv",
      1,
      0,
      0,
      [
        "@MaxIFuel_assumption", "@query",
        "Parsers.CompressionMethod_pretyping_0b005f481768a7bd4dd503e17d391cea",
        "assumption_FStar.UInt8.t__uu___haseq",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq",
        "constructor_distinct_LowParse.Spec.Enum.Known",
        "constructor_distinct_LowParse.Spec.Enum.Unknown",
        "equality_tok_Parsers.CompressionMethod.NullCompression@tok",
        "equation_LowParse.Spec.Combinators.synth_inverse",
        "equation_Parsers.CompressionMethod.compressionMethod_enum",
        "equation_Parsers.CompressionMethod.synth_compressionMethod",
        "equation_Parsers.CompressionMethod.synth_compressionMethod_inv",
        "fuel_guarded_inversion_Parsers.CompressionMethod.compressionMethod",
        "inversion-interp", "projection_inverse_LowParse.Spec.Enum.Known__0",
        "projection_inverse_LowParse.Spec.Enum.Known_e",
        "projection_inverse_LowParse.Spec.Enum.Known_key",
        "projection_inverse_LowParse.Spec.Enum.Known_repr",
        "projection_inverse_LowParse.Spec.Enum.Unknown__0",
        "projection_inverse_LowParse.Spec.Enum.Unknown_e",
        "projection_inverse_LowParse.Spec.Enum.Unknown_key",
        "projection_inverse_LowParse.Spec.Enum.Unknown_repr",
        "token_correspondence_Parsers.CompressionMethod.synth_compressionMethod",
        "token_correspondence_Parsers.CompressionMethod.synth_compressionMethod_inv",
        "typing_tok_Parsers.CompressionMethod.NullCompression@tok"
      ],
      0,
      "b5ad4a8472d092ee9a69167d4afbb428"
    ],
    [
      "Parsers.CompressionMethod.parse_maybe_compressionMethod_key",
      1,
      2,
      1,
      [
        "@query", "assumption_FStar.UInt8.t__uu___haseq",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "597aa75fe3b74b602740715883458ab5"
    ],
    [
      "Parsers.CompressionMethod.serialize_maybe_compressionMethod_key",
      1,
      2,
      1,
      [
        "@query", "assumption_FStar.UInt8.t__uu___haseq",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "de6d482a8d915b7132fe85210661c597"
    ],
    [
      "Parsers.CompressionMethod.compressionMethod_parser",
      1,
      2,
      1,
      [
        "@query", "assumption_FStar.UInt8.t__uu___haseq",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "ffff86f75abe051c5cc79de1186b6830"
    ],
    [
      "Parsers.CompressionMethod.compressionMethod_serializer",
      1,
      2,
      1,
      [
        "@query", "assumption_FStar.UInt8.t__uu___haseq",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "d4f89bb59f0eaa014d4124e430e1832b"
    ],
    [
      "Parsers.CompressionMethod.compressionMethod_bytesize_eq",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.serialize",
        "equation_Parsers.CompressionMethod.compressionMethod_bytesize"
      ],
      0,
      "82731c2c1aba0c20f6164d4802caf62d"
    ],
    [
      "Parsers.CompressionMethod.parse32_maybe_compressionMethod_key",
      1,
      2,
      1,
      [
        "@query", "assumption_FStar.UInt8.t__uu___haseq",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq",
        "constructor_distinct_Prims.Cons", "disc_equation_Prims.Cons",
        "equation_Parsers.CompressionMethod.compressionMethod_enum",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl"
      ],
      0,
      "25c32b340eb38243f82fbeeda2786b82"
    ],
    [
      "Parsers.CompressionMethod.parse32_maybe_compressionMethod_key",
      2,
      2,
      1,
      [
        "@query", "assumption_FStar.UInt8.t__uu___haseq",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq",
        "constructor_distinct_Prims.Cons", "disc_equation_Prims.Cons",
        "equation_Parsers.CompressionMethod.compressionMethod_enum",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl"
      ],
      0,
      "5db08e164e99f7d16e602c133111d6a1"
    ],
    [
      "Parsers.CompressionMethod.parse32_maybe_compressionMethod_key",
      3,
      2,
      1,
      [
        "@query", "assumption_FStar.UInt8.t__uu___haseq",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "249ab51821000bfefc0ca1111b1116f9"
    ],
    [
      "Parsers.CompressionMethod.parse32_maybe_compressionMethod_key",
      4,
      2,
      1,
      [
        "@query", "assumption_FStar.UInt8.t__uu___haseq",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "63d922875c47098a6b01542280ece539"
    ],
    [
      "Parsers.CompressionMethod.compressionMethod_parser32",
      1,
      2,
      1,
      [
        "@query", "assumption_FStar.UInt8.t__uu___haseq",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "e2aa3f3760967468d2faf18e361a49e7"
    ],
    [
      "Parsers.CompressionMethod.serialize32_maybe_compressionMethod_key",
      1,
      2,
      1,
      [
        "@query", "assumption_FStar.UInt8.t__uu___haseq",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq",
        "constructor_distinct_Prims.Cons", "disc_equation_Prims.Cons",
        "equation_Parsers.CompressionMethod.compressionMethod_enum",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl"
      ],
      0,
      "c2ec9a009e0d2e0a1e7e810473df6100"
    ],
    [
      "Parsers.CompressionMethod.serialize32_maybe_compressionMethod_key",
      2,
      2,
      1,
      [
        "@query", "assumption_FStar.UInt8.t__uu___haseq",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq",
        "constructor_distinct_Prims.Cons", "disc_equation_Prims.Cons",
        "equation_Parsers.CompressionMethod.compressionMethod_enum",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl"
      ],
      0,
      "8be1e2040cb7257667c358af3c5cabd6"
    ],
    [
      "Parsers.CompressionMethod.serialize32_maybe_compressionMethod_key",
      3,
      2,
      1,
      [
        "@query", "assumption_FStar.UInt8.t__uu___haseq",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "cd01dc7a9a33bfbfa99c51b658123fb3"
    ],
    [
      "Parsers.CompressionMethod.serialize32_maybe_compressionMethod_key",
      4,
      2,
      1,
      [
        "@query", "assumption_FStar.UInt8.t__uu___haseq",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "dbf42b519c1b9c43f0e7ac544e0b7ce3"
    ],
    [
      "Parsers.CompressionMethod.compressionMethod_serializer32",
      1,
      2,
      1,
      [
        "@query", "assumption_FStar.UInt8.t__uu___haseq",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "8dbc47c642c136fa467fcdffd57d5192"
    ],
    [
      "Parsers.CompressionMethod.compressionMethod_size32",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "5c12f582d4dfd13f1ec0f1359d21c51c"
    ],
    [
      "Parsers.CompressionMethod.compressionMethod_validator",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.CompressionMethod.compressionMethod_parser_kind",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata"
      ],
      0,
      "23a99d2640681488d0bfa6040ea26b91"
    ],
    [
      "Parsers.CompressionMethod.compressionMethod_jumper",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.CompressionMethod.compressionMethod_parser_kind",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "46a4f91a3909bffed23db403f5ecbb87"
    ],
    [
      "Parsers.CompressionMethod.lwp_compressionMethod",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.CompressionMethod.compressionMethod_parser_kind",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "bb794aec51004efbb7f9820a4068c363"
    ],
    [
      "Parsers.CompressionMethod.read_maybe_compressionMethod_key",
      1,
      2,
      1,
      [
        "@query", "assumption_FStar.UInt8.t__uu___haseq",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "ddfb320d16df54069ddfdddb6ee1d6a1"
    ],
    [
      "Parsers.CompressionMethod.compressionMethod_reader",
      1,
      2,
      1,
      [
        "@query", "assumption_FStar.UInt8.t__uu___haseq",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "1e0f56dd5794fbe067ea452b47e28356"
    ],
    [
      "Parsers.CompressionMethod.write_maybe_compressionMethod_key",
      1,
      2,
      1,
      [
        "@query", "assumption_FStar.UInt8.t__uu___haseq",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "733984f9beaadbdce6ba0335b82c88f8"
    ],
    [
      "Parsers.CompressionMethod.lserialize_maybe_compressionMethod_key",
      1,
      2,
      1,
      [
        "@query",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Int.parse_u8_kind",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "8301fab24e0e7b44fb96f5910dc83576"
    ],
    [
      "Parsers.CompressionMethod.compressionMethod_writer",
      1,
      2,
      1,
      [
        "@query", "assumption_FStar.UInt8.t__uu___haseq",
        "assumption_Parsers.CompressionMethod.compressionMethod__uu___haseq"
      ],
      0,
      "d0aef8143168284118537fe3dc1e91e3"
    ],
    [
      "Parsers.CompressionMethod.compressionMethod_lserializer",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.CompressionMethod.compressionMethod_parser_kind",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "70dead3bb8e9da256ffe78573a488f2e"
    ],
    [
      "Parsers.CompressionMethod.compressionMethod_bytesize_eqn",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.CompressionMethod.compressionMethod_parser_kind",
        "equation_Prims.nat", "int_inversion",
        "kinding_Parsers.CompressionMethod.compressionMethod@tok",
        "lemma_LowParse.Spec.Base.serialize_length",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "typing_Parsers.CompressionMethod.compressionMethod_bytesize",
        "typing_Parsers.CompressionMethod.compressionMethod_parser",
        "typing_Parsers.CompressionMethod.compressionMethod_parser_kind",
        "typing_Parsers.CompressionMethod.compressionMethod_serializer"
      ],
      0,
      "2e14f7ca7e8abff7f3b8e710ed897a0f"
    ]
  ]
]