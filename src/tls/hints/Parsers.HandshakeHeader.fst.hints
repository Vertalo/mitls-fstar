[
  "×F`JŸPîíodOŽ-íK˜",
  [
    [
      "Parsers.HandshakeHeader.handshakeHeader",
      1,
      2,
      1,
      [
        "@query", "assumption_FStar.UInt32.t__uu___haseq",
        "assumption_Parsers.HandshakeType.handshakeType__uu___haseq",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "haseqTm_refine_22e74dfa2e8dfb6c739b3c533a63922e"
      ],
      0,
      "8370d2f9fbedead4ad485e833eb49a37"
    ],
    [
      "Parsers.HandshakeHeader.synth_handshakeHeader_recip_inverse",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "Parsers.HandshakeType_pretyping_4ae277eb4b83707366cb7ae1906c30cf",
        "data_typing_intro_Parsers.HandshakeType.Client_hello@tok",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.Combinators.synth_inverse",
        "equation_Parsers.HandshakeHeader.handshakeHeader_",
        "equation_Parsers.HandshakeHeader.synth_handshakeHeader",
        "equation_Parsers.HandshakeHeader.synth_handshakeHeader_recip",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "proj_equation_Parsers.HandshakeHeader.MkhandshakeHeader_length",
        "proj_equation_Parsers.HandshakeHeader.MkhandshakeHeader_msg_type",
        "projection_inverse_Parsers.HandshakeHeader.MkhandshakeHeader_length",
        "projection_inverse_Parsers.HandshakeHeader.MkhandshakeHeader_msg_type",
        "token_correspondence_Parsers.HandshakeHeader.synth_handshakeHeader",
        "token_correspondence_Parsers.HandshakeHeader.synth_handshakeHeader_recip"
      ],
      0,
      "d52283970ffacafa725a299ad4a69da9"
    ],
    [
      "Parsers.HandshakeHeader.synth_handshakeHeader_injective",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "Parsers.HandshakeType_pretyping_4ae277eb4b83707366cb7ae1906c30cf",
        "data_typing_intro_Parsers.HandshakeType.Client_hello@tok",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Combinators.synth_inverse",
        "equation_Parsers.HandshakeHeader.handshakeHeader_",
        "equation_Parsers.HandshakeHeader.synth_handshakeHeader",
        "equation_Parsers.HandshakeHeader.synth_handshakeHeader_recip",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_Parsers.HandshakeHeader.handshakeHeader",
        "proj_equation_Parsers.HandshakeHeader.MkhandshakeHeader_length",
        "proj_equation_Parsers.HandshakeHeader.MkhandshakeHeader_msg_type",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_Parsers.HandshakeHeader.MkhandshakeHeader_length",
        "projection_inverse_Parsers.HandshakeHeader.MkhandshakeHeader_msg_type",
        "token_correspondence_Parsers.HandshakeHeader.synth_handshakeHeader",
        "token_correspondence_Parsers.HandshakeHeader.synth_handshakeHeader_recip"
      ],
      0,
      "94a77abfa5812715c07cefb7f3ae37ff"
    ],
    [
      "Parsers.HandshakeHeader.synth_handshakeHeader_inverse",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_Parsers.HandshakeHeader.handshakeHeader"
      ],
      0,
      "61a2591b877a7d4a7dee2d0e9dbc8620"
    ],
    [
      "Parsers.HandshakeHeader.synth_handshakeHeader_recip_injective",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "Parsers.HandshakeType_pretyping_4ae277eb4b83707366cb7ae1906c30cf",
        "data_typing_intro_Parsers.HandshakeType.Client_hello@tok",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Parsers.HandshakeHeader.handshakeHeader_",
        "equation_Parsers.HandshakeHeader.synth_handshakeHeader_recip",
        "fuel_guarded_inversion_Parsers.HandshakeHeader.handshakeHeader",
        "proj_equation_Parsers.HandshakeHeader.MkhandshakeHeader_length",
        "proj_equation_Parsers.HandshakeHeader.MkhandshakeHeader_msg_type",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "token_correspondence_Parsers.HandshakeHeader.synth_handshakeHeader_recip"
      ],
      0,
      "af7bfffa8870656bd49205dca684e7ac"
    ],
    [
      "Parsers.HandshakeHeader.handshakeHeader_parser",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.get_parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_Parsers.HandshakeHeader.handshakeHeader_",
        "equation_Parsers.HandshakeHeader.handshakeHeader__parser",
        "equation_Parsers.HandshakeHeader.handshakeHeader__parser_kind",
        "equation_Parsers.HandshakeHeader.handshakeHeader_parser_kind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "078c7b89a102e1e8f3a0d72fa3dda667"
    ],
    [
      "Parsers.HandshakeHeader.handshakeHeader'_serializer",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.HandshakeType.handshakeType_parser_kind",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "a21cf44ffd369a73b947198d028fff7e"
    ],
    [
      "Parsers.HandshakeHeader.handshakeHeader_serializer",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.get_parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_Parsers.HandshakeHeader.handshakeHeader_",
        "equation_Parsers.HandshakeHeader.handshakeHeader__parser",
        "equation_Parsers.HandshakeHeader.handshakeHeader__parser_kind",
        "equation_Parsers.HandshakeHeader.handshakeHeader_parser_kind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "d5435611008490be2d6f6e8028e72d54"
    ],
    [
      "Parsers.HandshakeHeader.handshakeHeader_bytesize_eq",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.serialize",
        "equation_Parsers.HandshakeHeader.handshakeHeader_bytesize"
      ],
      0,
      "3b687e4a5bf52e2b47f739faf3097908"
    ],
    [
      "Parsers.HandshakeHeader.handshakeHeader_parser32",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.get_parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_Parsers.HandshakeHeader.handshakeHeader_",
        "equation_Parsers.HandshakeHeader.handshakeHeader__parser",
        "equation_Parsers.HandshakeHeader.handshakeHeader__parser_kind",
        "equation_Parsers.HandshakeHeader.handshakeHeader_parser_kind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "d60ea753ad1c2ec80efc47a74147d3c9"
    ],
    [
      "Parsers.HandshakeHeader.handshakeHeader'_serializer32",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.SLow.Combinators.serialize32_kind_precond",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_Parsers.HandshakeType.handshakeType_parser_kind",
        "equation_Prims.nat",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_07033d2b2c1d2fb6c1dd88a8f1110ac2",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length"
      ],
      0,
      "fa224c8324e115a774051d78a351e3c3"
    ],
    [
      "Parsers.HandshakeHeader.handshakeHeader_serializer32",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.get_parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_Parsers.HandshakeHeader.handshakeHeader_",
        "equation_Parsers.HandshakeHeader.handshakeHeader__parser",
        "equation_Parsers.HandshakeHeader.handshakeHeader__parser_kind",
        "equation_Parsers.HandshakeHeader.handshakeHeader_parser_kind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "f03d96e6479388a37c39fb62a297cd5d"
    ],
    [
      "Parsers.HandshakeHeader.handshakeHeader'_size32",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.max_uint32",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.SLow.Base.size32_constant_precond",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_Parsers.HandshakeType.handshakeType_parser_kind",
        "equation_Prims.nat",
        "function_token_typing_Prims.__cache_version_number__", "int_typing",
        "lemma_FStar.UInt32.vu_inv", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_07033d2b2c1d2fb6c1dd88a8f1110ac2",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "refinement_interpretation_Tm_refine_ba523126f67e00e7cd55f0b92f16681d",
        "typing_FStar.UInt32.v", "typing_LowParse.Low.Base.max_uint32",
        "typing_LowParse.Low.Base.validator_max_length"
      ],
      0,
      "e66f05d5f47e5971ea4f4c2176dbe8f7"
    ],
    [
      "Parsers.HandshakeHeader.handshakeHeader_size32",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.get_parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_Parsers.HandshakeHeader.handshakeHeader_",
        "equation_Parsers.HandshakeHeader.handshakeHeader__parser",
        "equation_Parsers.HandshakeHeader.handshakeHeader__parser_kind",
        "equation_Parsers.HandshakeHeader.handshakeHeader_parser_kind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "8df91f4e2ec0f279ae0d83fc5c101433"
    ],
    [
      "Parsers.HandshakeHeader.handshakeHeader_validator",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.get_parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_Parsers.HandshakeHeader.handshakeHeader_",
        "equation_Parsers.HandshakeHeader.handshakeHeader__parser",
        "equation_Parsers.HandshakeHeader.handshakeHeader__parser_kind",
        "equation_Parsers.HandshakeHeader.handshakeHeader_parser_kind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "1be2f054d674ad1d8c6c3bff0e939021"
    ],
    [
      "Parsers.HandshakeHeader.handshakeHeader_jumper",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.HandshakeHeader.handshakeHeader_parser_kind",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "6a0e81821101eab66f5e2e71389aa630"
    ],
    [
      "Parsers.HandshakeHeader.handshakeHeader_bytesize_eqn",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.get_parser_kind",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_Parsers.HandshakeHeader.handshakeHeader_",
        "equation_Parsers.HandshakeHeader.handshakeHeader__parser",
        "equation_Parsers.HandshakeHeader.handshakeHeader__parser_kind",
        "equation_Parsers.HandshakeHeader.handshakeHeader__serializer",
        "equation_Parsers.HandshakeHeader.handshakeHeader_bytesize",
        "equation_Parsers.HandshakeHeader.handshakeHeader_parser_kind",
        "equation_Parsers.HandshakeHeader.handshakeHeader_serializer",
        "equation_Parsers.HandshakeHeader.synth_handshakeHeader_recip",
        "equation_Parsers.HandshakeType.handshakeType_parser_kind",
        "equation_Prims.nat",
        "fuel_guarded_inversion_Parsers.HandshakeHeader.handshakeHeader",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_Parsers.HandshakeHeader.handshakeHeader_",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_Parsers.HandshakeType.handshakeType_bytesize_eqn",
        "primitive_Prims.op_Addition",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_22e74dfa2e8dfb6c739b3c533a63922e",
        "refinement_interpretation_Tm_refine_ba523126f67e00e7cd55f0b92f16681d",
        "typing_FStar.Seq.Base.length",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowParse.Spec.Int.parse_u32",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParse.Spec.Int.serialize_u32",
        "typing_Parsers.HandshakeHeader.__proj__MkhandshakeHeader__item__msg_type",
        "typing_Parsers.HandshakeHeader.handshakeHeader__parser",
        "typing_Parsers.HandshakeHeader.handshakeHeader__serializer",
        "typing_Parsers.HandshakeHeader.handshakeHeader_parser_kind",
        "typing_Parsers.HandshakeHeader.synth_handshakeHeader_recip",
        "unit_inversion"
      ],
      0,
      "1303243931859af09847b9cab3cf5764"
    ],
    [
      "Parsers.HandshakeHeader.gaccessor'_handshakeHeader_msg_type",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.HandshakeType.handshakeType_parser_kind",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "de9828aba165027746fd6ca3043e9c50"
    ],
    [
      "Parsers.HandshakeHeader.accessor'_handshakeHeader_msg_type",
      1,
      2,
      1,
      [
        "@query", "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_Parsers.HandshakeType.handshakeType_parser_kind",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "64d89f838592771e8db7f60a6af5dbfe"
    ],
    [
      "Parsers.HandshakeHeader.accessor'_handshakeHeader_length",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_Parsers.HandshakeType.handshakeType_parser_kind",
        "equation_Prims.nat", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "629d71551a1565a9640164d06c5a84cd"
    ],
    [
      "Parsers.HandshakeHeader.clens_handshakeHeader_handshakeHeader'",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "0310a792cc1b5ece50003abd47d443dd"
    ],
    [
      "Parsers.HandshakeHeader.gaccessor_handshakeHeader_handshakeHeader'",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_Parsers.HandshakeType.handshakeType_parser_kind",
        "equation_Prims.nat", "int_inversion", "int_typing",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "3dab2ed14c06aef9d2fc2654e2d50a87"
    ],
    [
      "Parsers.HandshakeHeader.accessor_handshakeHeader_handshakeHeader'",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_Parsers.HandshakeType.handshakeType_parser_kind",
        "equation_Prims.nat", "int_inversion", "int_typing",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind"
      ],
      0,
      "29182312cbe6ba46f03feed40715d194"
    ],
    [
      "Parsers.HandshakeHeader.gaccessor_handshakeHeader_msg_type",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "Parsers.HandshakeType_pretyping_4ae277eb4b83707366cb7ae1906c30cf",
        "data_typing_intro_Parsers.HandshakeType.Client_hello@tok",
        "equation_FStar.Pervasives.Native.fst",
        "equation_LowParse.Low.Base.clens_compose",
        "equation_LowParse.Low.Base.clens_compose_cond",
        "equation_LowParse.Low.Base.clens_eq",
        "equation_LowParse.Low.Base.clens_id",
        "equation_LowParse.Low.Combinators.clens_fst",
        "equation_LowParse.Low.Combinators.clens_synth",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_Parsers.HandshakeHeader.clens_handshakeHeader_handshakeHeader_",
        "equation_Parsers.HandshakeHeader.clens_handshakeHeader_msg_type",
        "equation_Parsers.HandshakeHeader.handshakeHeader_",
        "equation_Parsers.HandshakeHeader.synth_handshakeHeader_recip",
        "equation_Prims.l_True",
        "fuel_guarded_inversion_Parsers.HandshakeHeader.handshakeHeader",
        "interpretation_Tm_abs_1150ff03d7e6ff814eedd429975064b4",
        "interpretation_Tm_abs_4a6fb92fc3aadbdc6543585d1b85d3da",
        "interpretation_Tm_abs_623d8abb9383ae0818a611aa801ca23d",
        "interpretation_Tm_abs_66926e89e50e2ac69caf858cc1113f07",
        "interpretation_Tm_abs_d5c366e34e5dbe32e30c9b189551b65d",
        "proj_equation_FStar.Pervasives.Native.Mktuple2__1",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_cond",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_get",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_cond",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_get",
        "token_correspondence_FStar.Pervasives.Native.fst",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_cond",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "token_correspondence_LowParse.Low.Base.clens_compose_cond",
        "token_correspondence_Parsers.HandshakeHeader.__proj__MkhandshakeHeader__item__msg_type",
        "token_correspondence_Parsers.HandshakeHeader.synth_handshakeHeader_recip",
        "true_interp"
      ],
      0,
      "ed673d52d29a8d3d01e8c48485b48969"
    ],
    [
      "Parsers.HandshakeHeader.accessor_handshakeHeader_msg_type",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "Parsers.HandshakeType_pretyping_4ae277eb4b83707366cb7ae1906c30cf",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "data_typing_intro_Parsers.HandshakeType.Client_hello@tok",
        "equation_FStar.Pervasives.Native.fst", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.clens_compose",
        "equation_LowParse.Low.Base.clens_compose_cond",
        "equation_LowParse.Low.Base.clens_eq",
        "equation_LowParse.Low.Base.clens_id",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.Low.Combinators.clens_fst",
        "equation_LowParse.Low.Combinators.clens_synth",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_Parsers.HandshakeHeader.clens_handshakeHeader_handshakeHeader_",
        "equation_Parsers.HandshakeHeader.clens_handshakeHeader_msg_type",
        "equation_Parsers.HandshakeHeader.handshakeHeader_",
        "equation_Parsers.HandshakeHeader.synth_handshakeHeader_recip",
        "equation_Parsers.HandshakeType.handshakeType_parser_kind",
        "equation_Prims.l_True",
        "fuel_guarded_inversion_Parsers.HandshakeHeader.handshakeHeader",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion",
        "interpretation_Tm_abs_1150ff03d7e6ff814eedd429975064b4",
        "interpretation_Tm_abs_4a6fb92fc3aadbdc6543585d1b85d3da",
        "interpretation_Tm_abs_623d8abb9383ae0818a611aa801ca23d",
        "interpretation_Tm_abs_66926e89e50e2ac69caf858cc1113f07",
        "interpretation_Tm_abs_d5c366e34e5dbe32e30c9b189551b65d",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Mktuple2__1",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_cond",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_get",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_cond",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_get",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_07033d2b2c1d2fb6c1dd88a8f1110ac2",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "token_correspondence_FStar.Pervasives.Native.fst",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_cond",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "token_correspondence_LowParse.Low.Base.clens_compose_cond",
        "token_correspondence_Parsers.HandshakeHeader.__proj__MkhandshakeHeader__item__msg_type",
        "token_correspondence_Parsers.HandshakeHeader.synth_handshakeHeader_recip",
        "true_interp", "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length"
      ],
      0,
      "a00bfa83fc0113e6e17ccb4245b9f5cf"
    ],
    [
      "Parsers.HandshakeHeader.gaccessor_handshakeHeader_length",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "Parsers.HandshakeType_pretyping_4ae277eb4b83707366cb7ae1906c30cf",
        "data_typing_intro_Parsers.HandshakeType.Client_hello@tok",
        "equation_FStar.Pervasives.Native.snd",
        "equation_LowParse.Low.Base.clens_compose",
        "equation_LowParse.Low.Base.clens_compose_cond",
        "equation_LowParse.Low.Base.clens_eq",
        "equation_LowParse.Low.Base.clens_id",
        "equation_LowParse.Low.Combinators.clens_snd",
        "equation_LowParse.Low.Combinators.clens_synth",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_Parsers.HandshakeHeader.clens_handshakeHeader_handshakeHeader_",
        "equation_Parsers.HandshakeHeader.clens_handshakeHeader_length",
        "equation_Parsers.HandshakeHeader.handshakeHeader_",
        "equation_Parsers.HandshakeHeader.synth_handshakeHeader_recip",
        "equation_Prims.l_True",
        "fuel_guarded_inversion_Parsers.HandshakeHeader.handshakeHeader",
        "interpretation_Tm_abs_1150ff03d7e6ff814eedd429975064b4",
        "interpretation_Tm_abs_4a6fb92fc3aadbdc6543585d1b85d3da",
        "interpretation_Tm_abs_623d8abb9383ae0818a611aa801ca23d",
        "interpretation_Tm_abs_66926e89e50e2ac69caf858cc1113f07",
        "interpretation_Tm_abs_d5c366e34e5dbe32e30c9b189551b65d",
        "proj_equation_FStar.Pervasives.Native.Mktuple2__2",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_cond",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_get",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_cond",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_get",
        "token_correspondence_FStar.Pervasives.Native.snd",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_cond",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "token_correspondence_LowParse.Low.Base.clens_compose_cond",
        "token_correspondence_Parsers.HandshakeHeader.__proj__MkhandshakeHeader__item__length",
        "token_correspondence_Parsers.HandshakeHeader.synth_handshakeHeader_recip",
        "true_interp"
      ],
      0,
      "5d98bbd3ace2946d2c818a993b51259f"
    ],
    [
      "Parsers.HandshakeHeader.accessor_handshakeHeader_length",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "Parsers.HandshakeType_pretyping_4ae277eb4b83707366cb7ae1906c30cf",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "data_typing_intro_Parsers.HandshakeType.Client_hello@tok",
        "equation_FStar.Pervasives.Native.snd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Low.Base.clens_compose",
        "equation_LowParse.Low.Base.clens_compose_cond",
        "equation_LowParse.Low.Base.clens_eq",
        "equation_LowParse.Low.Base.clens_id",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.Low.Combinators.clens_snd",
        "equation_LowParse.Low.Combinators.clens_synth",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_Parsers.HandshakeHeader.clens_handshakeHeader_handshakeHeader_",
        "equation_Parsers.HandshakeHeader.clens_handshakeHeader_length",
        "equation_Parsers.HandshakeHeader.handshakeHeader_",
        "equation_Parsers.HandshakeHeader.synth_handshakeHeader_recip",
        "equation_Parsers.HandshakeType.handshakeType_parser_kind",
        "equation_Prims.l_True",
        "fuel_guarded_inversion_Parsers.HandshakeHeader.handshakeHeader",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion",
        "interpretation_Tm_abs_1150ff03d7e6ff814eedd429975064b4",
        "interpretation_Tm_abs_4a6fb92fc3aadbdc6543585d1b85d3da",
        "interpretation_Tm_abs_623d8abb9383ae0818a611aa801ca23d",
        "interpretation_Tm_abs_66926e89e50e2ac69caf858cc1113f07",
        "interpretation_Tm_abs_d5c366e34e5dbe32e30c9b189551b65d",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Mktuple2__2",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_cond",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_get",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_cond",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_get",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_07033d2b2c1d2fb6c1dd88a8f1110ac2",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "token_correspondence_FStar.Pervasives.Native.snd",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_cond",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "token_correspondence_LowParse.Low.Base.clens_compose_cond",
        "token_correspondence_Parsers.HandshakeHeader.__proj__MkhandshakeHeader__item__length",
        "token_correspondence_Parsers.HandshakeHeader.synth_handshakeHeader_recip",
        "true_interp", "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.validator_max_length"
      ],
      0,
      "9e266c2a1f70748c3fee2a856279d517"
    ],
    [
      "Parsers.HandshakeHeader.handshakeHeader_valid",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "equation_Prims.squash",
        "l_and-interp",
        "refinement_interpretation_Tm_refine_8d65e998a07dd53ec478e27017d9dba5"
      ],
      0,
      "defd3a7690cbc80680d5e4b659925a4b"
    ],
    [
      "Parsers.HandshakeHeader.handshakeHeader_valid",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "equation_LowParse.Low.Base.valid_content",
        "equation_LowParse.Low.Base.valid_content_pos",
        "equation_LowParse.Low.Base.valid_pos",
        "equation_LowParse.Spec.Base.get_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_Parsers.HandshakeHeader.handshakeHeader_",
        "equation_Parsers.HandshakeHeader.handshakeHeader__parser",
        "equation_Parsers.HandshakeHeader.handshakeHeader__parser_kind",
        "equation_Parsers.HandshakeHeader.handshakeHeader_parser",
        "equation_Parsers.HandshakeHeader.synth_handshakeHeader",
        "fuel_guarded_inversion_LowParse.Slice.slice",
        "function_token_typing_Parsers.HandshakeHeader.handshakeHeader_",
        "lemma_LowParse.Low.Base.valid_pos_get_valid_pos",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "typing_Parsers.HandshakeHeader.handshakeHeader__parser",
        "typing_Parsers.HandshakeHeader.handshakeHeader_parser_kind"
      ],
      0,
      "bd4dc8aaba021c89b95a9c90f8fdf5b8"
    ]
  ]
]