[
  "Îè~∏˚™ÿˇ◊úH©§ Ÿ√",
  [
    [
      "ParsersAux.Binders.has_binders",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "f2d57d0acdfa9543021203fd95ee8da6"
    ],
    [
      "ParsersAux.Binders.get_binders",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "equation_ParsersAux.Binders.has_binders",
        "primitive_Prims.op_AmpAmp", "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_8879e4d447c306881afdf046534ba346"
      ],
      0,
      "d5d8533172b34d4cab0e5406632a3119"
    ],
    [
      "ParsersAux.Binders.offeredPsks_set_binders",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "data_typing_intro_Parsers.OfferedPsks.MkofferedPsks@tok",
        "fuel_guarded_inversion_Parsers.OfferedPsks.offeredPsks",
        "lemma_Parsers.OfferedPsks.offeredPsks_bytesize_eqn",
        "proj_equation_Parsers.OfferedPsks.MkofferedPsks_binders",
        "proj_equation_Parsers.OfferedPsks.MkofferedPsks_identities",
        "projection_inverse_Parsers.OfferedPsks.MkofferedPsks_binders",
        "projection_inverse_Parsers.OfferedPsks.MkofferedPsks_identities",
        "refinement_interpretation_Tm_refine_cf739cf213ea592ef1bb7b2fb67a3e6d",
        "typing_Parsers.OfferedPsks.__proj__MkofferedPsks__item__identities"
      ],
      0,
      "0e5aecf63e87097bf9f8ac26a70f3e8c"
    ],
    [
      "ParsersAux.Binders.offeredPsks_binders_offset",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_c83b870bbcba94f49cc6bf1b49fd83fe",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "eq2-interp",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Low.Base.max_uint32",
        "equation_LowParse.SLow.Base.size32",
        "equation_LowParse.SLow.Base.size32_postcond",
        "equation_LowParse.SLow.Base.u32_max",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "equation_Parsers.OfferedPsks_identities.offeredPsks_identities",
        "equation_Parsers.OfferedPsks_identities.offeredPsks_identities_parser_kind",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_Parsers.OfferedPsks_binders.offeredPsks_binders",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_LowParse.Spec.Base.serialize_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_GreaterThan",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_Parsers.OfferedPsks.MkofferedPsks_binders",
        "proj_equation_Parsers.OfferedPsks.MkofferedPsks_identities",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_4dc146ed944efb3b210bff483da51ba5",
        "refinement_interpretation_Tm_refine_8d6bedd838f298584596450460561587",
        "refinement_interpretation_Tm_refine_a347709bfeba48709474ad26f4f6be87",
        "refinement_kinding_Tm_refine_8c0714c5508deecd4c7dd8b2b9d054de",
        "typing_FStar.UInt32.v", "typing_LowParse.SLow.Base.u32_max",
        "typing_LowParse.Spec.Base.serialize",
        "typing_Parsers.OfferedPsks.__proj__MkofferedPsks__item__binders",
        "typing_Parsers.OfferedPsks.__proj__MkofferedPsks__item__identities",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_serializer",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_parser",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_parser_kind",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_serializer",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_size32"
      ],
      0,
      "b4c69e521c379e12f8bfc7eec819773f"
    ],
    [
      "ParsersAux.Binders.offeredPsks_binders_pos",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_b04d122514f99a72ff9ce3f85f1f08f9",
        "b2t_def", "eq2-interp", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.SLow.Base.size32",
        "equation_LowParse.SLow.Base.size32_postcond",
        "equation_LowParse.SLow.Base.u32_max",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders",
        "equation_Parsers.OfferedPsks_identities.offeredPsks_identities",
        "equation_Parsers.OfferedPsks_identities.offeredPsks_identities_parser_kind",
        "equation_ParsersAux.Binders.offeredPsks_binders_offset",
        "fuel_guarded_inversion_LowParse.Slice.slice",
        "function_token_typing_FStar.UInt8.t", "int_inversion",
        "lemma_FStar.Ghost.reveal_hide",
        "lemma_LowParse.Low.Base.seq_starts_with_append_r_elim",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_Parsers.OfferedPsks.MkofferedPsks_identities",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_0953dc9da07d4a90efb8ee9f386b89de",
        "refinement_interpretation_Tm_refine_88e21d36d9e713615fce456e18b30e39",
        "refinement_interpretation_Tm_refine_b0ee530aa19ff4ff339f2639fc3e23d1",
        "refinement_interpretation_Tm_refine_e70272bbea6f6c7d05ad2f356644d43f",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_609152d84d8b640876aaac6ef0ab5cb7",
        "refinement_kinding_Tm_refine_8c0714c5508deecd4c7dd8b2b9d054de",
        "typing_FStar.UInt32.v", "typing_LowParse.SLow.Base.u32_max",
        "typing_LowParse.Slice.bytes_of_slice_from",
        "typing_LowParse.Spec.Base.serialize",
        "typing_Parsers.OfferedPsks.__proj__MkofferedPsks__item__binders",
        "typing_Parsers.OfferedPsks.__proj__MkofferedPsks__item__identities",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_serializer",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_parser",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_parser_kind",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_serializer",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_size32"
      ],
      0,
      "ae458492ac9296601d456f13c2a8fcc4"
    ],
    [
      "ParsersAux.Binders.truncate_offeredPsks",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size",
        "equation_ParsersAux.Binders.offeredPsks_binders_offset",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_f9a8c1a9e3d42ac5940ad08b937d07de",
        "typing_ParsersAux.Binders.offeredPsks_binders_offset"
      ],
      0,
      "f5475076551bef5504813c355d859a65"
    ],
    [
      "ParsersAux.Binders.binders_offset_offeredPsks_set_binders",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_b04d122514f99a72ff9ce3f85f1f08f9",
        "b2t_def", "constructor_distinct_FStar.Pervasives.Native.Some",
        "eq2-interp", "equation_FStar.Bytes.lbytes",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.SLow.Base.size32",
        "equation_LowParse.SLow.Base.size32_postcond",
        "equation_LowParse.SLow.Base.u32_max",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.OfferedPsks.offeredPsks_parser_kind",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders",
        "equation_Parsers.OfferedPsks_identities.offeredPsks_identities",
        "equation_Parsers.OfferedPsks_identities.offeredPsks_identities_parser_kind",
        "equation_ParsersAux.Binders.offeredPsks_binders_offset",
        "equation_ParsersAux.Binders.offeredPsks_set_binders",
        "equation_ParsersAux.Binders.truncate_offeredPsks",
        "equation_Prims.nat",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Parsers.OfferedPsks.offeredPsks",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "kinding_Parsers.OfferedPsks.offeredPsks@tok",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Spec.Base.serialize_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_Parsers.OfferedPsks.MkofferedPsks_binders",
        "proj_equation_Parsers.OfferedPsks.MkofferedPsks_identities",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_Parsers.OfferedPsks.MkofferedPsks_binders",
        "projection_inverse_Parsers.OfferedPsks.MkofferedPsks_identities",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_c35bd73f0e2d8ededcd2d562b5188374",
        "refinement_interpretation_Tm_refine_cf739cf213ea592ef1bb7b2fb67a3e6d",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_e70272bbea6f6c7d05ad2f356644d43f",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f9a8c1a9e3d42ac5940ad08b937d07de",
        "refinement_kinding_Tm_refine_609152d84d8b640876aaac6ef0ab5cb7",
        "refinement_kinding_Tm_refine_8c0714c5508deecd4c7dd8b2b9d054de",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.empty",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt.max_int",
        "typing_FStar.UInt32.v", "typing_LowParse.Spec.Base.serialize",
        "typing_Parsers.OfferedPsks.__proj__MkofferedPsks__item__binders",
        "typing_Parsers.OfferedPsks.__proj__MkofferedPsks__item__identities",
        "typing_Parsers.OfferedPsks.offeredPsks_parser",
        "typing_Parsers.OfferedPsks.offeredPsks_parser_kind",
        "typing_Parsers.OfferedPsks.offeredPsks_serializer",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_serializer",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_parser",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_parser_kind",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_serializer",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_size32",
        "typing_ParsersAux.Binders.offeredPsks_binders_offset",
        "typing_ParsersAux.Binders.offeredPsks_set_binders",
        "typing_ParsersAux.Binders.truncate_offeredPsks"
      ],
      0,
      "4bc12de0a0ab830dffb95a28f616d712"
    ],
    [
      "ParsersAux.Binders.truncate_offeredPsks_eq_left",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_b04d122514f99a72ff9ce3f85f1f08f9",
        "b2t_def", "constructor_distinct_FStar.Pervasives.Native.Some",
        "eq2-interp", "equation_FStar.Bytes.lbytes",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.SLow.Base.size32",
        "equation_LowParse.SLow.Base.size32_postcond",
        "equation_LowParse.SLow.Base.u32_max",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.OfferedPsks.offeredPsks_parser_kind",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "equation_Parsers.OfferedPsks_identities.offeredPsks_identities",
        "equation_Parsers.OfferedPsks_identities.offeredPsks_identities_parser_kind",
        "equation_ParsersAux.Binders.offeredPsks_binders_offset",
        "equation_ParsersAux.Binders.truncate_offeredPsks",
        "equation_Prims.nat",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Parsers.OfferedPsks.offeredPsks",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "kinding_Parsers.OfferedPsks.offeredPsks@tok",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Spec.Base.serialize_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_Parsers.OfferedPsks.MkofferedPsks_binders",
        "proj_equation_Parsers.OfferedPsks.MkofferedPsks_identities",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_e70272bbea6f6c7d05ad2f356644d43f",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f9a8c1a9e3d42ac5940ad08b937d07de",
        "refinement_kinding_Tm_refine_609152d84d8b640876aaac6ef0ab5cb7",
        "refinement_kinding_Tm_refine_8c0714c5508deecd4c7dd8b2b9d054de",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.Seq.Base.empty", "typing_FStar.Seq.Base.length",
        "typing_FStar.UInt.max_int", "typing_FStar.UInt32.v",
        "typing_LowParse.Spec.Base.serialize",
        "typing_Parsers.OfferedPsks.__proj__MkofferedPsks__item__binders",
        "typing_Parsers.OfferedPsks.__proj__MkofferedPsks__item__identities",
        "typing_Parsers.OfferedPsks.offeredPsks_parser",
        "typing_Parsers.OfferedPsks.offeredPsks_parser_kind",
        "typing_Parsers.OfferedPsks.offeredPsks_serializer",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_serializer",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_parser",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_parser_kind",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_serializer",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_size32",
        "typing_ParsersAux.Binders.offeredPsks_binders_offset",
        "typing_ParsersAux.Binders.truncate_offeredPsks"
      ],
      0,
      "4451c700ea9e7de67ef479c883e1e8a1"
    ],
    [
      "ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_set_binders",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "equation_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders",
        "equation_Parsers.OfferedPsks_identities.offeredPsks_identities",
        "equation_Parsers.PreSharedKeyClientExtension.preSharedKeyClientExtension",
        "equation_ParsersAux.Binders.offeredPsks_set_binders",
        "fuel_guarded_inversion_Parsers.OfferedPsks.offeredPsks",
        "lemma_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_bytesize_eqn",
        "lemma_Parsers.OfferedPsks.offeredPsks_bytesize_eqn",
        "lemma_Parsers.OfferedPsks_binders.offeredPsks_binders_bytesize_eqn",
        "lemma_Parsers.OfferedPsks_identities.offeredPsks_identities_bytesize_eqn",
        "lemma_Parsers.PreSharedKeyClientExtension.preSharedKeyClientExtension_bytesize_eqn",
        "primitive_Prims.op_Addition",
        "proj_equation_Parsers.OfferedPsks.MkofferedPsks_binders",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_54d8e4368ef4be5e2ddd5dfe39051b03",
        "refinement_interpretation_Tm_refine_609152d84d8b640876aaac6ef0ab5cb7",
        "refinement_interpretation_Tm_refine_8c0714c5508deecd4c7dd8b2b9d054de",
        "refinement_interpretation_Tm_refine_c35bd73f0e2d8ededcd2d562b5188374",
        "refinement_interpretation_Tm_refine_cf739cf213ea592ef1bb7b2fb67a3e6d",
        "typing_Parsers.OfferedPsks.__proj__MkofferedPsks__item__binders",
        "typing_Parsers.OfferedPsks.__proj__MkofferedPsks__item__identities",
        "typing_ParsersAux.Binders.offeredPsks_set_binders"
      ],
      0,
      "448cf5d8f2b959fa351ba8ea4f157ced"
    ],
    [
      "ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_binders_offset",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key",
        "equation_Parsers.OfferedPsks.offeredPsks_parser_kind",
        "equation_Parsers.PreSharedKeyClientExtension.preSharedKeyClientExtension",
        "equation_ParsersAux.Binders.offeredPsks_binders_offset",
        "equation_Prims.nat",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Parsers.OfferedPsks.offeredPsks",
        "function_token_typing_FStar.UInt8.t", "int_typing",
        "kinding_Parsers.OfferedPsks.offeredPsks@tok",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_Parsers.OfferedPsks.offeredPsks_bytesize_eqn",
        "lemma_Parsers.PreSharedKeyClientExtension.preSharedKeyClientExtension_bytesize_eqn",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_54d8e4368ef4be5e2ddd5dfe39051b03",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f9a8c1a9e3d42ac5940ad08b937d07de",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.UInt.fits", "typing_FStar.UInt32.uint_to_t",
        "typing_FStar.UInt32.v", "typing_LowParse.Spec.Base.serialize",
        "typing_LowParse.Spec.Base.total_constant_size_parser_kind",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.serialize_bounded_integer",
        "typing_Parsers.OfferedPsks.offeredPsks_bytesize",
        "typing_Parsers.OfferedPsks.offeredPsks_parser",
        "typing_Parsers.OfferedPsks.offeredPsks_parser_kind",
        "typing_Parsers.OfferedPsks.offeredPsks_serializer",
        "typing_ParsersAux.Binders.offeredPsks_binders_offset"
      ],
      0,
      "14b34ba9e44b45a1bcf299f30f2631ae"
    ],
    [
      "ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_binders_pos",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_b04d122514f99a72ff9ce3f85f1f08f9",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some", "eq2-interp",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Low.Base.seq_starts_with",
        "equation_LowParse.SLow.Base.size32",
        "equation_LowParse.SLow.Base.size32_postcond",
        "equation_LowParse.SLow.Base.u32_max",
        "equation_LowParse.Slice.buffer_srel_of_srel",
        "equation_LowParse.Slice.bytes_of_slice_from",
        "equation_LowParse.Slice.live_slice", "equation_LowParse.Slice.srel",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key",
        "equation_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_parser_kind",
        "equation_Parsers.OfferedPsks.offeredPsks_parser_kind",
        "equation_Parsers.OfferedPsks_identities.offeredPsks_identities",
        "equation_Parsers.OfferedPsks_identities.offeredPsks_identities_parser_kind",
        "equation_Parsers.PreSharedKeyClientExtension.preSharedKeyClientExtension",
        "equation_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_binders_offset",
        "equation_ParsersAux.Binders.offeredPsks_binders_offset",
        "equation_Prims.nat", "fuel_guarded_inversion_LowParse.Slice.slice",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "kinding_Parsers.OfferedPsks.offeredPsks@tok",
        "lemma_FStar.Ghost.reveal_hide",
        "lemma_FStar.HyperStack.ST.lemma_equal_domains_trans",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_refl",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Low.Base.seq_starts_with_append_r_elim",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_LowStar.Monotonic.Buffer.lemma_live_equal_mem_domains",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_LowStar.Monotonic.Buffer.length_null_1",
        "lemma_LowStar.Monotonic.Buffer.length_null_2",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_none_r",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_none",
        "lemma_LowStar.Monotonic.Buffer.modifies_buffer_elim",
        "lemma_LowStar.Monotonic.Buffer.modifies_trans_linear",
        "lemma_Parsers.PreSharedKeyClientExtension.preSharedKeyClientExtension_bytesize_eqn",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_GreaterThan", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Slice.Mkslice_base",
        "proj_equation_LowParse.Slice.Mkslice_len",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_Parsers.OfferedPsks.MkofferedPsks_identities",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_1ba8fd8bb363097813064c67740b2de5",
        "refinement_interpretation_Tm_refine_2f0d2e87b21b52a10cb8b1cbd88b1c91",
        "refinement_interpretation_Tm_refine_3ae7934f7bb0b211572daa2c0f2cb446",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_54d8e4368ef4be5e2ddd5dfe39051b03",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_8ecf68458670141d0da68d3f08ee3970",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d46cee12bde5a137dc60c57b37997e0a",
        "refinement_interpretation_Tm_refine_e70272bbea6f6c7d05ad2f356644d43f",
        "refinement_interpretation_Tm_refine_e727f8d2508aea0137da0b876af9d049",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f9a8c1a9e3d42ac5940ad08b937d07de",
        "refinement_kinding_Tm_refine_54d8e4368ef4be5e2ddd5dfe39051b03",
        "refinement_kinding_Tm_refine_8c0714c5508deecd4c7dd8b2b9d054de",
        "typing_FStar.Seq.Base.empty", "typing_FStar.Seq.Base.length",
        "typing_FStar.Seq.Base.slice", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.add", "typing_FStar.UInt32.uint_to_t",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Slice.__proj__Mkslice__item__base",
        "typing_LowParse.Slice.__proj__Mkslice__item__len",
        "typing_LowParse.Slice.bytes_of_slice_from",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowParse.Spec.Base.total_constant_size_parser_kind",
        "typing_LowParse.Spec.BoundedInt.bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_LowStar.Monotonic.Buffer.loc_buffer",
        "typing_LowStar.Monotonic.Buffer.loc_none",
        "typing_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_parser",
        "typing_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_parser_kind",
        "typing_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_serializer",
        "typing_Parsers.OfferedPsks.__proj__MkofferedPsks__item__identities",
        "typing_Parsers.OfferedPsks.offeredPsks_bytesize",
        "typing_Parsers.OfferedPsks.offeredPsks_parser",
        "typing_Parsers.OfferedPsks.offeredPsks_parser_kind",
        "typing_Parsers.OfferedPsks.offeredPsks_serializer",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_parser",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_parser_kind",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_serializer",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_size32",
        "typing_ParsersAux.Binders.offeredPsks_binders_offset"
      ],
      0,
      "d2329f9e2e62e725ad7a246db91ca293"
    ],
    [
      "ParsersAux.Binders.truncate_clientHelloExtension_CHE_pre_shared_key",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size",
        "equation_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_binders_offset",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_df4a8e20c9d3297618abf0570f5cda66",
        "typing_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_binders_offset"
      ],
      0,
      "e7e0c22647c4b73dd4b208817d66ebe0"
    ],
    [
      "ParsersAux.Binders.binders_offset_clientHelloExtension_CHE_pre_shared_key_set_binders",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_b04d122514f99a72ff9ce3f85f1f08f9",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_Parsers.PskIdentity.MkpskIdentity",
        "data_elim_Prims.Cons",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None", "eq2-interp",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.SLow.Base.size32",
        "equation_LowParse.SLow.Base.size32_postcond",
        "equation_LowParse.SLow.Base.u32_max",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key",
        "equation_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_parser_kind",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "equation_Parsers.OfferedPsks_identities.offeredPsks_identities",
        "equation_Parsers.OfferedPsks_identities.offeredPsks_identities_parser_kind",
        "equation_Parsers.PreSharedKeyClientExtension.preSharedKeyClientExtension",
        "equation_Parsers.PskBinderEntry.pskBinderEntry",
        "equation_Parsers.PskIdentity_identity.pskIdentity_identity",
        "equation_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_binders_offset",
        "equation_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_set_binders",
        "equation_ParsersAux.Binders.offeredPsks_binders_offset",
        "equation_ParsersAux.Binders.offeredPsks_set_binders",
        "equation_ParsersAux.Binders.truncate_clientHelloExtension_CHE_pre_shared_key",
        "equation_ParsersAux.Binders.truncate_offeredPsks",
        "equation_Prims.eq2", "equation_Prims.nat", "equation_Prims.squash",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Parsers.OfferedPsks.offeredPsks",
        "fuel_guarded_inversion_Parsers.PskIdentity.pskIdentity",
        "fuel_guarded_inversion_Prims.list",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_Parsers.OfferedPsks_binders.offeredPsks_binders_list_bytesize_nil",
        "function_token_typing_Parsers.OfferedPsks_identities.offeredPsks_identities_list_bytesize_nil",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "int_typing",
        "kinding_Parsers.OfferedPsks.offeredPsks@tok",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_Parsers.OfferedPsks.offeredPsks_bytesize_eqn",
        "lemma_Parsers.OfferedPsks_binders.offeredPsks_binders_bytesize_eqn",
        "lemma_Parsers.OfferedPsks_binders.offeredPsks_binders_list_bytesize_cons",
        "lemma_Parsers.OfferedPsks_identities.offeredPsks_identities_bytesize_eqn",
        "lemma_Parsers.OfferedPsks_identities.offeredPsks_identities_list_bytesize_cons",
        "lemma_Parsers.PreSharedKeyClientExtension.preSharedKeyClientExtension_bytesize_eqn",
        "lemma_Parsers.PskBinderEntry.pskBinderEntry_bytesize_eqn",
        "lemma_Parsers.PskIdentity.pskIdentity_bytesize_eqn",
        "lemma_Parsers.PskIdentity_identity.pskIdentity_identity_bytesize_eqn",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_GreaterThan", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_Parsers.PskIdentity.MkpskIdentity_identity",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_54d8e4368ef4be5e2ddd5dfe39051b03",
        "refinement_interpretation_Tm_refine_609152d84d8b640876aaac6ef0ab5cb7",
        "refinement_interpretation_Tm_refine_6e561d1041b56bc0a0ee48b31fc5cb08",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_8c0714c5508deecd4c7dd8b2b9d054de",
        "refinement_interpretation_Tm_refine_9a5867ee735299a7d440e4d6898018d1",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_c35bd73f0e2d8ededcd2d562b5188374",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_cf739cf213ea592ef1bb7b2fb67a3e6d",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_df4a8e20c9d3297618abf0570f5cda66",
        "refinement_interpretation_Tm_refine_e70272bbea6f6c7d05ad2f356644d43f",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f9a8c1a9e3d42ac5940ad08b937d07de",
        "refinement_interpretation_Tm_refine_fc974d4ed51b580f6a58ce1c3c1564a5",
        "refinement_kinding_Tm_refine_54d8e4368ef4be5e2ddd5dfe39051b03",
        "refinement_kinding_Tm_refine_609152d84d8b640876aaac6ef0ab5cb7",
        "refinement_kinding_Tm_refine_8c0714c5508deecd4c7dd8b2b9d054de",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.empty",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt.max_int",
        "typing_FStar.UInt32.add", "typing_FStar.UInt32.uint_to_t",
        "typing_FStar.UInt32.v", "typing_LowParse.Spec.Base.serialize",
        "typing_LowParse.Spec.Base.total_constant_size_parser_kind",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.serialize_bounded_integer",
        "typing_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_parser",
        "typing_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_parser_kind",
        "typing_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_serializer",
        "typing_Parsers.OfferedPsks.__proj__MkofferedPsks__item__identities",
        "typing_Parsers.OfferedPsks.offeredPsks_bytesize",
        "typing_Parsers.OfferedPsks.offeredPsks_parser",
        "typing_Parsers.OfferedPsks.offeredPsks_parser_kind",
        "typing_Parsers.OfferedPsks.offeredPsks_serializer",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_list_bytesize",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_serializer",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_list_bytesize",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_parser",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_parser_kind",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_serializer",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_size32",
        "typing_Parsers.PskIdentity.__proj__MkpskIdentity__item__identity",
        "typing_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_binders_offset",
        "typing_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_set_binders",
        "typing_ParsersAux.Binders.offeredPsks_binders_offset",
        "typing_ParsersAux.Binders.offeredPsks_set_binders",
        "typing_ParsersAux.Binders.truncate_clientHelloExtension_CHE_pre_shared_key",
        "typing_ParsersAux.Binders.truncate_offeredPsks"
      ],
      0,
      "b4532668e7960034bd6fad1bec98a7bb"
    ],
    [
      "ParsersAux.Binders.truncate_clientHelloExtension_CHE_pre_shared_key_eq_left",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_b04d122514f99a72ff9ce3f85f1f08f9",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None", "eq2-interp",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.SLow.Base.size32",
        "equation_LowParse.SLow.Base.size32_postcond",
        "equation_LowParse.SLow.Base.u32_max",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key",
        "equation_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_parser_kind",
        "equation_Parsers.OfferedPsks.offeredPsks_parser_kind",
        "equation_Parsers.OfferedPsks_identities.offeredPsks_identities",
        "equation_Parsers.OfferedPsks_identities.offeredPsks_identities_parser_kind",
        "equation_Parsers.PreSharedKeyClientExtension.preSharedKeyClientExtension",
        "equation_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_binders_offset",
        "equation_ParsersAux.Binders.offeredPsks_binders_offset",
        "equation_ParsersAux.Binders.truncate_clientHelloExtension_CHE_pre_shared_key",
        "equation_ParsersAux.Binders.truncate_offeredPsks",
        "equation_Prims.nat",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Parsers.OfferedPsks.offeredPsks",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "kinding_Parsers.OfferedPsks.offeredPsks@tok",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_Parsers.PreSharedKeyClientExtension.preSharedKeyClientExtension_bytesize_eqn",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_54d8e4368ef4be5e2ddd5dfe39051b03",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_88e21d36d9e713615fce456e18b30e39",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_df4a8e20c9d3297618abf0570f5cda66",
        "refinement_interpretation_Tm_refine_e70272bbea6f6c7d05ad2f356644d43f",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f9a8c1a9e3d42ac5940ad08b937d07de",
        "refinement_kinding_Tm_refine_54d8e4368ef4be5e2ddd5dfe39051b03",
        "refinement_kinding_Tm_refine_8c0714c5508deecd4c7dd8b2b9d054de",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.empty",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.add", "typing_FStar.UInt32.uint_to_t",
        "typing_FStar.UInt32.v", "typing_LowParse.SLow.Base.u32_max",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowParse.Spec.BoundedInt.bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "typing_LowParse.Spec.BoundedInt.serialize_bounded_integer",
        "typing_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_parser",
        "typing_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_parser_kind",
        "typing_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_serializer",
        "typing_Parsers.OfferedPsks.__proj__MkofferedPsks__item__identities",
        "typing_Parsers.OfferedPsks.offeredPsks_parser",
        "typing_Parsers.OfferedPsks.offeredPsks_parser_kind",
        "typing_Parsers.OfferedPsks.offeredPsks_serializer",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_parser",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_parser_kind",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_serializer",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_size32",
        "typing_Parsers.PreSharedKeyClientExtension.preSharedKeyClientExtension_bytesize",
        "typing_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_binders_offset",
        "typing_ParsersAux.Binders.offeredPsks_binders_offset",
        "typing_ParsersAux.Binders.truncate_clientHelloExtension_CHE_pre_shared_key",
        "typing_ParsersAux.Binders.truncate_offeredPsks"
      ],
      0,
      "688a3df08ca758b52e687605b3a102bc"
    ],
    [
      "ParsersAux.Binders.truncate_clientHelloExtension_CHE_pre_shared_key_inj_binders_bytesize",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_b04d122514f99a72ff9ce3f85f1f08f9",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some", "eq2-interp",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.SLow.Base.size32",
        "equation_LowParse.SLow.Base.size32_postcond",
        "equation_LowParse.SLow.Base.u32_max",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key",
        "equation_Parsers.OfferedPsks.offeredPsks_parser_kind",
        "equation_Parsers.OfferedPsks_identities.offeredPsks_identities",
        "equation_Parsers.OfferedPsks_identities.offeredPsks_identities_parser_kind",
        "equation_Parsers.PreSharedKeyClientExtension.preSharedKeyClientExtension",
        "equation_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_binders_offset",
        "equation_ParsersAux.Binders.offeredPsks_binders_offset",
        "equation_ParsersAux.Binders.truncate_offeredPsks",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Parsers.OfferedPsks.offeredPsks",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "kinding_Parsers.OfferedPsks.offeredPsks@tok",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.uv_inv",
        "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_Parsers.OfferedPsks.offeredPsks_bytesize_eqn",
        "lemma_Parsers.OfferedPsks_binders.offeredPsks_binders_bytesize_eqn",
        "lemma_Parsers.OfferedPsks_identities.offeredPsks_identities_bytesize_eqn",
        "lemma_Parsers.PreSharedKeyClientExtension.preSharedKeyClientExtension_bytesize_eqn",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_GreaterThan", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_Parsers.OfferedPsks.MkofferedPsks_binders",
        "proj_equation_Parsers.OfferedPsks.MkofferedPsks_identities",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_54d8e4368ef4be5e2ddd5dfe39051b03",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_88e21d36d9e713615fce456e18b30e39",
        "refinement_interpretation_Tm_refine_8c0714c5508deecd4c7dd8b2b9d054de",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_df4a8e20c9d3297618abf0570f5cda66",
        "refinement_interpretation_Tm_refine_e70272bbea6f6c7d05ad2f356644d43f",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f9a8c1a9e3d42ac5940ad08b937d07de",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.empty",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt32.add",
        "typing_FStar.UInt32.uint_to_t", "typing_FStar.UInt32.v",
        "typing_LowParse.SLow.Base.u32_max",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowParse.Spec.Base.total_constant_size_parser_kind",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.serialize_bounded_integer",
        "typing_Parsers.OfferedPsks.__proj__MkofferedPsks__item__binders",
        "typing_Parsers.OfferedPsks.__proj__MkofferedPsks__item__identities",
        "typing_Parsers.OfferedPsks.offeredPsks_bytesize",
        "typing_Parsers.OfferedPsks.offeredPsks_parser",
        "typing_Parsers.OfferedPsks.offeredPsks_parser_kind",
        "typing_Parsers.OfferedPsks.offeredPsks_serializer",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_bytesize",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_bytesize",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_size32",
        "typing_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_binders_offset",
        "typing_ParsersAux.Binders.offeredPsks_binders_offset",
        "typing_ParsersAux.Binders.truncate_clientHelloExtension_CHE_pre_shared_key",
        "typing_ParsersAux.Binders.truncate_offeredPsks"
      ],
      0,
      "183522ac3a77af806dbc695fa941d5c0"
    ],
    [
      "ParsersAux.Binders.clientHelloExtension_binders_offset",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "Parsers.ExtensionType_pretyping_a84b38175a6efb05387a5a03d38c305f",
        "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "data_typing_intro_Parsers.ExtensionType.Max_fragment_length@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equality_tok_Parsers.ExtensionType.Pre_shared_key@tok",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ClientHelloExtension.clientHelloExtension_parser_kind",
        "equation_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key",
        "equation_Parsers.ExtensionType.extensionType_parser_kind",
        "equation_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_binders_offset",
        "equation_Prims.nat",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_FStar.UInt8.t", "int_typing",
        "kinding_Parsers.ClientHelloExtension.clientHelloExtension@tok",
        "kinding_Parsers.ExtensionType.extensionType@tok",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.UInt.pow2_values",
        "lemma_LowParse.Spec.Base.serialize_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key__0",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_9b99ecb20ca0ba32a748593b31d3daf3",
        "refinement_interpretation_Tm_refine_df4a8e20c9d3297618abf0570f5cda66",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_54d8e4368ef4be5e2ddd5dfe39051b03",
        "typing_FStar.UInt32.v", "typing_LowParse.Spec.Base.serialize",
        "typing_Parsers.ClientHelloExtension.__proj__CHE_pre_shared_key__item___0",
        "typing_Parsers.ClientHelloExtension.clientHelloExtension_parser",
        "typing_Parsers.ClientHelloExtension.clientHelloExtension_parser_kind",
        "typing_Parsers.ClientHelloExtension.clientHelloExtension_serializer",
        "typing_Parsers.ClientHelloExtension.uu___is_CHE_pre_shared_key",
        "typing_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_parser",
        "typing_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_parser_kind",
        "typing_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_serializer",
        "typing_Parsers.ExtensionType.extensionType_parser",
        "typing_Parsers.ExtensionType.extensionType_parser_kind",
        "typing_Parsers.ExtensionType.extensionType_serializer",
        "typing_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_binders_offset",
        "typing_tok_Parsers.ExtensionType.Pre_shared_key@tok"
      ],
      0,
      "0305eea948a5e95cd5704adca766b674"
    ],
    [
      "ParsersAux.Binders.clientHelloExtension_binders_pos",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "Parsers.ExtensionType_pretyping_a84b38175a6efb05387a5a03d38c305f",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_LowParse.Spec.Base.Mkparser_kind_",
        "data_typing_intro_Parsers.ExtensionType.Max_fragment_length@tok",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "equality_tok_Parsers.ExtensionType.Pre_shared_key@tok",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Low.Base.seq_starts_with",
        "equation_LowParse.Slice.buffer_srel_of_srel",
        "equation_LowParse.Slice.bytes_of_slice_from",
        "equation_LowParse.Slice.live_slice", "equation_LowParse.Slice.srel",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key",
        "equation_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_parser_kind",
        "equation_Parsers.ExtensionType.extensionType_parser_kind",
        "equation_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_binders_offset",
        "equation_ParsersAux.Binders.clientHelloExtension_binders_offset",
        "equation_Prims.nat", "fuel_guarded_inversion_LowParse.Slice.slice",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "kinding_Parsers.ExtensionType.extensionType@tok",
        "lemma_FStar.Ghost.reveal_hide",
        "lemma_FStar.HyperStack.ST.lemma_equal_domains_trans",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_slice",
        "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Low.Base.seq_starts_with_append_r_elim",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_LowStar.Monotonic.Buffer.lemma_live_equal_mem_domains",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_LowStar.Monotonic.Buffer.length_null_1",
        "lemma_LowStar.Monotonic.Buffer.length_null_2",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_none_r",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_none",
        "lemma_LowStar.Monotonic.Buffer.modifies_buffer_elim",
        "lemma_LowStar.Monotonic.Buffer.modifies_trans_linear",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Slice.Mkslice_base",
        "proj_equation_LowParse.Slice.Mkslice_len",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key__0",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_0b50f66f6e0059a1140c880b919998df",
        "refinement_interpretation_Tm_refine_102a248276d65e3730c8b67b7fb227a8",
        "refinement_interpretation_Tm_refine_1ba8fd8bb363097813064c67740b2de5",
        "refinement_interpretation_Tm_refine_2464013c10a99ccfd7a772d627c25271",
        "refinement_interpretation_Tm_refine_3ae7934f7bb0b211572daa2c0f2cb446",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5c18896ca638efd221fa1950ec1791ce",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_df4a8e20c9d3297618abf0570f5cda66",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_54d8e4368ef4be5e2ddd5dfe39051b03",
        "typing_FStar.Seq.Base.empty", "typing_FStar.Seq.Base.length",
        "typing_FStar.UInt.fits", "typing_FStar.UInt32.add",
        "typing_FStar.UInt32.uint_to_t", "typing_FStar.UInt32.v",
        "typing_LowParse.Slice.__proj__Mkslice__item__base",
        "typing_LowParse.Slice.__proj__Mkslice__item__len",
        "typing_LowParse.Slice.bytes_of_slice_from",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_LowStar.Monotonic.Buffer.loc_buffer",
        "typing_LowStar.Monotonic.Buffer.loc_none",
        "typing_Parsers.ClientHelloExtension.__proj__CHE_pre_shared_key__item___0",
        "typing_Parsers.ClientHelloExtension.uu___is_CHE_pre_shared_key",
        "typing_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_parser",
        "typing_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_parser_kind",
        "typing_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_serializer",
        "typing_Parsers.ExtensionType.extensionType_parser",
        "typing_Parsers.ExtensionType.extensionType_parser_kind",
        "typing_Parsers.ExtensionType.extensionType_serializer",
        "typing_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_binders_offset",
        "typing_tok_Parsers.ExtensionType.Pre_shared_key@tok"
      ],
      0,
      "603e95815081da4832584f264780b657"
    ],
    [
      "ParsersAux.Binders.truncate_clientHelloExtension",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size",
        "equation_ParsersAux.Binders.clientHelloExtension_binders_offset",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_9aec30794701adba6a1e1db8182b9fcf",
        "typing_ParsersAux.Binders.clientHelloExtension_binders_offset"
      ],
      0,
      "9aabeb71664d8f26342262e79042086c"
    ],
    [
      "ParsersAux.Binders.clientHelloExtension_set_binders",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "constructor_distinct_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "equation_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_set_binders",
        "equation_ParsersAux.Binders.offeredPsks_set_binders",
        "lemma_Parsers.ClientHelloExtension.clientHelloExtension_bytesize_eqn_pre_shared_key",
        "proj_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key__0",
        "proj_equation_Parsers.OfferedPsks.MkofferedPsks_binders",
        "proj_equation_Parsers.OfferedPsks.MkofferedPsks_identities",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Parsers.ClientHelloExtension.CHE_pre_shared_key__0",
        "projection_inverse_Parsers.OfferedPsks.MkofferedPsks_binders",
        "projection_inverse_Parsers.OfferedPsks.MkofferedPsks_identities",
        "refinement_interpretation_Tm_refine_9b99ecb20ca0ba32a748593b31d3daf3",
        "refinement_interpretation_Tm_refine_a8358fa57b1b8852342ed68539b48eae",
        "refinement_interpretation_Tm_refine_cf739cf213ea592ef1bb7b2fb67a3e6d",
        "refinement_interpretation_Tm_refine_fc974d4ed51b580f6a58ce1c3c1564a5",
        "typing_Parsers.ClientHelloExtension.__proj__CHE_pre_shared_key__item___0",
        "typing_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_set_binders"
      ],
      0,
      "14fc0540571c609ac550cf670543238a"
    ],
    [
      "ParsersAux.Binders.binders_offset_clientHelloExtension_set_binders",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_b04d122514f99a72ff9ce3f85f1f08f9",
        "Parsers.ExtensionType_pretyping_a84b38175a6efb05387a5a03d38c305f",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "data_elim_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "data_elim_Prims.Cons",
        "data_typing_intro_Parsers.ExtensionType.Max_fragment_length@tok",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "eq2-interp",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equality_tok_Parsers.ExtensionType.Pre_shared_key@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.SLow.Base.size32",
        "equation_LowParse.SLow.Base.size32_postcond",
        "equation_LowParse.SLow.Base.u32_max",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key",
        "equation_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_parser_kind",
        "equation_Parsers.ExtensionType.extensionType_parser_kind",
        "equation_Parsers.OfferedPsks.offeredPsks_parser_kind",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders",
        "equation_Parsers.OfferedPsks_identities.offeredPsks_identities",
        "equation_Parsers.OfferedPsks_identities.offeredPsks_identities_parser_kind",
        "equation_Parsers.PreSharedKeyClientExtension.preSharedKeyClientExtension",
        "equation_Parsers.PskBinderEntry.pskBinderEntry",
        "equation_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_binders_offset",
        "equation_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_set_binders",
        "equation_ParsersAux.Binders.clientHelloExtension_binders_offset",
        "equation_ParsersAux.Binders.clientHelloExtension_set_binders",
        "equation_ParsersAux.Binders.offeredPsks_binders_offset",
        "equation_ParsersAux.Binders.truncate_clientHelloExtension",
        "equation_ParsersAux.Binders.truncate_clientHelloExtension_CHE_pre_shared_key",
        "equation_Prims.eq2", "equation_Prims.nat", "equation_Prims.squash",
        "fuel_guarded_inversion_Prims.list",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_Parsers.OfferedPsks_binders.offeredPsks_binders_list_bytesize_nil",
        "int_inversion", "int_typing",
        "kinding_Parsers.ClientHelloExtension.clientHelloExtension@tok",
        "kinding_Parsers.ExtensionType.extensionType@tok",
        "kinding_Parsers.OfferedPsks.offeredPsks@tok",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Spec.Base.serialize_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key__0",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_Parsers.ClientHelloExtension.CHE_pre_shared_key__0",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_1cb50ff434e64c5f099ba1dae58069f4",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_54d8e4368ef4be5e2ddd5dfe39051b03",
        "refinement_interpretation_Tm_refine_609152d84d8b640876aaac6ef0ab5cb7",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_9a5867ee735299a7d440e4d6898018d1",
        "refinement_interpretation_Tm_refine_9aec30794701adba6a1e1db8182b9fcf",
        "refinement_interpretation_Tm_refine_9b99ecb20ca0ba32a748593b31d3daf3",
        "refinement_interpretation_Tm_refine_a8358fa57b1b8852342ed68539b48eae",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_df4a8e20c9d3297618abf0570f5cda66",
        "refinement_interpretation_Tm_refine_e70272bbea6f6c7d05ad2f356644d43f",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f9a8c1a9e3d42ac5940ad08b937d07de",
        "refinement_kinding_Tm_refine_54d8e4368ef4be5e2ddd5dfe39051b03",
        "refinement_kinding_Tm_refine_609152d84d8b640876aaac6ef0ab5cb7",
        "refinement_kinding_Tm_refine_8c0714c5508deecd4c7dd8b2b9d054de",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.empty",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.add", "typing_FStar.UInt32.uint_to_t",
        "typing_FStar.UInt32.v", "typing_LowParse.Spec.Base.serialize",
        "typing_Parsers.ClientHelloExtension.__proj__CHE_pre_shared_key__item___0",
        "typing_Parsers.ClientHelloExtension.clientHelloExtension_parser",
        "typing_Parsers.ClientHelloExtension.clientHelloExtension_parser_kind",
        "typing_Parsers.ClientHelloExtension.clientHelloExtension_serializer",
        "typing_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_parser",
        "typing_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_parser_kind",
        "typing_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_serializer",
        "typing_Parsers.ExtensionType.extensionType_parser",
        "typing_Parsers.ExtensionType.extensionType_parser_kind",
        "typing_Parsers.ExtensionType.extensionType_serializer",
        "typing_Parsers.OfferedPsks.__proj__MkofferedPsks__item__identities",
        "typing_Parsers.OfferedPsks.offeredPsks_parser",
        "typing_Parsers.OfferedPsks.offeredPsks_parser_kind",
        "typing_Parsers.OfferedPsks.offeredPsks_serializer",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_serializer",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_parser",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_parser_kind",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_serializer",
        "typing_Parsers.OfferedPsks_identities.offeredPsks_identities_size32",
        "typing_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_binders_offset",
        "typing_ParsersAux.Binders.clientHelloExtension_binders_offset",
        "typing_ParsersAux.Binders.offeredPsks_binders_offset",
        "typing_ParsersAux.Binders.truncate_clientHelloExtension",
        "typing_ParsersAux.Binders.truncate_clientHelloExtension_CHE_pre_shared_key",
        "typing_tok_Parsers.ExtensionType.Pre_shared_key@tok"
      ],
      0,
      "6a94c42c9c84a563c929a8dc722a5f54"
    ],
    [
      "ParsersAux.Binders.truncate_clientHelloExtension_eq_left",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "Parsers.ExtensionType_pretyping_a84b38175a6efb05387a5a03d38c305f",
        "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_LowParse.Spec.Base.Mkparser_kind_",
        "data_typing_intro_Parsers.ExtensionType.Max_fragment_length@tok",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equality_tok_Parsers.ExtensionType.Pre_shared_key@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key",
        "equation_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_parser_kind",
        "equation_Parsers.ExtensionType.extensionType_parser_kind",
        "equation_Parsers.OfferedPsks.offeredPsks_parser_kind",
        "equation_Parsers.PreSharedKeyClientExtension.preSharedKeyClientExtension",
        "equation_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_binders_offset",
        "equation_ParsersAux.Binders.clientHelloExtension_binders_offset",
        "equation_ParsersAux.Binders.offeredPsks_binders_offset",
        "equation_ParsersAux.Binders.truncate_clientHelloExtension",
        "equation_ParsersAux.Binders.truncate_clientHelloExtension_CHE_pre_shared_key",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "kinding_Parsers.ClientHelloExtension.clientHelloExtension@tok",
        "kinding_Parsers.ExtensionType.extensionType@tok",
        "kinding_Parsers.OfferedPsks.offeredPsks@tok",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Spec.Base.serialize_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key__0",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_54d8e4368ef4be5e2ddd5dfe39051b03",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_9aec30794701adba6a1e1db8182b9fcf",
        "refinement_interpretation_Tm_refine_9b99ecb20ca0ba32a748593b31d3daf3",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_df4a8e20c9d3297618abf0570f5cda66",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f9a8c1a9e3d42ac5940ad08b937d07de",
        "refinement_kinding_Tm_refine_54d8e4368ef4be5e2ddd5dfe39051b03",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.empty",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt32.add",
        "typing_FStar.UInt32.uint_to_t", "typing_FStar.UInt32.v",
        "typing_LowParse.Spec.Base.serialize",
        "typing_Parsers.ClientHelloExtension.__proj__CHE_pre_shared_key__item___0",
        "typing_Parsers.ClientHelloExtension.clientHelloExtension_parser",
        "typing_Parsers.ClientHelloExtension.clientHelloExtension_parser_kind",
        "typing_Parsers.ClientHelloExtension.clientHelloExtension_serializer",
        "typing_Parsers.ClientHelloExtension.uu___is_CHE_pre_shared_key",
        "typing_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_parser",
        "typing_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_parser_kind",
        "typing_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key_serializer",
        "typing_Parsers.ExtensionType.extensionType_parser",
        "typing_Parsers.ExtensionType.extensionType_parser_kind",
        "typing_Parsers.ExtensionType.extensionType_serializer",
        "typing_Parsers.OfferedPsks.offeredPsks_parser",
        "typing_Parsers.OfferedPsks.offeredPsks_parser_kind",
        "typing_Parsers.OfferedPsks.offeredPsks_serializer",
        "typing_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_binders_offset",
        "typing_ParsersAux.Binders.clientHelloExtension_binders_offset",
        "typing_ParsersAux.Binders.offeredPsks_binders_offset",
        "typing_ParsersAux.Binders.truncate_clientHelloExtension",
        "typing_ParsersAux.Binders.truncate_clientHelloExtension_CHE_pre_shared_key",
        "typing_tok_Parsers.ExtensionType.Pre_shared_key@tok"
      ],
      0,
      "67def5bd0195bbd286c25406de4783a9"
    ],
    [
      "ParsersAux.Binders.truncate_clientHelloExtension_inj_binders_bytesize",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "equality_tok_Parsers.ExtensionType.Pre_shared_key@tok",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ExtensionType.extensionType_parser_kind",
        "function_token_typing_FStar.UInt8.t",
        "kinding_Parsers.ExtensionType.extensionType@tok",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key__0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_Parsers.ClientHelloExtension.CHE_pre_shared_key__0",
        "refinement_interpretation_Tm_refine_9b99ecb20ca0ba32a748593b31d3daf3",
        "typing_FStar.Seq.Base.append",
        "typing_LowParse.Spec.Base.serialize",
        "typing_Parsers.ClientHelloExtension.__proj__CHE_pre_shared_key__item___0",
        "typing_Parsers.ClientHelloExtension.uu___is_CHE_pre_shared_key",
        "typing_Parsers.ExtensionType.extensionType_parser",
        "typing_Parsers.ExtensionType.extensionType_parser_kind",
        "typing_Parsers.ExtensionType.extensionType_serializer",
        "typing_ParsersAux.Binders.truncate_clientHelloExtension",
        "typing_ParsersAux.Binders.truncate_clientHelloExtension_CHE_pre_shared_key",
        "typing_tok_Parsers.ExtensionType.Pre_shared_key@tok"
      ],
      0,
      "5ceec9ecebe77ae2490ae97b8e5d4282"
    ],
    [
      "ParsersAux.Binders.parse_truncate_clientHelloExtension",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ClientHelloExtension.clientHelloExtension_parser_kind",
        "equation_ParsersAux.Binders.clientHelloExtension_binders_offset",
        "equation_ParsersAux.Binders.truncate_clientHelloExtension",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_9aec30794701adba6a1e1db8182b9fcf",
        "refinement_interpretation_Tm_refine_9b99ecb20ca0ba32a748593b31d3daf3",
        "typing_ParsersAux.Binders.clientHelloExtension_binders_offset"
      ],
      0,
      "d27877add23c48592d6f9bbefbb9ba29"
    ],
    [
      "ParsersAux.Binders.clientHelloExtensions_list_bytesize_append",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.append.fuel_instrumented",
        "@fuel_irrelevance_FStar.List.Tot.Base.append.fuel_instrumented",
        "@query", "binder_x_e372698552045c14a2c3c07200f7b593_0",
        "binder_x_e372698552045c14a2c3c07200f7b593_1",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Prims.Nil",
        "disc_equation_Prims.Cons", "disc_equation_Prims.Nil", "eq2-interp",
        "equation_Prims.eq2", "equation_Prims.nat", "equation_Prims.squash",
        "equation_with_fuel_FStar.List.Tot.Base.append.fuel_instrumented",
        "fuel_guarded_inversion_Prims.list",
        "function_token_typing_Parsers.ClientHelloExtensions.clientHelloExtensions_list_bytesize_nil",
        "int_inversion",
        "kinding_Parsers.ClientHelloExtension.clientHelloExtension@tok",
        "lemma_Parsers.ClientHelloExtensions.clientHelloExtensions_list_bytesize_cons",
        "primitive_Prims.op_Addition", "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl", "projection_inverse_Prims.Nil_a",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "subterm_ordering_Prims.Cons",
        "token_correspondence_FStar.List.Tot.Base.append.fuel_instrumented",
        "typing_FStar.List.Tot.Base.append",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_list_bytesize"
      ],
      0,
      "230b116cd4bb08f601979ac56f777066"
    ],
    [
      "ParsersAux.Binders.list_clientHelloExtension_binders_offset",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.last.fuel_instrumented",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "disc_equation_Prims.Cons",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ClientHelloExtension.clientHelloExtension_parser_kind",
        "equation_Prims.nat",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_FStar.UInt8.t", "int_typing",
        "kinding_Parsers.ClientHelloExtension.clientHelloExtension@tok",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.UInt.pow2_values",
        "lemma_LowParse.Spec.Base.serialize_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_1a4238f7f8b9f93340d28ea4de1aff61",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32",
        "refinement_interpretation_Tm_refine_b3b8f676362bccbee257ed490af07787",
        "refinement_interpretation_Tm_refine_b8df352b26bd285bd3bf8fb808dbffc3",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.List.Tot.Base.last", "typing_FStar.Seq.Base.length",
        "typing_FStar.UInt32.v", "typing_LowParse.Spec.Base.serialize",
        "typing_Parsers.ClientHelloExtension.clientHelloExtension_parser",
        "typing_Parsers.ClientHelloExtension.clientHelloExtension_parser_kind",
        "typing_Parsers.ClientHelloExtension.clientHelloExtension_serializer",
        "typing_ParsersAux.Binders.Aux.serialize_list_clientHelloExtension",
        "typing_Prims.uu___is_Cons"
      ],
      0,
      "a3d052fa224ffb2e9f5f05a4622ba82b"
    ],
    [
      "ParsersAux.Binders.list_clientHelloExtension_binders_pos",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "05383d7aa2cd7a280095b9cfcd7855f0"
    ],
    [
      "ParsersAux.Binders.list_clientHelloExtension_binders_pos",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.init.fuel_instrumented",
        "@fuel_correspondence_FStar.List.Tot.Base.last.fuel_instrumented",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "data_elim_LowParse.Slice.Mkslice",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Prims.Cons", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Low.Base.bytes_of_slice_from_to",
        "equation_LowParse.Low.Base.seq_starts_with",
        "equation_LowParse.Slice.buffer_srel_of_srel",
        "equation_LowParse.Slice.bytes_of_slice_from",
        "equation_LowParse.Slice.live_slice", "equation_LowParse.Slice.srel",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowStar.Monotonic.Buffer.length",
        "equation_Parsers.ClientHelloExtension.clientHelloExtension_parser_kind",
        "equation_ParsersAux.Binders.clientHelloExtension_binders_offset",
        "equation_ParsersAux.Binders.list_clientHelloExtension_binders_offset",
        "equation_Prims.nat",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_LowParse.Slice.slice",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "kinding_Parsers.ClientHelloExtension.clientHelloExtension@tok",
        "kinding_Prims.list@tok", "lemma_FStar.Ghost.reveal_hide",
        "lemma_FStar.HyperStack.ST.lemma_equal_domains_trans",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_slice",
        "lemma_FStar.UInt.pow2_values",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_none_r",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_none",
        "lemma_LowStar.Monotonic.Buffer.modifies_buffer_elim",
        "lemma_LowStar.Monotonic.Buffer.modifies_liveness_insensitive_buffer_weak",
        "lemma_LowStar.Monotonic.Buffer.modifies_trans_linear",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Slice.Mkslice_base",
        "proj_equation_LowParse.Slice.Mkslice_len",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_1ba8fd8bb363097813064c67740b2de5",
        "refinement_interpretation_Tm_refine_2d52057757628970a632f272fa61b8ad",
        "refinement_interpretation_Tm_refine_322f9f85c27323ee5f57b288fa61f42b",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_3ae7934f7bb0b211572daa2c0f2cb446",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_6008219b70d7db7011dfce5daaf1ce5a",
        "refinement_interpretation_Tm_refine_734cceed3d47f0e5b8650d4760489e66",
        "refinement_interpretation_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32",
        "refinement_interpretation_Tm_refine_813e20ff27a8ba012891f832cb4d3ab4",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_9aec30794701adba6a1e1db8182b9fcf",
        "refinement_interpretation_Tm_refine_9b99ecb20ca0ba32a748593b31d3daf3",
        "refinement_interpretation_Tm_refine_a28dbc230c62eb15fe604ffee68c895f",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_e4ec945900ca1e5044dc6b166995042d",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f18e8b7ca38270e3a3c9d16412729d14",
        "refinement_interpretation_Tm_refine_fe73bdb8b9cb8fc03d6c2d252618ec90",
        "typing_FStar.Ghost.reveal", "typing_FStar.List.Tot.Base.init",
        "typing_FStar.List.Tot.Base.last", "typing_FStar.Seq.Base.empty",
        "typing_FStar.Seq.Base.length", "typing_FStar.Seq.Base.slice",
        "typing_FStar.UInt32.add", "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.bytes_of_slice_from_to",
        "typing_LowParse.Slice.__proj__Mkslice__item__base",
        "typing_LowParse.Slice.__proj__Mkslice__item__len",
        "typing_LowParse.Slice.bytes_of_slice_from",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowStar.Monotonic.Buffer.address_liveness_insensitive_locs",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_LowStar.Monotonic.Buffer.len",
        "typing_LowStar.Monotonic.Buffer.loc_buffer",
        "typing_LowStar.Monotonic.Buffer.loc_none",
        "typing_Parsers.ClientHelloExtension.clientHelloExtension_parser",
        "typing_Parsers.ClientHelloExtension.clientHelloExtension_parser_kind",
        "typing_Parsers.ClientHelloExtension.clientHelloExtension_serializer",
        "typing_ParsersAux.Binders.Aux.serialize_list_clientHelloExtension",
        "typing_ParsersAux.Binders.Aux.size32_list_clientHelloExtension",
        "typing_ParsersAux.Binders.clientHelloExtension_binders_offset"
      ],
      0,
      "6396372ed51fef642fa83716695ae061"
    ],
    [
      "ParsersAux.Binders.truncate_list_clientHelloExtension",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size",
        "equation_ParsersAux.Binders.list_clientHelloExtension_binders_offset",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_fdc76b50d77c404c00b934f4d9c2043a",
        "typing_ParsersAux.Binders.list_clientHelloExtension_binders_offset"
      ],
      0,
      "a06ab59ee4fad914d9c0c877b5878436"
    ],
    [
      "ParsersAux.Binders.list_clientHelloExtension_set_binders",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "refinement_interpretation_Tm_refine_cb3a60583814f1dc4fa862a3c587ef01"
      ],
      0,
      "e3bef7dc2b5e11e1a4e51a414ec62a83"
    ],
    [
      "ParsersAux.Binders.list_clientHelloExtension_set_binders",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.append.fuel_instrumented",
        "@fuel_correspondence_FStar.List.Tot.Base.last.fuel_instrumented",
        "@query",
        "assumption_Parsers.ClientHelloExtension.clientHelloExtension__uu___haseq",
        "assumption_Prims.list__uu___haseq",
        "constructor_distinct_Prims.Cons",
        "data_typing_intro_Prims.Cons@tok",
        "data_typing_intro_Prims.Nil@tok", "disc_equation_Prims.Cons",
        "equation_with_fuel_FStar.List.Tot.Base.append.fuel_instrumented",
        "fuel_guarded_inversion_Prims.list",
        "kinding_Parsers.ClientHelloExtension.clientHelloExtension@tok",
        "lemma_Parsers.ClientHelloExtensions.clientHelloExtensions_list_bytesize_cons",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl",
        "refinement_interpretation_Tm_refine_cb3a60583814f1dc4fa862a3c587ef01",
        "refinement_interpretation_Tm_refine_fb5edf9bbfbec99efc2fc634126d9abf"
      ],
      0,
      "0f191a8100a6c5b3cdd354ea3da9c73a"
    ],
    [
      "ParsersAux.Binders.binders_offset_list_clientHelloExtension_set_binders",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "refinement_interpretation_Tm_refine_b3b8f676362bccbee257ed490af07787"
      ],
      0,
      "a3c8b427db60050254df9205fbcf3a1c"
    ],
    [
      "ParsersAux.Binders.binders_offset_list_clientHelloExtension_set_binders",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.init.fuel_instrumented",
        "@fuel_correspondence_FStar.List.Tot.Base.last.fuel_instrumented",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "assumption_Parsers.ClientHelloExtension.clientHelloExtension__uu___haseq",
        "assumption_Prims.list__uu___haseq", "b2t_def",
        "data_elim_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Prims.Cons", "equation_FStar.Bytes.lbytes",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ClientHelloExtension.clientHelloExtension_parser_kind",
        "equation_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders",
        "equation_Parsers.PreSharedKeyClientExtension.preSharedKeyClientExtension",
        "equation_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_set_binders",
        "equation_ParsersAux.Binders.clientHelloExtension_set_binders",
        "equation_ParsersAux.Binders.list_clientHelloExtension_binders_offset",
        "equation_ParsersAux.Binders.offeredPsks_set_binders",
        "equation_ParsersAux.Binders.truncate_clientHelloExtension",
        "equation_ParsersAux.Binders.truncate_list_clientHelloExtension",
        "equation_Prims.nat",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Parsers.OfferedPsks.offeredPsks",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "kinding_Parsers.ClientHelloExtension.clientHelloExtension@tok",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values",
        "lemma_LowParse.Spec.Base.serialize_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key__0",
        "proj_equation_Parsers.OfferedPsks.MkofferedPsks_binders",
        "proj_equation_Parsers.OfferedPsks.MkofferedPsks_identities",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_248f811afad0c7bfde32a28b5295e425",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_54d8e4368ef4be5e2ddd5dfe39051b03",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32",
        "refinement_interpretation_Tm_refine_7cd37621a5dcc502ad4d57a6c13c3520",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_9aec30794701adba6a1e1db8182b9fcf",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_b3b8f676362bccbee257ed490af07787",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_e4ec945900ca1e5044dc6b166995042d",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f18e8b7ca38270e3a3c9d16412729d14",
        "refinement_interpretation_Tm_refine_fdc76b50d77c404c00b934f4d9c2043a",
        "refinement_kinding_Tm_refine_609152d84d8b640876aaac6ef0ab5cb7",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.List.Tot.Base.init", "typing_FStar.List.Tot.Base.last",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.empty",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt32.add",
        "typing_FStar.UInt32.v", "typing_LowParse.Spec.Base.serialize",
        "typing_Parsers.ClientHelloExtension.clientHelloExtension_parser",
        "typing_Parsers.ClientHelloExtension.clientHelloExtension_parser_kind",
        "typing_Parsers.ClientHelloExtension.clientHelloExtension_serializer",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_list_bytesize",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_serializer",
        "typing_ParsersAux.Binders.Aux.serialize_list_clientHelloExtension",
        "typing_ParsersAux.Binders.Aux.size32_list_clientHelloExtension",
        "typing_ParsersAux.Binders.clientHelloExtension_binders_offset",
        "typing_ParsersAux.Binders.list_clientHelloExtension_binders_offset",
        "typing_ParsersAux.Binders.truncate_clientHelloExtension",
        "typing_ParsersAux.Binders.truncate_list_clientHelloExtension"
      ],
      0,
      "a7c00144047d1496063fdc9813167735"
    ],
    [
      "ParsersAux.Binders.truncate_list_clientHelloExtension_eq_left",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.init.fuel_instrumented",
        "@fuel_correspondence_FStar.List.Tot.Base.last.fuel_instrumented",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ClientHelloExtension.clientHelloExtension_parser_kind",
        "equation_ParsersAux.Binders.clientHelloExtension_binders_offset",
        "equation_ParsersAux.Binders.list_clientHelloExtension_binders_offset",
        "equation_ParsersAux.Binders.truncate_clientHelloExtension",
        "equation_ParsersAux.Binders.truncate_list_clientHelloExtension",
        "equation_Prims.nat",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "kinding_Parsers.ClientHelloExtension.clientHelloExtension@tok",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values",
        "lemma_LowParse.Spec.Base.serialize_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_9aec30794701adba6a1e1db8182b9fcf",
        "refinement_interpretation_Tm_refine_9b99ecb20ca0ba32a748593b31d3daf3",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_b3b8f676362bccbee257ed490af07787",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_e4ec945900ca1e5044dc6b166995042d",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f18e8b7ca38270e3a3c9d16412729d14",
        "refinement_interpretation_Tm_refine_fdc76b50d77c404c00b934f4d9c2043a",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.List.Tot.Base.init", "typing_FStar.List.Tot.Base.last",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.empty",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt32.add",
        "typing_FStar.UInt32.v", "typing_LowParse.Spec.Base.serialize",
        "typing_Parsers.ClientHelloExtension.clientHelloExtension_parser",
        "typing_Parsers.ClientHelloExtension.clientHelloExtension_parser_kind",
        "typing_Parsers.ClientHelloExtension.clientHelloExtension_serializer",
        "typing_ParsersAux.Binders.Aux.serialize_list_clientHelloExtension",
        "typing_ParsersAux.Binders.Aux.size32_list_clientHelloExtension",
        "typing_ParsersAux.Binders.clientHelloExtension_binders_offset",
        "typing_ParsersAux.Binders.list_clientHelloExtension_binders_offset",
        "typing_ParsersAux.Binders.truncate_clientHelloExtension",
        "typing_ParsersAux.Binders.truncate_list_clientHelloExtension"
      ],
      0,
      "8e98ce01c1b995aaef974df1f5735448"
    ],
    [
      "ParsersAux.Binders.truncate_list_clientHelloExtension_inj_binders_bytesize",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "function_token_typing_FStar.UInt8.t",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "refinement_interpretation_Tm_refine_b3b8f676362bccbee257ed490af07787",
        "typing_FStar.Seq.Base.append",
        "typing_ParsersAux.Binders.Aux.serialize_list_clientHelloExtension",
        "typing_ParsersAux.Binders.truncate_list_clientHelloExtension"
      ],
      0,
      "70d30e7509c6ff469bd0276f8773f621"
    ],
    [
      "ParsersAux.Binders.clientHelloExtensions_binders_offset",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "e8748398ca4135ed07ff75b3eeec20ce"
    ],
    [
      "ParsersAux.Binders.clientHelloExtensions_binders_offset",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions",
        "equation_Prims.nat",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_FStar.UInt8.t", "int_typing",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Spec.Base.serialize_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_d619c861f528df2a95feefef2671011a",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_fdc76b50d77c404c00b934f4d9c2043a",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.UInt32.uint_to_t", "typing_FStar.UInt32.v",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowParse.Spec.Base.total_constant_size_parser_kind",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.serialize_bounded_integer",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_list_bytesize",
        "typing_ParsersAux.Binders.Aux.serialize_list_clientHelloExtension"
      ],
      0,
      "0a5a93089cd67b82173d9f1f9d23a4d5"
    ],
    [
      "ParsersAux.Binders.clientHelloExtensions_binders_pos",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "161358f31c0024e8b798ecfa06f8bec3"
    ],
    [
      "ParsersAux.Binders.clientHelloExtensions_binders_pos",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Prims.Cons", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Low.Base.bytes_of_slice_from_to",
        "equation_LowParse.Low.Base.seq_starts_with",
        "equation_LowParse.Slice.buffer_srel_of_srel",
        "equation_LowParse.Slice.bytes_of_slice_from",
        "equation_LowParse.Slice.live_slice", "equation_LowParse.Slice.srel",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "equation_ParsersAux.Binders.clientHelloExtensions_binders_offset",
        "equation_ParsersAux.Binders.list_clientHelloExtension_binders_offset",
        "equation_Prims.nat", "fuel_guarded_inversion_LowParse.Slice.slice",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "kinding_Parsers.ClientHelloExtension.clientHelloExtension@tok",
        "kinding_Prims.list@tok", "lemma_FStar.Ghost.reveal_hide",
        "lemma_FStar.HyperStack.ST.lemma_equal_domains_trans",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_refl",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Low.Base.seq_starts_with_append_r_elim",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_none_r",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_none",
        "lemma_LowStar.Monotonic.Buffer.modifies_buffer_elim",
        "lemma_LowStar.Monotonic.Buffer.modifies_liveness_insensitive_buffer_weak",
        "lemma_LowStar.Monotonic.Buffer.modifies_trans_linear",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Slice.Mkslice_base",
        "proj_equation_LowParse.Slice.Mkslice_len",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_1ba8fd8bb363097813064c67740b2de5",
        "refinement_interpretation_Tm_refine_26de7b42cd0ee3b89cf2297d5397c9e8",
        "refinement_interpretation_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_interpretation_Tm_refine_3ae7934f7bb0b211572daa2c0f2cb446",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_62d031745719418c57017bacf61a8231",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_8ecf68458670141d0da68d3f08ee3970",
        "refinement_interpretation_Tm_refine_b3b8f676362bccbee257ed490af07787",
        "refinement_interpretation_Tm_refine_b76a8f812b9ca95bf9922b97fac0e0a8",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d4aac4d19bd21030e5b4c951185d0b35",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_fdc76b50d77c404c00b934f4d9c2043a",
        "refinement_kinding_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "typing_FStar.Seq.Base.empty", "typing_FStar.Seq.Base.length",
        "typing_FStar.Seq.Base.slice", "typing_FStar.UInt32.add",
        "typing_FStar.UInt32.uint_to_t", "typing_FStar.UInt32.v",
        "typing_LowParse.Slice.__proj__Mkslice__item__base",
        "typing_LowParse.Slice.__proj__Mkslice__item__len",
        "typing_LowParse.Slice.bytes_of_slice_from",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowParse.Spec.Base.total_constant_size_parser_kind",
        "typing_LowParse.Spec.BoundedInt.bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowStar.Monotonic.Buffer.address_liveness_insensitive_locs",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_LowStar.Monotonic.Buffer.loc_buffer",
        "typing_LowStar.Monotonic.Buffer.loc_none",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_list_bytesize",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_serializer",
        "typing_ParsersAux.Binders.Aux.serialize_list_clientHelloExtension",
        "typing_ParsersAux.Binders.list_clientHelloExtension_binders_offset"
      ],
      0,
      "38fbced2eba629e8b6328029c87096d6"
    ],
    [
      "ParsersAux.Binders.truncate_clientHelloExtensions",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "6617157750e4cda54c2fc95ef4617357"
    ],
    [
      "ParsersAux.Binders.truncate_clientHelloExtensions",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size",
        "equation_ParsersAux.Binders.clientHelloExtensions_binders_offset",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_884faf748fc82169b7d26be84136eada",
        "typing_ParsersAux.Binders.clientHelloExtensions_binders_offset"
      ],
      0,
      "a17608b3032b58b412de8b89131c3b9d"
    ],
    [
      "ParsersAux.Binders.clientHelloExtensions_set_binders",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "refinement_interpretation_Tm_refine_d619c861f528df2a95feefef2671011a"
      ],
      0,
      "be8acf3baa44d9db19bd20de451c5fe2"
    ],
    [
      "ParsersAux.Binders.clientHelloExtensions_set_binders",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "assumption_Parsers.ClientHelloExtension.clientHelloExtension__uu___haseq",
        "assumption_Prims.list__uu___haseq", "disc_equation_Prims.Cons",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions",
        "kinding_Parsers.ClientHelloExtension.clientHelloExtension@tok",
        "lemma_Parsers.ClientHelloExtensions.clientHelloExtensions_bytesize_eqn",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_248f811afad0c7bfde32a28b5295e425",
        "refinement_interpretation_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_interpretation_Tm_refine_d619c861f528df2a95feefef2671011a"
      ],
      0,
      "9c7ed2f791acb2c9a69f212d003d12b5"
    ],
    [
      "ParsersAux.Binders.binders_offset_clientHelloExtensions_set_binders",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "refinement_interpretation_Tm_refine_d619c861f528df2a95feefef2671011a"
      ],
      0,
      "ba0a53e6d9f32ae0c69a2354744e8b2c"
    ],
    [
      "ParsersAux.Binders.binders_offset_clientHelloExtensions_set_binders",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "assumption_Parsers.ClientHelloExtension.clientHelloExtension__uu___haseq",
        "assumption_Prims.list__uu___haseq", "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_LowParse.Spec.Base.Mkparser_kind_",
        "data_elim_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "data_elim_Prims.Cons",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Prims.Cons", "eq2-interp",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "equation_Parsers.OfferedPsks.offeredPsks_parser_kind",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "equation_Parsers.PreSharedKeyClientExtension.preSharedKeyClientExtension",
        "equation_Parsers.PskBinderEntry.pskBinderEntry",
        "equation_ParsersAux.Binders.clientHelloExtensions_binders_offset",
        "equation_ParsersAux.Binders.clientHelloExtensions_set_binders",
        "equation_ParsersAux.Binders.truncate_clientHelloExtensions",
        "equation_ParsersAux.Binders.truncate_list_clientHelloExtension",
        "equation_Prims.eq2", "equation_Prims.nat", "equation_Prims.squash",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Prims.list",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_Parsers.OfferedPsks_binders.offeredPsks_binders_list_bytesize_nil",
        "int_inversion", "int_typing",
        "kinding_Parsers.ClientHelloExtension.clientHelloExtension@tok",
        "kinding_Parsers.OfferedPsks.offeredPsks@tok",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_Parsers.ClientHelloExtensions.clientHelloExtensions_bytesize_eqn",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key__0",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_248f811afad0c7bfde32a28b5295e425",
        "refinement_interpretation_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_54d8e4368ef4be5e2ddd5dfe39051b03",
        "refinement_interpretation_Tm_refine_609152d84d8b640876aaac6ef0ab5cb7",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32",
        "refinement_interpretation_Tm_refine_7cd37621a5dcc502ad4d57a6c13c3520",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_884faf748fc82169b7d26be84136eada",
        "refinement_interpretation_Tm_refine_9a5867ee735299a7d440e4d6898018d1",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_ad3f67715986b6b1480d1c2cf200dcfa",
        "refinement_interpretation_Tm_refine_b3b8f676362bccbee257ed490af07787",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_cb3a60583814f1dc4fa862a3c587ef01",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d619c861f528df2a95feefef2671011a",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_fdc76b50d77c404c00b934f4d9c2043a",
        "refinement_kinding_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_kinding_Tm_refine_609152d84d8b640876aaac6ef0ab5cb7",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.List.Tot.Base.last", "typing_FStar.Seq.Base.append",
        "typing_FStar.Seq.Base.empty", "typing_FStar.Seq.Base.length",
        "typing_FStar.UInt.fits", "typing_FStar.UInt32.add",
        "typing_FStar.UInt32.uint_to_t", "typing_FStar.UInt32.v",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowParse.Spec.BoundedInt.bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "typing_LowParse.Spec.BoundedInt.serialize_bounded_integer",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_list_bytesize",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_serializer",
        "typing_Parsers.OfferedPsks.offeredPsks_parser",
        "typing_Parsers.OfferedPsks.offeredPsks_parser_kind",
        "typing_Parsers.OfferedPsks.offeredPsks_serializer",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_serializer",
        "typing_ParsersAux.Binders.Aux.serialize_list_clientHelloExtension",
        "typing_ParsersAux.Binders.clientHelloExtensions_binders_offset",
        "typing_ParsersAux.Binders.list_clientHelloExtension_binders_offset",
        "typing_ParsersAux.Binders.list_clientHelloExtension_set_binders",
        "typing_ParsersAux.Binders.truncate_clientHelloExtensions",
        "typing_ParsersAux.Binders.truncate_list_clientHelloExtension"
      ],
      0,
      "af9928548b9fdfddd6c4076fadb1623d"
    ],
    [
      "ParsersAux.Binders.truncate_clientHelloExtensions_eq_left",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "4ee664c457032f2c17ae69c2d6d3552f"
    ],
    [
      "ParsersAux.Binders.truncate_clientHelloExtensions_eq_left",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Prims.Cons", "equation_FStar.Bytes.lbytes",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "equation_Parsers.OfferedPsks.offeredPsks_parser_kind",
        "equation_Parsers.PreSharedKeyClientExtension.preSharedKeyClientExtension",
        "equation_ParsersAux.Binders.clientHelloExtensions_binders_offset",
        "equation_ParsersAux.Binders.list_clientHelloExtension_binders_offset",
        "equation_ParsersAux.Binders.truncate_clientHelloExtensions",
        "equation_ParsersAux.Binders.truncate_list_clientHelloExtension",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Parsers.OfferedPsks.offeredPsks",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "kinding_Parsers.ClientHelloExtension.clientHelloExtension@tok",
        "kinding_Parsers.OfferedPsks.offeredPsks@tok",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Spec.Base.serialize_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_54d8e4368ef4be5e2ddd5dfe39051b03",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_884faf748fc82169b7d26be84136eada",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_b3b8f676362bccbee257ed490af07787",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d619c861f528df2a95feefef2671011a",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_fdc76b50d77c404c00b934f4d9c2043a",
        "refinement_kinding_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.List.Tot.Base.last", "typing_FStar.Seq.Base.append",
        "typing_FStar.Seq.Base.empty", "typing_FStar.Seq.Base.length",
        "typing_FStar.UInt32.add", "typing_FStar.UInt32.uint_to_t",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowParse.Spec.Base.total_constant_size_parser_kind",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.serialize_bounded_integer",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_list_bytesize",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_serializer",
        "typing_Parsers.OfferedPsks.offeredPsks_parser",
        "typing_Parsers.OfferedPsks.offeredPsks_parser_kind",
        "typing_Parsers.OfferedPsks.offeredPsks_serializer",
        "typing_ParsersAux.Binders.Aux.serialize_list_clientHelloExtension",
        "typing_ParsersAux.Binders.clientHelloExtensions_binders_offset",
        "typing_ParsersAux.Binders.list_clientHelloExtension_binders_offset",
        "typing_ParsersAux.Binders.truncate_clientHelloExtensions",
        "typing_ParsersAux.Binders.truncate_list_clientHelloExtension"
      ],
      0,
      "bc98913be6517832798f2191de11928b"
    ],
    [
      "ParsersAux.Binders.truncate_clientHelloExtensions_inj_binders_bytesize",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "226c1650dcca95f8ad3ddd06dd76ac09"
    ],
    [
      "ParsersAux.Binders.truncate_clientHelloExtensions_inj_binders_bytesize",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Prims.Cons", "equation_FStar.Bytes.lbytes",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "equation_Prims.nat",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "lemma_FStar.Seq.Base.lemma_eq_elim", "lemma_FStar.UInt.pow2_values",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32",
        "refinement_interpretation_Tm_refine_b3b8f676362bccbee257ed490af07787",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_d619c861f528df2a95feefef2671011a",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.Seq.Base.append", "typing_FStar.UInt32.uint_to_t",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowParse.Spec.Base.total_constant_size_parser_kind",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.serialize_bounded_integer",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_list_bytesize",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "typing_ParsersAux.Binders.truncate_clientHelloExtensions",
        "typing_ParsersAux.Binders.truncate_list_clientHelloExtension"
      ],
      0,
      "81630f63473f8f3e147aa4c31a9fe301"
    ],
    [
      "ParsersAux.Binders.clientHello_binders_offset",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "17e422ae6215e011356549c8e09d5cbf"
    ],
    [
      "ParsersAux.Binders.clientHello_binders_offset",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_b04d122514f99a72ff9ce3f85f1f08f9",
        "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "eq2-interp",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.SLow.Base.size32",
        "equation_LowParse.SLow.Base.size32_postcond",
        "equation_LowParse.SLow.Base.u32_max",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "equation_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites",
        "equation_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser_kind",
        "equation_Parsers.ClientHello_compression_methods.clientHello_compression_methods",
        "equation_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser_kind",
        "equation_Parsers.ProtocolVersion.protocolVersion_parser_kind",
        "equation_Parsers.Random.random",
        "equation_Parsers.Random.random_parser_kind",
        "equation_Parsers.SessionID.sessionID",
        "equation_Parsers.SessionID.sessionID_parser_kind",
        "equation_Prims.nat",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Parsers.ClientHello.clientHello",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_Parsers.Random.random", "int_inversion",
        "int_typing", "kinding_Parsers.ClientHello.clientHello@tok",
        "kinding_Parsers.ProtocolVersion.protocolVersion@tok",
        "lemma_FStar.Bytes.length_reveal",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.UInt.pow2_values",
        "lemma_LowParse.Spec.Base.serialize_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_Parsers.ClientHello.MkclientHello_cipher_suites",
        "proj_equation_Parsers.ClientHello.MkclientHello_compression_methods",
        "proj_equation_Parsers.ClientHello.MkclientHello_extensions",
        "proj_equation_Parsers.ClientHello.MkclientHello_random",
        "proj_equation_Parsers.ClientHello.MkclientHello_session_id",
        "proj_equation_Parsers.ClientHello.MkclientHello_version",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_3600882c70cd035fe22b20bf1836c528",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_88e21d36d9e713615fce456e18b30e39",
        "refinement_interpretation_Tm_refine_c177109d136242edf41b990347a35d5f",
        "refinement_interpretation_Tm_refine_e70272bbea6f6c7d05ad2f356644d43f",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_1506f9bd8a9f298520f6ac5f043b46bc",
        "refinement_kinding_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_kinding_Tm_refine_7ecfee61ad5954fd130d64a2dba634f0",
        "refinement_kinding_Tm_refine_beec71e2de9ddfab99931e183d4c495c",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.Bytes.reveal", "typing_FStar.Seq.Base.append",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.v", "typing_LowParse.SLow.Base.u32_max",
        "typing_LowParse.Spec.Base.serialize",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__cipher_suites",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__compression_methods",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__extensions",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__random",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__session_id",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__version",
        "typing_Parsers.ClientHello.clientHello_parser",
        "typing_Parsers.ClientHello.clientHello_parser_kind",
        "typing_Parsers.ClientHello.clientHello_serializer",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_serializer",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser_kind",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_serializer",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_size32",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser_kind",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_serializer",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_size32",
        "typing_Parsers.ProtocolVersion.protocolVersion_parser",
        "typing_Parsers.ProtocolVersion.protocolVersion_parser_kind",
        "typing_Parsers.ProtocolVersion.protocolVersion_serializer",
        "typing_Parsers.ProtocolVersion.protocolVersion_size32",
        "typing_Parsers.Random.random_parser",
        "typing_Parsers.Random.random_parser_kind",
        "typing_Parsers.Random.random_serializer",
        "typing_Parsers.Random.random_size32",
        "typing_Parsers.SessionID.sessionID_parser",
        "typing_Parsers.SessionID.sessionID_parser_kind",
        "typing_Parsers.SessionID.sessionID_serializer",
        "typing_Parsers.SessionID.sessionID_size32"
      ],
      0,
      "c94455c233d7d8b55cd65f54c012d5f5"
    ],
    [
      "ParsersAux.Binders.clientHello_binders_pos",
      1,
      1,
      0,
      [ "@query" ],
      0,
      "5c72f95bcbc5846292786e4e7b287837"
    ],
    [
      "ParsersAux.Binders.clientHello_binders_pos",
      2,
      1,
      0,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_b04d122514f99a72ff9ce3f85f1f08f9",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Prims.Cons", "eq2-interp",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Low.Base.seq_starts_with",
        "equation_LowParse.SLow.Base.size32",
        "equation_LowParse.SLow.Base.size32_postcond",
        "equation_LowParse.SLow.Base.u32_max",
        "equation_LowParse.Slice.buffer_srel_of_srel",
        "equation_LowParse.Slice.bytes_of_slice_from",
        "equation_LowParse.Slice.live_slice", "equation_LowParse.Slice.srel",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ClientHello.clientHello_parser_kind",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "equation_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites",
        "equation_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser_kind",
        "equation_Parsers.ClientHello_compression_methods.clientHello_compression_methods",
        "equation_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser_kind",
        "equation_Parsers.ProtocolVersion.protocolVersion_parser_kind",
        "equation_Parsers.Random.random",
        "equation_Parsers.Random.random_parser_kind",
        "equation_Parsers.SessionID.sessionID",
        "equation_Parsers.SessionID.sessionID_parser_kind",
        "equation_ParsersAux.Binders.clientHelloExtensions_binders_offset",
        "equation_ParsersAux.Binders.clientHello_binders_offset",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_LowParse.Slice.slice",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_Parsers.Random.random", "int_inversion",
        "int_typing", "kinding_Parsers.ClientHello.clientHello@tok",
        "kinding_Parsers.ProtocolVersion.protocolVersion@tok",
        "lemma_FStar.Bytes.length_reveal", "lemma_FStar.Ghost.reveal_hide",
        "lemma_FStar.HyperStack.ST.lemma_equal_domains_trans",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_eq_refl",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Low.Base.seq_starts_with_append_r_elim",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_LowStar.Monotonic.Buffer.lemma_live_equal_mem_domains",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_LowStar.Monotonic.Buffer.length_null_1",
        "lemma_LowStar.Monotonic.Buffer.length_null_2",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_none_r",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_none",
        "lemma_LowStar.Monotonic.Buffer.modifies_buffer_elim",
        "lemma_LowStar.Monotonic.Buffer.modifies_trans_linear",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Slice.Mkslice_base",
        "proj_equation_LowParse.Slice.Mkslice_len",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_Parsers.ClientHello.MkclientHello_cipher_suites",
        "proj_equation_Parsers.ClientHello.MkclientHello_compression_methods",
        "proj_equation_Parsers.ClientHello.MkclientHello_extensions",
        "proj_equation_Parsers.ClientHello.MkclientHello_random",
        "proj_equation_Parsers.ClientHello.MkclientHello_session_id",
        "proj_equation_Parsers.ClientHello.MkclientHello_version",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_1ba8fd8bb363097813064c67740b2de5",
        "refinement_interpretation_Tm_refine_267ba34c8431286afe7f04d425eda765",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_3ae7934f7bb0b211572daa2c0f2cb446",
        "refinement_interpretation_Tm_refine_3cf0a57889a050a788dc814b157bf290",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_62909bf6b18884753fc8220d592cd374",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_75c6321dcfeb2b59d01a67eea728b5a6",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_7c1524cb0cc52f83f489ebefd32679bd",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_884faf748fc82169b7d26be84136eada",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_cbeaf25800b8266394a33037e12dd82c",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d619c861f528df2a95feefef2671011a",
        "refinement_interpretation_Tm_refine_d64fd265942a82a5c5736f3226a16483",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_d84aa849b6215fb58c2bfd77ebc7d175",
        "refinement_interpretation_Tm_refine_e70272bbea6f6c7d05ad2f356644d43f",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_1506f9bd8a9f298520f6ac5f043b46bc",
        "refinement_kinding_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_kinding_Tm_refine_7ecfee61ad5954fd130d64a2dba634f0",
        "refinement_kinding_Tm_refine_beec71e2de9ddfab99931e183d4c495c",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.Bytes.reveal", "typing_FStar.Seq.Base.append",
        "typing_FStar.Seq.Base.empty", "typing_FStar.Seq.Base.length",
        "typing_FStar.Seq.Base.slice", "typing_FStar.UInt.fits",
        "typing_FStar.UInt.max_int", "typing_FStar.UInt32.add",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Slice.__proj__Mkslice__item__base",
        "typing_LowParse.Slice.__proj__Mkslice__item__len",
        "typing_LowParse.Slice.bytes_of_slice_from",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_LowStar.Monotonic.Buffer.loc_buffer",
        "typing_LowStar.Monotonic.Buffer.loc_none",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__cipher_suites",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__compression_methods",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__extensions",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__random",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__session_id",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__version",
        "typing_Parsers.ClientHello.clientHello_parser",
        "typing_Parsers.ClientHello.clientHello_parser_kind",
        "typing_Parsers.ClientHello.clientHello_serializer",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_serializer",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser_kind",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_serializer",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_size32",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser_kind",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_serializer",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_size32",
        "typing_Parsers.ProtocolVersion.protocolVersion_parser",
        "typing_Parsers.ProtocolVersion.protocolVersion_parser_kind",
        "typing_Parsers.ProtocolVersion.protocolVersion_serializer",
        "typing_Parsers.ProtocolVersion.protocolVersion_size32",
        "typing_Parsers.Random.random_parser",
        "typing_Parsers.Random.random_parser_kind",
        "typing_Parsers.Random.random_serializer",
        "typing_Parsers.Random.random_size32",
        "typing_Parsers.SessionID.sessionID_parser",
        "typing_Parsers.SessionID.sessionID_parser_kind",
        "typing_Parsers.SessionID.sessionID_serializer",
        "typing_Parsers.SessionID.sessionID_size32",
        "typing_ParsersAux.Binders.clientHelloExtensions_binders_offset"
      ],
      0,
      "4aaf01512da6f307d9a327b122756010"
    ],
    [
      "ParsersAux.Binders.truncate_clientHello",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "66c553fd46065d0b1d5a087499c9bdc8"
    ],
    [
      "ParsersAux.Binders.truncate_clientHello",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size",
        "equation_ParsersAux.Binders.clientHello_binders_offset",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_bd9fabdc7462fb82e4ed0bc4a231f4e6",
        "typing_ParsersAux.Binders.clientHello_binders_offset"
      ],
      0,
      "17f6f2c41d23e4ccc6ce5b1d011ddc9e"
    ],
    [
      "ParsersAux.Binders.clientHello_set_binders",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "refinement_interpretation_Tm_refine_c177109d136242edf41b990347a35d5f"
      ],
      0,
      "789736e53a047b885c31acac12f15097"
    ],
    [
      "ParsersAux.Binders.clientHello_set_binders",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "assumption_Parsers.ClientHelloExtension.clientHelloExtension__uu___haseq",
        "assumption_Prims.list__uu___haseq",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Prims.Cons",
        "fuel_guarded_inversion_Parsers.ClientHello.clientHello",
        "kinding_Parsers.ClientHelloExtension.clientHelloExtension@tok",
        "lemma_Parsers.ClientHello.clientHello_bytesize_eqn",
        "proj_equation_Parsers.ClientHello.MkclientHello_cipher_suites",
        "proj_equation_Parsers.ClientHello.MkclientHello_compression_methods",
        "proj_equation_Parsers.ClientHello.MkclientHello_extensions",
        "proj_equation_Parsers.ClientHello.MkclientHello_random",
        "proj_equation_Parsers.ClientHello.MkclientHello_session_id",
        "proj_equation_Parsers.ClientHello.MkclientHello_version",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Parsers.ClientHello.MkclientHello_cipher_suites",
        "projection_inverse_Parsers.ClientHello.MkclientHello_compression_methods",
        "projection_inverse_Parsers.ClientHello.MkclientHello_extensions",
        "projection_inverse_Parsers.ClientHello.MkclientHello_random",
        "projection_inverse_Parsers.ClientHello.MkclientHello_session_id",
        "projection_inverse_Parsers.ClientHello.MkclientHello_version",
        "refinement_interpretation_Tm_refine_5a818b014c222454657375c0936e0575",
        "refinement_interpretation_Tm_refine_c177109d136242edf41b990347a35d5f"
      ],
      0,
      "53372dc5fa7ef382b36e198dfdf7feb1"
    ],
    [
      "ParsersAux.Binders.binders_offset_clientHello_set_binders",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "refinement_interpretation_Tm_refine_c177109d136242edf41b990347a35d5f"
      ],
      0,
      "59b76a59afff52b4d8afb2e865f2fbbf"
    ],
    [
      "ParsersAux.Binders.binders_offset_clientHello_set_binders",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_b04d122514f99a72ff9ce3f85f1f08f9",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "assumption_Parsers.ClientHelloExtension.clientHelloExtension__uu___haseq",
        "assumption_Prims.list__uu___haseq", "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_Parsers.ClientHello.MkclientHello",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Prims.Cons", "eq2-interp",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.SLow.Base.size32",
        "equation_LowParse.SLow.Base.size32_postcond",
        "equation_LowParse.SLow.Base.u32_max",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ClientHello.clientHello_parser_kind",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "equation_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites",
        "equation_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser_kind",
        "equation_Parsers.ClientHello_compression_methods.clientHello_compression_methods",
        "equation_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser_kind",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders",
        "equation_Parsers.ProtocolVersion.protocolVersion_parser_kind",
        "equation_Parsers.Random.random",
        "equation_Parsers.Random.random_parser_kind",
        "equation_Parsers.SessionID.sessionID",
        "equation_Parsers.SessionID.sessionID_parser_kind",
        "equation_ParsersAux.Binders.clientHelloExtensions_set_binders",
        "equation_ParsersAux.Binders.clientHello_binders_offset",
        "equation_ParsersAux.Binders.clientHello_set_binders",
        "equation_ParsersAux.Binders.truncate_clientHello",
        "equation_ParsersAux.Binders.truncate_clientHelloExtensions",
        "equation_Prims.nat",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Parsers.ClientHello.clientHello",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_Parsers.Random.random", "int_inversion",
        "int_typing", "kinding_Parsers.ClientHello.clientHello@tok",
        "kinding_Parsers.ClientHelloExtension.clientHelloExtension@tok",
        "kinding_Parsers.ProtocolVersion.protocolVersion@tok",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_Parsers.Random.random_bytesize_eqn",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_Parsers.ClientHello.MkclientHello_cipher_suites",
        "proj_equation_Parsers.ClientHello.MkclientHello_compression_methods",
        "proj_equation_Parsers.ClientHello.MkclientHello_extensions",
        "proj_equation_Parsers.ClientHello.MkclientHello_random",
        "proj_equation_Parsers.ClientHello.MkclientHello_session_id",
        "proj_equation_Parsers.ClientHello.MkclientHello_version",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_Parsers.ClientHello.MkclientHello_extensions",
        "refinement_interpretation_Tm_refine_07171a09bbdc225f1b6c1cc2db381f63",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_301d522d8b151106959e3c856c6e590a",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_884faf748fc82169b7d26be84136eada",
        "refinement_interpretation_Tm_refine_88e21d36d9e713615fce456e18b30e39",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_bd9fabdc7462fb82e4ed0bc4a231f4e6",
        "refinement_interpretation_Tm_refine_c177109d136242edf41b990347a35d5f",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_e70272bbea6f6c7d05ad2f356644d43f",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_1506f9bd8a9f298520f6ac5f043b46bc",
        "refinement_kinding_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_kinding_Tm_refine_609152d84d8b640876aaac6ef0ab5cb7",
        "refinement_kinding_Tm_refine_7ecfee61ad5954fd130d64a2dba634f0",
        "refinement_kinding_Tm_refine_beec71e2de9ddfab99931e183d4c495c",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.empty",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt.fits",
        "typing_FStar.UInt.max_int", "typing_FStar.UInt32.add",
        "typing_FStar.UInt32.v", "typing_LowParse.SLow.Base.u32_max",
        "typing_LowParse.Spec.Base.serialize",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__cipher_suites",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__compression_methods",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__extensions",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__random",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__session_id",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__version",
        "typing_Parsers.ClientHello.clientHello_parser",
        "typing_Parsers.ClientHello.clientHello_parser_kind",
        "typing_Parsers.ClientHello.clientHello_serializer",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_serializer",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser_kind",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_serializer",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_size32",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser_kind",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_serializer",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_size32",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_serializer",
        "typing_Parsers.ProtocolVersion.protocolVersion_parser",
        "typing_Parsers.ProtocolVersion.protocolVersion_parser_kind",
        "typing_Parsers.ProtocolVersion.protocolVersion_serializer",
        "typing_Parsers.ProtocolVersion.protocolVersion_size32",
        "typing_Parsers.Random.random_bytesize",
        "typing_Parsers.Random.random_parser",
        "typing_Parsers.Random.random_parser_kind",
        "typing_Parsers.Random.random_serializer",
        "typing_Parsers.Random.random_size32",
        "typing_Parsers.SessionID.sessionID_parser",
        "typing_Parsers.SessionID.sessionID_parser_kind",
        "typing_Parsers.SessionID.sessionID_serializer",
        "typing_Parsers.SessionID.sessionID_size32",
        "typing_ParsersAux.Binders.clientHelloExtensions_binders_offset",
        "typing_ParsersAux.Binders.clientHello_binders_offset",
        "typing_ParsersAux.Binders.truncate_clientHello",
        "typing_ParsersAux.Binders.truncate_clientHelloExtensions"
      ],
      0,
      "b4a5e997e9b154bc3bd0404dc20ca927"
    ],
    [
      "ParsersAux.Binders.truncate_clientHello_eq_left",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "a1d8f98ad304ebc3c63a75b152634ac6"
    ],
    [
      "ParsersAux.Binders.truncate_clientHello_eq_left",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_b04d122514f99a72ff9ce3f85f1f08f9",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_Parsers.ClientHello.MkclientHello",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Prims.Cons", "eq2-interp",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.SLow.Base.size32",
        "equation_LowParse.SLow.Base.size32_postcond",
        "equation_LowParse.SLow.Base.u32_max",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ClientHello.clientHello_parser_kind",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "equation_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites",
        "equation_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser_kind",
        "equation_Parsers.ClientHello_compression_methods.clientHello_compression_methods",
        "equation_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser_kind",
        "equation_Parsers.ProtocolVersion.protocolVersion_parser_kind",
        "equation_Parsers.Random.random",
        "equation_Parsers.Random.random_parser_kind",
        "equation_Parsers.SessionID.sessionID",
        "equation_Parsers.SessionID.sessionID_parser_kind",
        "equation_ParsersAux.Binders.clientHelloExtensions_binders_offset",
        "equation_ParsersAux.Binders.clientHello_binders_offset",
        "equation_ParsersAux.Binders.truncate_clientHello",
        "equation_ParsersAux.Binders.truncate_clientHelloExtensions",
        "equation_Prims.nat",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Parsers.ClientHello.clientHello",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_Parsers.Random.random", "int_inversion",
        "int_typing", "kinding_Parsers.ClientHello.clientHello@tok",
        "kinding_Parsers.ProtocolVersion.protocolVersion@tok",
        "lemma_FStar.Bytes.length_reveal",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Spec.Base.serialize_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_Parsers.ClientHello.MkclientHello_cipher_suites",
        "proj_equation_Parsers.ClientHello.MkclientHello_compression_methods",
        "proj_equation_Parsers.ClientHello.MkclientHello_extensions",
        "proj_equation_Parsers.ClientHello.MkclientHello_random",
        "proj_equation_Parsers.ClientHello.MkclientHello_session_id",
        "proj_equation_Parsers.ClientHello.MkclientHello_version",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_884faf748fc82169b7d26be84136eada",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_bd9fabdc7462fb82e4ed0bc4a231f4e6",
        "refinement_interpretation_Tm_refine_c177109d136242edf41b990347a35d5f",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d619c861f528df2a95feefef2671011a",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_e70272bbea6f6c7d05ad2f356644d43f",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_1506f9bd8a9f298520f6ac5f043b46bc",
        "refinement_kinding_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_kinding_Tm_refine_7ecfee61ad5954fd130d64a2dba634f0",
        "refinement_kinding_Tm_refine_beec71e2de9ddfab99931e183d4c495c",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.Bytes.reveal", "typing_FStar.Seq.Base.append",
        "typing_FStar.Seq.Base.empty", "typing_FStar.Seq.Base.length",
        "typing_FStar.UInt.fits", "typing_FStar.UInt.max_int",
        "typing_FStar.UInt32.add", "typing_FStar.UInt32.v",
        "typing_LowParse.Spec.Base.serialize",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__cipher_suites",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__compression_methods",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__extensions",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__random",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__session_id",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__version",
        "typing_Parsers.ClientHello.clientHello_parser",
        "typing_Parsers.ClientHello.clientHello_parser_kind",
        "typing_Parsers.ClientHello.clientHello_serializer",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_serializer",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser_kind",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_serializer",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_size32",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser_kind",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_serializer",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_size32",
        "typing_Parsers.ProtocolVersion.protocolVersion_parser",
        "typing_Parsers.ProtocolVersion.protocolVersion_parser_kind",
        "typing_Parsers.ProtocolVersion.protocolVersion_serializer",
        "typing_Parsers.ProtocolVersion.protocolVersion_size32",
        "typing_Parsers.Random.random_parser",
        "typing_Parsers.Random.random_parser_kind",
        "typing_Parsers.Random.random_serializer",
        "typing_Parsers.Random.random_size32",
        "typing_Parsers.SessionID.sessionID_parser",
        "typing_Parsers.SessionID.sessionID_parser_kind",
        "typing_Parsers.SessionID.sessionID_serializer",
        "typing_Parsers.SessionID.sessionID_size32",
        "typing_ParsersAux.Binders.clientHelloExtensions_binders_offset",
        "typing_ParsersAux.Binders.clientHello_binders_offset",
        "typing_ParsersAux.Binders.truncate_clientHello",
        "typing_ParsersAux.Binders.truncate_clientHelloExtensions"
      ],
      0,
      "7f1ac745ffd83aa9f07dc8c9e3567b9c"
    ],
    [
      "ParsersAux.Binders.truncate_clientHello_inj_binders_bytesize",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "9921460387116d40e0b77263f8c9d5e0"
    ],
    [
      "ParsersAux.Binders.truncate_clientHello_inj_binders_bytesize",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser_kind",
        "equation_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser_kind",
        "equation_Parsers.ProtocolVersion.protocolVersion_parser_kind",
        "equation_Parsers.Random.random_parser_kind",
        "equation_Parsers.SessionID.sessionID_parser_kind",
        "function_token_typing_FStar.UInt8.t",
        "kinding_Parsers.ProtocolVersion.protocolVersion@tok",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_c177109d136242edf41b990347a35d5f",
        "typing_FStar.Seq.Base.append",
        "typing_LowParse.Spec.Base.serialize",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__version",
        "typing_Parsers.ProtocolVersion.protocolVersion_parser",
        "typing_Parsers.ProtocolVersion.protocolVersion_parser_kind",
        "typing_Parsers.ProtocolVersion.protocolVersion_serializer",
        "typing_ParsersAux.Binders.truncate_clientHello"
      ],
      0,
      "ba2bd3ed2a9fef632b6bfa3cc03ebd11"
    ],
    [
      "ParsersAux.Binders.handshake_m_client_hello_binders_offset",
      1,
      1,
      0,
      [ "@query" ],
      0,
      "858e790b9ddbded7529aac8fbaa6183b"
    ],
    [
      "ParsersAux.Binders.handshake_m_client_hello_binders_offset",
      2,
      1,
      0,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.length.fuel_instrumented",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_FStar.List.Tot.Base.length.fuel_instrumented",
        "@query",
        "Parsers.CipherSuite_pretyping_9c6d586fdf50864ba03b45206b761561",
        "Parsers.CompressionMethod_pretyping_0b005f481768a7bd4dd503e17d391cea",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Prims.Cons",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equality_tok_Parsers.CipherSuite.TLS_NULL_WITH_NULL_NULL@tok",
        "equality_tok_Parsers.CompressionMethod.NullCompression@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_Parsers.ClientHello.clientHello_parser_kind",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions",
        "equation_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites",
        "equation_Parsers.ClientHello_compression_methods.clientHello_compression_methods",
        "equation_Parsers.Handshake_m_client_hello.handshake_m_client_hello",
        "equation_Parsers.Random.random",
        "equation_Parsers.SessionID.sessionID",
        "equation_ParsersAux.Binders.clientHello_binders_offset",
        "equation_Prims.nat",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Parsers.ClientHello.clientHello",
        "function_token_typing_FStar.UInt8.t", "int_typing",
        "kinding_Parsers.ClientHello.clientHello@tok",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_Parsers.ClientHello.clientHello_bytesize_eqn",
        "lemma_Parsers.ClientHelloExtensions.clientHelloExtensions_bytesize_eqn",
        "lemma_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_bytesize_eqn",
        "lemma_Parsers.ClientHello_compression_methods.clientHello_compression_methods_bytesize_eqn",
        "lemma_Parsers.ProtocolVersion.protocolVersion_bytesize_eqn",
        "lemma_Parsers.Random.random_bytesize_eqn",
        "lemma_Parsers.SessionID.sessionID_bytesize_eqn",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_Parsers.ClientHello.MkclientHello_cipher_suites",
        "proj_equation_Parsers.ClientHello.MkclientHello_compression_methods",
        "proj_equation_Parsers.ClientHello.MkclientHello_extensions",
        "proj_equation_Parsers.ClientHello.MkclientHello_random",
        "proj_equation_Parsers.ClientHello.MkclientHello_session_id",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_1506f9bd8a9f298520f6ac5f043b46bc",
        "refinement_interpretation_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_interpretation_Tm_refine_2d2db2a5803cb5e1bbd5d727d9420b8c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_7ecfee61ad5954fd130d64a2dba634f0",
        "refinement_interpretation_Tm_refine_bd9fabdc7462fb82e4ed0bc4a231f4e6",
        "refinement_interpretation_Tm_refine_beec71e2de9ddfab99931e183d4c495c",
        "refinement_interpretation_Tm_refine_c177109d136242edf41b990347a35d5f",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.UInt.fits", "typing_FStar.UInt32.uint_to_t",
        "typing_FStar.UInt32.v", "typing_LowParse.Spec.Base.serialize",
        "typing_LowParse.Spec.Base.total_constant_size_parser_kind",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.serialize_bounded_integer",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__cipher_suites",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__compression_methods",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__extensions",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__random",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__session_id",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__version",
        "typing_Parsers.ClientHello.clientHello_bytesize",
        "typing_Parsers.ClientHello.clientHello_parser",
        "typing_Parsers.ClientHello.clientHello_parser_kind",
        "typing_Parsers.ClientHello.clientHello_serializer",
        "typing_Parsers.Random.random_bytesize",
        "typing_ParsersAux.Binders.clientHello_binders_offset",
        "typing_tok_Parsers.CipherSuite.TLS_NULL_WITH_NULL_NULL@tok",
        "typing_tok_Parsers.CompressionMethod.NullCompression@tok"
      ],
      0,
      "4c4e2324f2d46850c98f3cba961af334"
    ],
    [
      "ParsersAux.Binders.handshake_m_client_hello_binders_pos",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "3e17e7733134fe7302b786384e562d56"
    ],
    [
      "ParsersAux.Binders.handshake_m_client_hello_binders_pos",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.length.fuel_instrumented",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_FStar.List.Tot.Base.length.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_b04d122514f99a72ff9ce3f85f1f08f9",
        "Parsers.CipherSuite_pretyping_9c6d586fdf50864ba03b45206b761561",
        "Parsers.CompressionMethod_pretyping_0b005f481768a7bd4dd503e17d391cea",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_Parsers.CipherSuite.TLS_RSA_WITH_NULL_MD5@tok",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Prims.Cons", "eq2-interp",
        "equality_tok_Parsers.CompressionMethod.NullCompression@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Low.Base.seq_starts_with",
        "equation_LowParse.SLow.Base.size32",
        "equation_LowParse.SLow.Base.size32_postcond",
        "equation_LowParse.SLow.Base.u32_max",
        "equation_LowParse.Slice.buffer_srel_of_srel",
        "equation_LowParse.Slice.bytes_of_slice_from",
        "equation_LowParse.Slice.live_slice", "equation_LowParse.Slice.srel",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_Parsers.ClientHello.clientHello_parser_kind",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "equation_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites",
        "equation_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser_kind",
        "equation_Parsers.ClientHello_compression_methods.clientHello_compression_methods",
        "equation_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser_kind",
        "equation_Parsers.Handshake_m_client_hello.handshake_m_client_hello",
        "equation_Parsers.Handshake_m_client_hello.handshake_m_client_hello_parser_kind",
        "equation_Parsers.ProtocolVersion.protocolVersion_parser_kind",
        "equation_Parsers.Random.random",
        "equation_Parsers.Random.random_parser_kind",
        "equation_Parsers.SessionID.sessionID",
        "equation_Parsers.SessionID.sessionID_parser_kind",
        "equation_ParsersAux.Binders.clientHelloExtensions_binders_offset",
        "equation_ParsersAux.Binders.clientHello_binders_offset",
        "equation_ParsersAux.Binders.handshake_m_client_hello_binders_offset",
        "equation_Prims.nat", "fuel_guarded_inversion_LowParse.Slice.slice",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_Parsers.Random.random", "int_inversion",
        "int_typing", "kinding_Parsers.ClientHello.clientHello@tok",
        "kinding_Parsers.ProtocolVersion.protocolVersion@tok",
        "lemma_FStar.Ghost.hide_reveal", "lemma_FStar.Ghost.reveal_hide",
        "lemma_FStar.HyperStack.ST.lemma_equal_domains_trans",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_refl",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Low.Base.seq_starts_with_append_r_elim",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_LowStar.Monotonic.Buffer.lemma_live_equal_mem_domains",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_LowStar.Monotonic.Buffer.length_null_1",
        "lemma_LowStar.Monotonic.Buffer.length_null_2",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_none_r",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_none",
        "lemma_LowStar.Monotonic.Buffer.modifies_buffer_elim",
        "lemma_LowStar.Monotonic.Buffer.modifies_trans_linear",
        "lemma_Parsers.ClientHello.clientHello_bytesize_eqn",
        "lemma_Parsers.ClientHelloExtensions.clientHelloExtensions_bytesize_eqn",
        "lemma_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_bytesize_eqn",
        "lemma_Parsers.ClientHello_compression_methods.clientHello_compression_methods_bytesize_eqn",
        "lemma_Parsers.ProtocolVersion.protocolVersion_bytesize_eqn",
        "lemma_Parsers.Random.random_bytesize_eqn",
        "lemma_Parsers.SessionID.sessionID_bytesize_eqn",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_GreaterThan", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Slice.Mkslice_base",
        "proj_equation_LowParse.Slice.Mkslice_len",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_Parsers.ClientHello.MkclientHello_cipher_suites",
        "proj_equation_Parsers.ClientHello.MkclientHello_compression_methods",
        "proj_equation_Parsers.ClientHello.MkclientHello_extensions",
        "proj_equation_Parsers.ClientHello.MkclientHello_random",
        "proj_equation_Parsers.ClientHello.MkclientHello_session_id",
        "proj_equation_Parsers.ClientHello.MkclientHello_version",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_1506f9bd8a9f298520f6ac5f043b46bc",
        "refinement_interpretation_Tm_refine_1ba8fd8bb363097813064c67740b2de5",
        "refinement_interpretation_Tm_refine_1d5966311429d911f6bbd8f66b228b15",
        "refinement_interpretation_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_interpretation_Tm_refine_3ae7934f7bb0b211572daa2c0f2cb446",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5e8052064b34d559756d600288f504f2",
        "refinement_interpretation_Tm_refine_67379d71e600ce616b85963d6003bd82",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32",
        "refinement_interpretation_Tm_refine_7ecfee61ad5954fd130d64a2dba634f0",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_884faf748fc82169b7d26be84136eada",
        "refinement_interpretation_Tm_refine_88e21d36d9e713615fce456e18b30e39",
        "refinement_interpretation_Tm_refine_a5861405788748ccb1fa5976f93a56a6",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_bd9fabdc7462fb82e4ed0bc4a231f4e6",
        "refinement_interpretation_Tm_refine_beec71e2de9ddfab99931e183d4c495c",
        "refinement_interpretation_Tm_refine_c177109d136242edf41b990347a35d5f",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d619c861f528df2a95feefef2671011a",
        "refinement_interpretation_Tm_refine_e70272bbea6f6c7d05ad2f356644d43f",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_fc6529742904a96e9cf8efe67a7981dd",
        "refinement_kinding_Tm_refine_1506f9bd8a9f298520f6ac5f043b46bc",
        "refinement_kinding_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_kinding_Tm_refine_7ecfee61ad5954fd130d64a2dba634f0",
        "refinement_kinding_Tm_refine_beec71e2de9ddfab99931e183d4c495c",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.Seq.Base.empty", "typing_FStar.Seq.Base.length",
        "typing_FStar.Seq.Base.slice", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.add", "typing_FStar.UInt32.uint_to_t",
        "typing_FStar.UInt32.v", "typing_LowParse.SLow.Base.u32_max",
        "typing_LowParse.Slice.__proj__Mkslice__item__base",
        "typing_LowParse.Slice.__proj__Mkslice__item__len",
        "typing_LowParse.Slice.bytes_of_slice_from",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowParse.Spec.BoundedInt.bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_LowStar.Monotonic.Buffer.loc_buffer",
        "typing_LowStar.Monotonic.Buffer.loc_none",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__cipher_suites",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__compression_methods",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__extensions",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__random",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__session_id",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__version",
        "typing_Parsers.ClientHello.clientHello_bytesize",
        "typing_Parsers.ClientHello.clientHello_parser",
        "typing_Parsers.ClientHello.clientHello_parser_kind",
        "typing_Parsers.ClientHello.clientHello_serializer",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_serializer",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser_kind",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_serializer",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_size32",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser_kind",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_serializer",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_size32",
        "typing_Parsers.Handshake_m_client_hello.handshake_m_client_hello_parser",
        "typing_Parsers.Handshake_m_client_hello.handshake_m_client_hello_parser_kind",
        "typing_Parsers.Handshake_m_client_hello.handshake_m_client_hello_serializer",
        "typing_Parsers.ProtocolVersion.protocolVersion_parser",
        "typing_Parsers.ProtocolVersion.protocolVersion_parser_kind",
        "typing_Parsers.ProtocolVersion.protocolVersion_serializer",
        "typing_Parsers.ProtocolVersion.protocolVersion_size32",
        "typing_Parsers.Random.random_bytesize",
        "typing_Parsers.Random.random_parser",
        "typing_Parsers.Random.random_parser_kind",
        "typing_Parsers.Random.random_serializer",
        "typing_Parsers.Random.random_size32",
        "typing_Parsers.SessionID.sessionID_parser",
        "typing_Parsers.SessionID.sessionID_parser_kind",
        "typing_Parsers.SessionID.sessionID_serializer",
        "typing_Parsers.SessionID.sessionID_size32",
        "typing_ParsersAux.Binders.clientHelloExtensions_binders_offset",
        "typing_ParsersAux.Binders.clientHello_binders_offset",
        "typing_tok_Parsers.CompressionMethod.NullCompression@tok"
      ],
      0,
      "2deecb0e6543975850026e640c99fb05"
    ],
    [
      "ParsersAux.Binders.truncate_handshake_m_client_hello",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "dc290d1523b9d30cd649c0fb0a7f03d1"
    ],
    [
      "ParsersAux.Binders.truncate_handshake_m_client_hello",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size",
        "equation_ParsersAux.Binders.handshake_m_client_hello_binders_offset",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_07cba04f76569dfe26aa5e86f1e18bfb",
        "typing_ParsersAux.Binders.handshake_m_client_hello_binders_offset"
      ],
      0,
      "b646ea3152ac7a18360acf1abb3185e3"
    ],
    [
      "ParsersAux.Binders.handshake_m_client_hello_set_binders",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "refinement_interpretation_Tm_refine_2d2db2a5803cb5e1bbd5d727d9420b8c"
      ],
      0,
      "837aea340f55ea6be61f3193a7c56b80"
    ],
    [
      "ParsersAux.Binders.handshake_m_client_hello_set_binders",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "assumption_Parsers.ClientHelloExtension.clientHelloExtension__uu___haseq",
        "assumption_Prims.list__uu___haseq",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Prims.Cons",
        "equation_Parsers.Handshake_m_client_hello.handshake_m_client_hello",
        "equation_ParsersAux.Binders.clientHello_set_binders",
        "fuel_guarded_inversion_Parsers.ClientHello.clientHello",
        "kinding_Parsers.ClientHelloExtension.clientHelloExtension@tok",
        "lemma_Parsers.Handshake_m_client_hello.handshake_m_client_hello_bytesize_eqn",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_2d2db2a5803cb5e1bbd5d727d9420b8c",
        "refinement_interpretation_Tm_refine_301d522d8b151106959e3c856c6e590a",
        "refinement_interpretation_Tm_refine_c177109d136242edf41b990347a35d5f",
        "typing_ParsersAux.Binders.clientHello_set_binders"
      ],
      0,
      "6ab7ca668de12f91e64e324f028fae13"
    ],
    [
      "ParsersAux.Binders.binders_offset_handshake_m_client_hello_set_binders",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "refinement_interpretation_Tm_refine_2d2db2a5803cb5e1bbd5d727d9420b8c"
      ],
      0,
      "aaac82d350f9f3cd11c8ae2285f55683"
    ],
    [
      "ParsersAux.Binders.binders_offset_handshake_m_client_hello_set_binders",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.length.fuel_instrumented",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_FStar.List.Tot.Base.length.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_b04d122514f99a72ff9ce3f85f1f08f9",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "Parsers.CipherSuite_pretyping_9c6d586fdf50864ba03b45206b761561",
        "Parsers.CompressionMethod_pretyping_0b005f481768a7bd4dd503e17d391cea",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "assumption_Parsers.ClientHelloExtension.clientHelloExtension__uu___haseq",
        "assumption_Prims.list__uu___haseq", "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_Parsers.ClientHello.MkclientHello",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "data_typing_intro_Parsers.CipherSuite.TLS_RSA_WITH_NULL_MD5@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Prims.Cons", "eq2-interp",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equality_tok_Parsers.CompressionMethod.NullCompression@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.SLow.Base.size32",
        "equation_LowParse.SLow.Base.size32_postcond",
        "equation_LowParse.SLow.Base.u32_max",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_Parsers.ClientHello.clientHello_parser_kind",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "equation_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites",
        "equation_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser_kind",
        "equation_Parsers.ClientHello_compression_methods.clientHello_compression_methods",
        "equation_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser_kind",
        "equation_Parsers.Handshake_m_client_hello.handshake_m_client_hello",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders",
        "equation_Parsers.ProtocolVersion.protocolVersion_parser_kind",
        "equation_Parsers.Random.random",
        "equation_Parsers.Random.random_parser_kind",
        "equation_Parsers.SessionID.sessionID",
        "equation_Parsers.SessionID.sessionID_parser_kind",
        "equation_ParsersAux.Binders.clientHelloExtensions_binders_offset",
        "equation_ParsersAux.Binders.clientHello_binders_offset",
        "equation_ParsersAux.Binders.handshake_m_client_hello_binders_offset",
        "equation_ParsersAux.Binders.handshake_m_client_hello_set_binders",
        "equation_ParsersAux.Binders.truncate_clientHello",
        "equation_ParsersAux.Binders.truncate_handshake_m_client_hello",
        "equation_Prims.nat",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Parsers.ClientHello.clientHello",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_Parsers.Random.random",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "int_typing",
        "kinding_Parsers.ClientHello.clientHello@tok",
        "kinding_Parsers.ClientHelloExtension.clientHelloExtension@tok",
        "kinding_Parsers.ProtocolVersion.protocolVersion@tok",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_Parsers.ClientHello.clientHello_bytesize_eqn",
        "lemma_Parsers.ClientHelloExtensions.clientHelloExtensions_bytesize_eqn",
        "lemma_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_bytesize_eqn",
        "lemma_Parsers.ClientHello_compression_methods.clientHello_compression_methods_bytesize_eqn",
        "lemma_Parsers.Handshake_m_client_hello.handshake_m_client_hello_bytesize_eqn",
        "lemma_Parsers.ProtocolVersion.protocolVersion_bytesize_eqn",
        "lemma_Parsers.Random.random_bytesize_eqn",
        "lemma_Parsers.SessionID.sessionID_bytesize_eqn",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_GreaterThan", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_Parsers.ClientHello.MkclientHello_cipher_suites",
        "proj_equation_Parsers.ClientHello.MkclientHello_compression_methods",
        "proj_equation_Parsers.ClientHello.MkclientHello_extensions",
        "proj_equation_Parsers.ClientHello.MkclientHello_random",
        "proj_equation_Parsers.ClientHello.MkclientHello_session_id",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_07171a09bbdc225f1b6c1cc2db381f63",
        "refinement_interpretation_Tm_refine_07cba04f76569dfe26aa5e86f1e18bfb",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_1506f9bd8a9f298520f6ac5f043b46bc",
        "refinement_interpretation_Tm_refine_160f8174ef4e1667b7f7a6048a7b19fb",
        "refinement_interpretation_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_interpretation_Tm_refine_2d2db2a5803cb5e1bbd5d727d9420b8c",
        "refinement_interpretation_Tm_refine_301d522d8b151106959e3c856c6e590a",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32",
        "refinement_interpretation_Tm_refine_7ecfee61ad5954fd130d64a2dba634f0",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_884faf748fc82169b7d26be84136eada",
        "refinement_interpretation_Tm_refine_88e21d36d9e713615fce456e18b30e39",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_bd9fabdc7462fb82e4ed0bc4a231f4e6",
        "refinement_interpretation_Tm_refine_beec71e2de9ddfab99931e183d4c495c",
        "refinement_interpretation_Tm_refine_c177109d136242edf41b990347a35d5f",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d619c861f528df2a95feefef2671011a",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_e70272bbea6f6c7d05ad2f356644d43f",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_1506f9bd8a9f298520f6ac5f043b46bc",
        "refinement_kinding_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_kinding_Tm_refine_609152d84d8b640876aaac6ef0ab5cb7",
        "refinement_kinding_Tm_refine_7ecfee61ad5954fd130d64a2dba634f0",
        "refinement_kinding_Tm_refine_beec71e2de9ddfab99931e183d4c495c",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.empty",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt.fits",
        "typing_FStar.UInt.max_int", "typing_FStar.UInt32.add",
        "typing_FStar.UInt32.uint_to_t", "typing_FStar.UInt32.v",
        "typing_LowParse.SLow.Base.u32_max",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowParse.Spec.BoundedInt.bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "typing_LowParse.Spec.BoundedInt.serialize_bounded_integer",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__cipher_suites",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__compression_methods",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__extensions",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__random",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__session_id",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__version",
        "typing_Parsers.ClientHello.clientHello_bytesize",
        "typing_Parsers.ClientHello.clientHello_parser",
        "typing_Parsers.ClientHello.clientHello_parser_kind",
        "typing_Parsers.ClientHello.clientHello_serializer",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_serializer",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser_kind",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_serializer",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_size32",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser_kind",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_serializer",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_size32",
        "typing_Parsers.Handshake_m_client_hello.handshake_m_client_hello_parser",
        "typing_Parsers.Handshake_m_client_hello.handshake_m_client_hello_parser_kind",
        "typing_Parsers.Handshake_m_client_hello.handshake_m_client_hello_serializer",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_serializer",
        "typing_Parsers.ProtocolVersion.protocolVersion_parser",
        "typing_Parsers.ProtocolVersion.protocolVersion_parser_kind",
        "typing_Parsers.ProtocolVersion.protocolVersion_serializer",
        "typing_Parsers.ProtocolVersion.protocolVersion_size32",
        "typing_Parsers.Random.random_bytesize",
        "typing_Parsers.Random.random_parser",
        "typing_Parsers.Random.random_parser_kind",
        "typing_Parsers.Random.random_serializer",
        "typing_Parsers.Random.random_size32",
        "typing_Parsers.SessionID.sessionID_parser",
        "typing_Parsers.SessionID.sessionID_parser_kind",
        "typing_Parsers.SessionID.sessionID_serializer",
        "typing_Parsers.SessionID.sessionID_size32",
        "typing_ParsersAux.Binders.clientHelloExtensions_binders_offset",
        "typing_ParsersAux.Binders.clientHello_binders_offset",
        "typing_ParsersAux.Binders.clientHello_set_binders",
        "typing_ParsersAux.Binders.handshake_m_client_hello_binders_offset",
        "typing_ParsersAux.Binders.truncate_clientHello",
        "typing_ParsersAux.Binders.truncate_handshake_m_client_hello",
        "typing_tok_Parsers.CompressionMethod.NullCompression@tok"
      ],
      0,
      "e30b66f9521e3e3e419b50a1d60bdc14"
    ],
    [
      "ParsersAux.Binders.truncate_handshake_m_client_hello_eq_left",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "924aea8e317ce3787be9724694815980"
    ],
    [
      "ParsersAux.Binders.truncate_handshake_m_client_hello_eq_left",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.length.fuel_instrumented",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_FStar.List.Tot.Base.length.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_b04d122514f99a72ff9ce3f85f1f08f9",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "Parsers.CipherSuite_pretyping_9c6d586fdf50864ba03b45206b761561",
        "Parsers.CompressionMethod_pretyping_0b005f481768a7bd4dd503e17d391cea",
        "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_Parsers.ClientHello.MkclientHello",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "data_typing_intro_Parsers.CipherSuite.TLS_RSA_WITH_NULL_MD5@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Prims.Cons", "eq2-interp",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equality_tok_Parsers.CompressionMethod.NullCompression@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.SLow.Base.size32",
        "equation_LowParse.SLow.Base.size32_postcond",
        "equation_LowParse.SLow.Base.u32_max",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_Parsers.ClientHello.clientHello_parser_kind",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "equation_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites",
        "equation_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser_kind",
        "equation_Parsers.ClientHello_compression_methods.clientHello_compression_methods",
        "equation_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser_kind",
        "equation_Parsers.Handshake_m_client_hello.handshake_m_client_hello",
        "equation_Parsers.ProtocolVersion.protocolVersion_parser_kind",
        "equation_Parsers.Random.random",
        "equation_Parsers.Random.random_parser_kind",
        "equation_Parsers.SessionID.sessionID",
        "equation_Parsers.SessionID.sessionID_parser_kind",
        "equation_ParsersAux.Binders.clientHelloExtensions_binders_offset",
        "equation_ParsersAux.Binders.clientHello_binders_offset",
        "equation_ParsersAux.Binders.handshake_m_client_hello_binders_offset",
        "equation_ParsersAux.Binders.truncate_clientHello",
        "equation_ParsersAux.Binders.truncate_handshake_m_client_hello",
        "equation_Prims.nat",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Parsers.ClientHello.clientHello",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_Parsers.Random.random", "int_inversion",
        "int_typing", "kinding_Parsers.ClientHello.clientHello@tok",
        "kinding_Parsers.ProtocolVersion.protocolVersion@tok",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_Parsers.ClientHello.clientHello_bytesize_eqn",
        "lemma_Parsers.ClientHelloExtensions.clientHelloExtensions_bytesize_eqn",
        "lemma_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_bytesize_eqn",
        "lemma_Parsers.ClientHello_compression_methods.clientHello_compression_methods_bytesize_eqn",
        "lemma_Parsers.ProtocolVersion.protocolVersion_bytesize_eqn",
        "lemma_Parsers.Random.random_bytesize_eqn",
        "lemma_Parsers.SessionID.sessionID_bytesize_eqn",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_GreaterThan", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_Parsers.ClientHello.MkclientHello_cipher_suites",
        "proj_equation_Parsers.ClientHello.MkclientHello_compression_methods",
        "proj_equation_Parsers.ClientHello.MkclientHello_extensions",
        "proj_equation_Parsers.ClientHello.MkclientHello_random",
        "proj_equation_Parsers.ClientHello.MkclientHello_session_id",
        "proj_equation_Parsers.ClientHello.MkclientHello_version",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_07cba04f76569dfe26aa5e86f1e18bfb",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_1506f9bd8a9f298520f6ac5f043b46bc",
        "refinement_interpretation_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_interpretation_Tm_refine_2d2db2a5803cb5e1bbd5d727d9420b8c",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32",
        "refinement_interpretation_Tm_refine_7ecfee61ad5954fd130d64a2dba634f0",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_884faf748fc82169b7d26be84136eada",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_bd9fabdc7462fb82e4ed0bc4a231f4e6",
        "refinement_interpretation_Tm_refine_beec71e2de9ddfab99931e183d4c495c",
        "refinement_interpretation_Tm_refine_c177109d136242edf41b990347a35d5f",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d619c861f528df2a95feefef2671011a",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_e70272bbea6f6c7d05ad2f356644d43f",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_1506f9bd8a9f298520f6ac5f043b46bc",
        "refinement_kinding_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_kinding_Tm_refine_7ecfee61ad5954fd130d64a2dba634f0",
        "refinement_kinding_Tm_refine_beec71e2de9ddfab99931e183d4c495c",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.empty",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.add", "typing_FStar.UInt32.uint_to_t",
        "typing_FStar.UInt32.v", "typing_LowParse.Spec.Base.serialize",
        "typing_LowParse.Spec.Base.total_constant_size_parser_kind",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.serialize_bounded_integer",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__cipher_suites",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__compression_methods",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__extensions",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__random",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__session_id",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__version",
        "typing_Parsers.ClientHello.clientHello_bytesize",
        "typing_Parsers.ClientHello.clientHello_parser",
        "typing_Parsers.ClientHello.clientHello_parser_kind",
        "typing_Parsers.ClientHello.clientHello_serializer",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_serializer",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser_kind",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_serializer",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_size32",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser_kind",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_serializer",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_size32",
        "typing_Parsers.Handshake_m_client_hello.handshake_m_client_hello_parser",
        "typing_Parsers.Handshake_m_client_hello.handshake_m_client_hello_parser_kind",
        "typing_Parsers.Handshake_m_client_hello.handshake_m_client_hello_serializer",
        "typing_Parsers.ProtocolVersion.protocolVersion_parser",
        "typing_Parsers.ProtocolVersion.protocolVersion_parser_kind",
        "typing_Parsers.ProtocolVersion.protocolVersion_serializer",
        "typing_Parsers.ProtocolVersion.protocolVersion_size32",
        "typing_Parsers.Random.random_bytesize",
        "typing_Parsers.Random.random_parser",
        "typing_Parsers.Random.random_parser_kind",
        "typing_Parsers.Random.random_serializer",
        "typing_Parsers.Random.random_size32",
        "typing_Parsers.SessionID.sessionID_parser",
        "typing_Parsers.SessionID.sessionID_parser_kind",
        "typing_Parsers.SessionID.sessionID_serializer",
        "typing_Parsers.SessionID.sessionID_size32",
        "typing_ParsersAux.Binders.clientHelloExtensions_binders_offset",
        "typing_ParsersAux.Binders.clientHello_binders_offset",
        "typing_ParsersAux.Binders.handshake_m_client_hello_binders_offset",
        "typing_ParsersAux.Binders.truncate_clientHello",
        "typing_ParsersAux.Binders.truncate_handshake_m_client_hello",
        "typing_tok_Parsers.CompressionMethod.NullCompression@tok"
      ],
      0,
      "34cb0e36db094f6c54c0d727ba0967a4"
    ],
    [
      "ParsersAux.Binders.truncate_handshake_m_client_hello_inj_binders_bytesize",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "17c2149cf88d62b0aace631f05e8531f"
    ],
    [
      "ParsersAux.Binders.truncate_handshake_m_client_hello_inj_binders_bytesize",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.length.fuel_instrumented",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_FStar.List.Tot.Base.length.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "Parsers.CipherSuite_pretyping_9c6d586fdf50864ba03b45206b761561",
        "Parsers.CompressionMethod_pretyping_0b005f481768a7bd4dd503e17d391cea",
        "b2t_def", "bool_inversion",
        "data_typing_intro_Parsers.CipherSuite.TLS_RSA_WITH_NULL_MD5@tok",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Prims.Cons",
        "equality_tok_Parsers.CompressionMethod.NullCompression@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions",
        "equation_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites",
        "equation_Parsers.ClientHello_compression_methods.clientHello_compression_methods",
        "equation_Parsers.Handshake_m_client_hello.handshake_m_client_hello",
        "equation_Parsers.Random.random",
        "equation_Parsers.SessionID.sessionID", "equation_Prims.nat",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_Parsers.ClientHello.clientHello",
        "function_token_typing_FStar.UInt8.t", "int_typing",
        "lemma_FStar.Seq.Base.lemma_eq_elim", "lemma_FStar.UInt.pow2_values",
        "lemma_Parsers.ClientHello.clientHello_bytesize_eqn",
        "lemma_Parsers.ClientHelloExtensions.clientHelloExtensions_bytesize_eqn",
        "lemma_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_bytesize_eqn",
        "lemma_Parsers.ClientHello_compression_methods.clientHello_compression_methods_bytesize_eqn",
        "lemma_Parsers.ProtocolVersion.protocolVersion_bytesize_eqn",
        "lemma_Parsers.Random.random_bytesize_eqn",
        "lemma_Parsers.SessionID.sessionID_bytesize_eqn",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_Parsers.ClientHello.MkclientHello_cipher_suites",
        "proj_equation_Parsers.ClientHello.MkclientHello_compression_methods",
        "proj_equation_Parsers.ClientHello.MkclientHello_extensions",
        "proj_equation_Parsers.ClientHello.MkclientHello_random",
        "proj_equation_Parsers.ClientHello.MkclientHello_session_id",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_1506f9bd8a9f298520f6ac5f043b46bc",
        "refinement_interpretation_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_interpretation_Tm_refine_2d2db2a5803cb5e1bbd5d727d9420b8c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_7ecfee61ad5954fd130d64a2dba634f0",
        "refinement_interpretation_Tm_refine_beec71e2de9ddfab99931e183d4c495c",
        "refinement_interpretation_Tm_refine_c177109d136242edf41b990347a35d5f",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.Seq.Base.append", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.uint_to_t", "typing_FStar.UInt32.v",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowParse.Spec.Base.total_constant_size_parser_kind",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.serialize_bounded_integer",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__cipher_suites",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__compression_methods",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__extensions",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__random",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__session_id",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__version",
        "typing_Parsers.ClientHello.clientHello_bytesize",
        "typing_Parsers.Random.random_bytesize",
        "typing_ParsersAux.Binders.truncate_clientHello",
        "typing_ParsersAux.Binders.truncate_handshake_m_client_hello",
        "typing_tok_Parsers.CompressionMethod.NullCompression@tok"
      ],
      0,
      "739c1defebdac8316d903a240e033d95"
    ],
    [
      "ParsersAux.Binders.set_binders",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "equation_ParsersAux.Binders.has_binders",
        "primitive_Prims.op_AmpAmp", "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_8879e4d447c306881afdf046534ba346"
      ],
      0,
      "b1670eb0d6f40484742bc4d728db0bdc"
    ],
    [
      "ParsersAux.Binders.set_binders",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion", "bool_typing",
        "constructor_distinct_Parsers.Handshake.M_client_hello",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Parsers.Handshake.M_client_hello",
        "disc_equation_Prims.Cons",
        "equation_ParsersAux.Binders.get_binders",
        "equation_ParsersAux.Binders.has_binders",
        "primitive_Prims.op_AmpAmp",
        "proj_equation_Parsers.Handshake.M_client_hello__0",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Parsers.Handshake.M_client_hello__0",
        "refinement_interpretation_Tm_refine_5194e68912b4ab37d567935a871b9f18",
        "refinement_interpretation_Tm_refine_8879e4d447c306881afdf046534ba346",
        "refinement_interpretation_Tm_refine_90fd489489a21ad57e4f61392edf5b6d",
        "typing_Parsers.Handshake.uu___is_M_client_hello",
        "typing_ParsersAux.Binders.has_binders"
      ],
      0,
      "7369b955088273696db891ec52575826"
    ],
    [
      "ParsersAux.Binders.set_binders_get_binders",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.last.fuel_instrumented",
        "@query", "constructor_distinct_Parsers.Handshake.M_client_hello",
        "data_elim_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "data_elim_Parsers.Handshake.M_client_hello",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Parsers.Handshake.M_client_hello",
        "disc_equation_Prims.Cons",
        "equation_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key",
        "equation_Parsers.Handshake_m_client_hello.handshake_m_client_hello",
        "equation_Parsers.PreSharedKeyClientExtension.preSharedKeyClientExtension",
        "equation_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_set_binders",
        "equation_ParsersAux.Binders.clientHello_set_binders",
        "equation_ParsersAux.Binders.get_binders",
        "equation_ParsersAux.Binders.handshake_m_client_hello_set_binders",
        "equation_ParsersAux.Binders.has_binders",
        "equation_ParsersAux.Binders.offeredPsks_set_binders",
        "equation_ParsersAux.Binders.set_binders",
        "fuel_guarded_inversion_Parsers.ClientHello.clientHello",
        "fuel_guarded_inversion_Parsers.OfferedPsks.offeredPsks",
        "kinding_Parsers.ClientHelloExtension.clientHelloExtension@tok",
        "primitive_Prims.op_AmpAmp",
        "proj_equation_Parsers.ClientHello.MkclientHello_cipher_suites",
        "proj_equation_Parsers.ClientHello.MkclientHello_compression_methods",
        "proj_equation_Parsers.ClientHello.MkclientHello_extensions",
        "proj_equation_Parsers.ClientHello.MkclientHello_random",
        "proj_equation_Parsers.ClientHello.MkclientHello_session_id",
        "proj_equation_Parsers.ClientHello.MkclientHello_version",
        "proj_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key__0",
        "proj_equation_Parsers.Handshake.M_client_hello__0",
        "proj_equation_Parsers.OfferedPsks.MkofferedPsks_binders",
        "proj_equation_Parsers.OfferedPsks.MkofferedPsks_identities",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Parsers.ClientHello.MkclientHello_extensions",
        "projection_inverse_Parsers.Handshake.M_client_hello__0",
        "refinement_interpretation_Tm_refine_54d8e4368ef4be5e2ddd5dfe39051b03",
        "refinement_interpretation_Tm_refine_7157bc28eb0282f3a8de08fa09e6eec4",
        "refinement_interpretation_Tm_refine_734cceed3d47f0e5b8650d4760489e66",
        "refinement_interpretation_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32",
        "refinement_interpretation_Tm_refine_8879e4d447c306881afdf046534ba346",
        "typing_FStar.List.Tot.Base.last"
      ],
      0,
      "617d417b8e6a6700f9e0285fcdbb9569"
    ],
    [
      "ParsersAux.Binders.set_binders_bytesize",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "bool_inversion", "bool_typing",
        "data_elim_Parsers.Handshake.M_client_hello",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Parsers.Handshake.M_client_hello",
        "disc_equation_Prims.Cons",
        "equation_ParsersAux.Binders.get_binders",
        "equation_ParsersAux.Binders.has_binders",
        "equation_ParsersAux.Binders.set_binders",
        "lemma_Parsers.Handshake.handshake_bytesize_eqn_client_hello",
        "primitive_Prims.op_AmpAmp",
        "proj_equation_Parsers.Handshake.M_client_hello__0",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_07171a09bbdc225f1b6c1cc2db381f63",
        "refinement_interpretation_Tm_refine_160f8174ef4e1667b7f7a6048a7b19fb",
        "refinement_interpretation_Tm_refine_2d2db2a5803cb5e1bbd5d727d9420b8c",
        "refinement_interpretation_Tm_refine_8879e4d447c306881afdf046534ba346",
        "refinement_interpretation_Tm_refine_90fd489489a21ad57e4f61392edf5b6d",
        "typing_ParsersAux.Binders.handshake_m_client_hello_set_binders",
        "typing_ParsersAux.Binders.has_binders"
      ],
      0,
      "87e62cb15a13fb5e387bca550b6ed3b6"
    ],
    [
      "ParsersAux.Binders.set_binders_set_binders",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.last.fuel_instrumented",
        "@query", "constructor_distinct_Parsers.Handshake.M_client_hello",
        "disc_equation_Parsers.Handshake.M_client_hello",
        "disc_equation_Prims.Cons",
        "equation_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_set_binders",
        "equation_ParsersAux.Binders.clientHelloExtension_set_binders",
        "equation_ParsersAux.Binders.clientHelloExtensions_set_binders",
        "equation_ParsersAux.Binders.clientHello_set_binders",
        "equation_ParsersAux.Binders.handshake_m_client_hello_set_binders",
        "equation_ParsersAux.Binders.has_binders",
        "equation_ParsersAux.Binders.list_clientHelloExtension_set_binders",
        "equation_ParsersAux.Binders.offeredPsks_set_binders",
        "equation_ParsersAux.Binders.set_binders",
        "primitive_Prims.op_AmpAmp",
        "proj_equation_Parsers.ClientHello.MkclientHello_extensions",
        "proj_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key__0",
        "proj_equation_Parsers.Handshake.M_client_hello__0",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Parsers.ClientHello.MkclientHello_extensions",
        "projection_inverse_Parsers.Handshake.M_client_hello__0",
        "refinement_interpretation_Tm_refine_5236d721da64f4dd14560395c478fc0e",
        "refinement_interpretation_Tm_refine_5c9560e5a9173d1dcd7130fe38981a0f",
        "refinement_interpretation_Tm_refine_8879e4d447c306881afdf046534ba346",
        "refinement_interpretation_Tm_refine_90fd489489a21ad57e4f61392edf5b6d",
        "refinement_interpretation_Tm_refine_ed98c923dac3ca5c01fd7ae15d28e878",
        "typing_ParsersAux.Binders.set_binders"
      ],
      0,
      "2fcdceeaf9c719c2665988c7746157a1"
    ],
    [
      "ParsersAux.Binders.binders_offset",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "Parsers.HandshakeType_pretyping_4ae277eb4b83707366cb7ae1906c30cf",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_Parsers.HandshakeType.Client_hello@tok",
        "disc_equation_Parsers.Handshake.M_client_hello",
        "equality_tok_Parsers.HandshakeType.Client_hello@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.Handshake.handshake_parser_kind",
        "equation_Parsers.HandshakeType.handshakeType_parser_kind",
        "equation_Parsers.Handshake_m_client_hello.handshake_m_client_hello",
        "equation_Parsers.Random.random",
        "equation_ParsersAux.Binders.has_binders", "equation_Prims.nat",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_FStar.UInt8.t", "int_typing",
        "kinding_Parsers.ClientHello.clientHello@tok",
        "kinding_Parsers.Handshake.handshake@tok",
        "kinding_Parsers.HandshakeType.handshakeType@tok",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.UInt.pow2_values",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_Parsers.Random.random_bytesize_eqn",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_Parsers.ClientHello.MkclientHello_random",
        "proj_equation_Parsers.Handshake.M_client_hello__0",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_668a85e55256fa0dd1b8134c94375ba6",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_8879e4d447c306881afdf046534ba346",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.UInt32.v", "typing_LowParse.Spec.Base.serialize",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__random",
        "typing_Parsers.Handshake.handshake_parser",
        "typing_Parsers.Handshake.handshake_parser_kind",
        "typing_Parsers.Handshake.handshake_serializer",
        "typing_Parsers.Handshake.uu___is_M_client_hello",
        "typing_Parsers.HandshakeType.handshakeType_parser",
        "typing_Parsers.HandshakeType.handshakeType_parser_kind",
        "typing_Parsers.HandshakeType.handshakeType_serializer",
        "typing_Parsers.Handshake_m_client_hello.handshake_m_client_hello_parser",
        "typing_Parsers.Handshake_m_client_hello.handshake_m_client_hello_parser_kind",
        "typing_Parsers.Handshake_m_client_hello.handshake_m_client_hello_serializer",
        "typing_Parsers.Random.random_bytesize",
        "typing_tok_Parsers.HandshakeType.Client_hello@tok"
      ],
      0,
      "2d6bf855813a5bd0610aacd4ddaeb62d"
    ],
    [
      "ParsersAux.Binders.truncate_handshake",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size",
        "equation_ParsersAux.Binders.binders_offset",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_3222344f513ab29ebe06c013530c1097",
        "typing_ParsersAux.Binders.binders_offset"
      ],
      0,
      "9c67c000e0d3bc389bdb424e42366b33"
    ],
    [
      "ParsersAux.Binders.binders_offset_handshake_set_binders",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.last.fuel_instrumented",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_b04d122514f99a72ff9ce3f85f1f08f9",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "Parsers.HandshakeType_pretyping_4ae277eb4b83707366cb7ae1906c30cf",
        "Parsers.Handshake_pretyping_e820e8f1af892b0c2d02b3e800c975d6",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Parsers.Handshake.M_client_hello",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "data_typing_intro_Parsers.HandshakeType.Client_hello@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Parsers.Handshake.M_client_hello",
        "disc_equation_Prims.Cons", "eq2-interp",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equality_tok_Parsers.HandshakeType.Client_hello@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.SLow.Base.size32",
        "equation_LowParse.SLow.Base.size32_postcond",
        "equation_LowParse.SLow.Base.u32_max",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ClientHello.clientHello_parser_kind",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "equation_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites",
        "equation_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser_kind",
        "equation_Parsers.ClientHello_compression_methods.clientHello_compression_methods",
        "equation_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser_kind",
        "equation_Parsers.Handshake.handshake_parser_kind",
        "equation_Parsers.HandshakeType.handshakeType_parser_kind",
        "equation_Parsers.Handshake_m_client_hello.handshake_m_client_hello",
        "equation_Parsers.Handshake_m_client_hello.handshake_m_client_hello_parser_kind",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders",
        "equation_Parsers.ProtocolVersion.protocolVersion_parser_kind",
        "equation_Parsers.Random.random",
        "equation_Parsers.Random.random_parser_kind",
        "equation_Parsers.SessionID.sessionID",
        "equation_Parsers.SessionID.sessionID_parser_kind",
        "equation_ParsersAux.Binders.binders_offset",
        "equation_ParsersAux.Binders.clientHelloExtension_CHE_pre_shared_key_binders_offset",
        "equation_ParsersAux.Binders.clientHelloExtension_binders_offset",
        "equation_ParsersAux.Binders.clientHelloExtensions_binders_offset",
        "equation_ParsersAux.Binders.clientHello_binders_offset",
        "equation_ParsersAux.Binders.clientHello_set_binders",
        "equation_ParsersAux.Binders.get_binders",
        "equation_ParsersAux.Binders.handshake_m_client_hello_binders_offset",
        "equation_ParsersAux.Binders.handshake_m_client_hello_set_binders",
        "equation_ParsersAux.Binders.has_binders",
        "equation_ParsersAux.Binders.list_clientHelloExtension_binders_offset",
        "equation_ParsersAux.Binders.offeredPsks_binders_offset",
        "equation_ParsersAux.Binders.set_binders",
        "equation_ParsersAux.Binders.truncate_handshake",
        "equation_ParsersAux.Binders.truncate_handshake_m_client_hello",
        "equation_Prims.nat",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_Parsers.Random.random",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "int_typing",
        "kinding_Parsers.ClientHello.clientHello@tok",
        "kinding_Parsers.Handshake.handshake@tok",
        "kinding_Parsers.HandshakeType.handshakeType@tok",
        "kinding_Parsers.ProtocolVersion.protocolVersion@tok",
        "lemma_FStar.Bytes.length_reveal",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Spec.Base.serialize_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_Parsers.ClientHello.MkclientHello_extensions",
        "proj_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key__0",
        "proj_equation_Parsers.Handshake.M_client_hello__0",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_Parsers.ClientHello.MkclientHello_extensions",
        "projection_inverse_Parsers.Handshake.M_client_hello__0",
        "refinement_interpretation_Tm_refine_07171a09bbdc225f1b6c1cc2db381f63",
        "refinement_interpretation_Tm_refine_07cba04f76569dfe26aa5e86f1e18bfb",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_160f8174ef4e1667b7f7a6048a7b19fb",
        "refinement_interpretation_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_interpretation_Tm_refine_2d2db2a5803cb5e1bbd5d727d9420b8c",
        "refinement_interpretation_Tm_refine_3222344f513ab29ebe06c013530c1097",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_5236d721da64f4dd14560395c478fc0e",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_884faf748fc82169b7d26be84136eada",
        "refinement_interpretation_Tm_refine_8879e4d447c306881afdf046534ba346",
        "refinement_interpretation_Tm_refine_88e21d36d9e713615fce456e18b30e39",
        "refinement_interpretation_Tm_refine_90fd489489a21ad57e4f61392edf5b6d",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_bd9fabdc7462fb82e4ed0bc4a231f4e6",
        "refinement_interpretation_Tm_refine_c177109d136242edf41b990347a35d5f",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d619c861f528df2a95feefef2671011a",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_e70272bbea6f6c7d05ad2f356644d43f",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_1506f9bd8a9f298520f6ac5f043b46bc",
        "refinement_kinding_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_kinding_Tm_refine_609152d84d8b640876aaac6ef0ab5cb7",
        "refinement_kinding_Tm_refine_7ecfee61ad5954fd130d64a2dba634f0",
        "refinement_kinding_Tm_refine_beec71e2de9ddfab99931e183d4c495c",
        "typing_FStar.Bytes.len", "typing_FStar.Bytes.reveal",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.empty",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.add", "typing_FStar.UInt32.uint_to_t",
        "typing_FStar.UInt32.v", "typing_LowParse.SLow.Base.u32_max",
        "typing_LowParse.Spec.Base.serialize",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__cipher_suites",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__compression_methods",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__extensions",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__random",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__session_id",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__version",
        "typing_Parsers.ClientHello.clientHello_parser",
        "typing_Parsers.ClientHello.clientHello_parser_kind",
        "typing_Parsers.ClientHello.clientHello_serializer",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_serializer",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser_kind",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_serializer",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_size32",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser_kind",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_serializer",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_size32",
        "typing_Parsers.Handshake.handshake_parser",
        "typing_Parsers.Handshake.handshake_parser_kind",
        "typing_Parsers.Handshake.handshake_serializer",
        "typing_Parsers.Handshake.uu___is_M_client_hello",
        "typing_Parsers.HandshakeType.handshakeType_parser",
        "typing_Parsers.HandshakeType.handshakeType_parser_kind",
        "typing_Parsers.HandshakeType.handshakeType_serializer",
        "typing_Parsers.Handshake_m_client_hello.handshake_m_client_hello_parser",
        "typing_Parsers.Handshake_m_client_hello.handshake_m_client_hello_parser_kind",
        "typing_Parsers.Handshake_m_client_hello.handshake_m_client_hello_serializer",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_serializer",
        "typing_Parsers.ProtocolVersion.protocolVersion_parser",
        "typing_Parsers.ProtocolVersion.protocolVersion_parser_kind",
        "typing_Parsers.ProtocolVersion.protocolVersion_serializer",
        "typing_Parsers.ProtocolVersion.protocolVersion_size32",
        "typing_Parsers.Random.random_parser",
        "typing_Parsers.Random.random_parser_kind",
        "typing_Parsers.Random.random_serializer",
        "typing_Parsers.Random.random_size32",
        "typing_Parsers.SessionID.sessionID_parser",
        "typing_Parsers.SessionID.sessionID_parser_kind",
        "typing_Parsers.SessionID.sessionID_serializer",
        "typing_Parsers.SessionID.sessionID_size32",
        "typing_ParsersAux.Binders.binders_offset",
        "typing_ParsersAux.Binders.clientHelloExtensions_binders_offset",
        "typing_ParsersAux.Binders.clientHello_binders_offset",
        "typing_ParsersAux.Binders.handshake_m_client_hello_binders_offset",
        "typing_ParsersAux.Binders.handshake_m_client_hello_set_binders",
        "typing_ParsersAux.Binders.has_binders",
        "typing_ParsersAux.Binders.truncate_handshake",
        "typing_ParsersAux.Binders.truncate_handshake_m_client_hello",
        "typing_tok_Parsers.HandshakeType.Client_hello@tok"
      ],
      0,
      "ca1e43628424bfc2e641147387bb2bbd"
    ],
    [
      "ParsersAux.Binders.binders_offset_set_binder",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "dcbc5daca85c2a8e99071afad782a433"
    ],
    [
      "ParsersAux.Binders.binders_offset_set_binder",
      2,
      2,
      1,
      [ "@query" ],
      0,
      "3be522fb19cfb6b1f59fbc6b5718e1a7"
    ],
    [
      "ParsersAux.Binders.truncate_clientHello_bytes",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_1ea557206cf20dccb0bbdaf8d9b173a8",
        "Parsers.Handshake_pretyping_e820e8f1af892b0c2d02b3e800c975d6",
        "b2t_def", "bool_inversion", "bool_typing",
        "disc_equation_Parsers.Handshake.M_client_hello", "eq2-interp",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.lte", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt32.lte", "equation_LowParse.Bytes.byte",
        "equation_LowParse.SLow.Base.bytes32",
        "equation_LowParse.SLow.Base.serializer32",
        "equation_LowParse.SLow.Base.serializer32_correct",
        "equation_LowParse.Spec.Base.serialize",
        "equation_Parsers.Handshake.handshake_parser_kind",
        "equation_ParsersAux.Binders.binders_offset",
        "equation_ParsersAux.Binders.has_binders",
        "lemma_FStar.Bytes.length_reveal", "lemma_FStar.UInt32.uv_inv",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_3222344f513ab29ebe06c013530c1097",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_8879e4d447c306881afdf046534ba346",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f72fa123e541c05d0133fb44a028b079",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.UInt32.v",
        "typing_Parsers.Handshake.handshake_serializer32",
        "typing_ParsersAux.Binders.binders_offset",
        "typing_ParsersAux.Binders.has_binders"
      ],
      0,
      "c2f7fe78fca51404614788ede2d596bb"
    ],
    [
      "ParsersAux.Binders.parse_truncate_clientHello_bytes",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_1ea557206cf20dccb0bbdaf8d9b173a8",
        "LowParse.SLow.Base_interpretation_Tm_arrow_ff5732131c4d8d7fb4c3eb412f8744c3",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "Parsers.Handshake_pretyping_e820e8f1af892b0c2d02b3e800c975d6",
        "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "disc_equation_Parsers.Handshake.M_client_hello", "eq2-interp",
        "equality_tok_LowParse.Spec.Base.ParserStrong@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.lte",
        "equation_FStar.UInt32.lte", "equation_LowParse.Bytes.byte",
        "equation_LowParse.SLow.Base.bytes32",
        "equation_LowParse.SLow.Base.parser32",
        "equation_LowParse.SLow.Base.parser32_correct",
        "equation_LowParse.SLow.Base.serializer32",
        "equation_LowParse.SLow.Base.serializer32_correct",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.Handshake.handshake_parser_kind",
        "equation_ParsersAux.Binders.binders_offset",
        "equation_ParsersAux.Binders.has_binders",
        "equation_ParsersAux.Binders.truncate_clientHello_bytes",
        "equation_Prims.nat",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "l_and-interp", "lemma_FStar.Bytes.length_reveal",
        "lemma_FStar.UInt32.uv_inv", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_22f045d4a6dfeb53d32dcc3c403d606c",
        "refinement_interpretation_Tm_refine_3222344f513ab29ebe06c013530c1097",
        "refinement_interpretation_Tm_refine_58e48de108dd8d3561ae781a7312b1bf",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_8879e4d447c306881afdf046534ba346",
        "refinement_interpretation_Tm_refine_e81200776b42135b929d100b8e428349",
        "refinement_interpretation_Tm_refine_f72fa123e541c05d0133fb44a028b079",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.Bytes.slice",
        "typing_Parsers.Handshake.handshake_parser32",
        "typing_Parsers.Handshake.handshake_serializer32",
        "typing_ParsersAux.Binders.binders_offset",
        "typing_ParsersAux.Binders.has_binders",
        "typing_ParsersAux.Binders.truncate_clientHello_bytes"
      ],
      0,
      "1aac3ca4473658ae21c41a179d56edfa"
    ],
    [
      "ParsersAux.Binders.truncate_clientHello_bytes_correct",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_1ea557206cf20dccb0bbdaf8d9b173a8",
        "Parsers.Handshake_pretyping_e820e8f1af892b0c2d02b3e800c975d6",
        "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_LowParse.Spec.Base.Mkparser_kind_",
        "disc_equation_Parsers.Handshake.M_client_hello", "eq2-interp",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.lte", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_FStar.UInt32.lte",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.SLow.Base.bytes32",
        "equation_LowParse.SLow.Base.serializer32",
        "equation_LowParse.SLow.Base.serializer32_correct",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.Handshake.handshake_parser_kind",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "equation_Parsers.Random.random_parser_kind",
        "equation_ParsersAux.Binders.binders_offset",
        "equation_ParsersAux.Binders.get_binders",
        "equation_ParsersAux.Binders.has_binders",
        "equation_ParsersAux.Binders.truncate_clientHello_bytes",
        "equation_Prims.nat", "function_token_typing_FStar.UInt8.t",
        "int_inversion", "int_typing",
        "kinding_Parsers.Handshake.handshake@tok",
        "lemma_FStar.Bytes.length_reveal",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.uv_inv",
        "lemma_LowParse.SLow.Base.serializer32_correct_length",
        "lemma_LowParse.Spec.Base.serialize_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_22f045d4a6dfeb53d32dcc3c403d606c",
        "refinement_interpretation_Tm_refine_3222344f513ab29ebe06c013530c1097",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_58e48de108dd8d3561ae781a7312b1bf",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_8879e4d447c306881afdf046534ba346",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f72fa123e541c05d0133fb44a028b079",
        "refinement_kinding_Tm_refine_609152d84d8b640876aaac6ef0ab5cb7",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.Bytes.reveal", "typing_FStar.Bytes.slice",
        "typing_FStar.Seq.Base.empty", "typing_FStar.Seq.Base.length",
        "typing_FStar.UInt32.v", "typing_LowParse.Spec.Base.serialize",
        "typing_Parsers.Handshake.handshake_parser",
        "typing_Parsers.Handshake.handshake_parser_kind",
        "typing_Parsers.Handshake.handshake_serializer",
        "typing_Parsers.Handshake.handshake_serializer32",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_serializer",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_serializer32",
        "typing_Parsers.Random.random_parser_kind",
        "typing_ParsersAux.Binders.binders_offset",
        "typing_ParsersAux.Binders.get_binders",
        "typing_ParsersAux.Binders.has_binders",
        "typing_ParsersAux.Binders.truncate_clientHello_bytes"
      ],
      0,
      "bb59f0bad3a884408338fe5c2cadc1f5"
    ],
    [
      "ParsersAux.Binders.truncate_clientHello_bytes_correct",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_1ea557206cf20dccb0bbdaf8d9b173a8",
        "Parsers.Handshake_pretyping_e820e8f1af892b0c2d02b3e800c975d6",
        "b2t_def", "bool_inversion", "bool_typing", "eq2-interp",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.lte", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt32.lte", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.SLow.Base.bytes32",
        "equation_LowParse.SLow.Base.serializer32",
        "equation_LowParse.SLow.Base.serializer32_correct",
        "equation_LowParse.Spec.Base.serialize",
        "equation_Parsers.Handshake.handshake_parser_kind",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "equation_ParsersAux.Binders.has_binders",
        "equation_ParsersAux.Binders.truncate_clientHello_bytes",
        "equation_ParsersAux.Binders.truncate_handshake",
        "function_token_typing_FStar.UInt8.t", "int_inversion",
        "kinding_Parsers.Handshake.handshake@tok",
        "lemma_FStar.Bytes.hide_reveal", "lemma_FStar.Bytes.length_reveal",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_len_append", "lemma_FStar.UInt32.uv_inv",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_22f045d4a6dfeb53d32dcc3c403d606c",
        "refinement_interpretation_Tm_refine_3222344f513ab29ebe06c013530c1097",
        "refinement_interpretation_Tm_refine_58e48de108dd8d3561ae781a7312b1bf",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_8879e4d447c306881afdf046534ba346",
        "refinement_interpretation_Tm_refine_9864cb84bafe0bc511caf24c3876607c",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f72fa123e541c05d0133fb44a028b079",
        "refinement_kinding_Tm_refine_609152d84d8b640876aaac6ef0ab5cb7",
        "typing_FStar.Bytes.append", "typing_FStar.Bytes.empty_bytes",
        "typing_FStar.Bytes.len", "typing_FStar.Bytes.slice",
        "typing_FStar.Seq.Base.append", "typing_FStar.UInt32.v",
        "typing_LowParse.Spec.Base.serialize",
        "typing_Parsers.Handshake.handshake_parser",
        "typing_Parsers.Handshake.handshake_parser_kind",
        "typing_Parsers.Handshake.handshake_serializer",
        "typing_Parsers.Handshake.handshake_serializer32",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_serializer",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_serializer32",
        "typing_ParsersAux.Binders.binders_offset",
        "typing_ParsersAux.Binders.get_binders",
        "typing_ParsersAux.Binders.has_binders",
        "typing_ParsersAux.Binders.truncate_clientHello_bytes",
        "typing_ParsersAux.Binders.truncate_handshake"
      ],
      0,
      "cace3f22a4a0021e1ee6d80ea6a2d10a"
    ],
    [
      "ParsersAux.Binders.truncate_clientHello_bytes_set_binders",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "03e6156ccae88c969b161c097ddb94d6"
    ],
    [
      "ParsersAux.Binders.truncate_clientHello_bytes_set_binders",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_1ea557206cf20dccb0bbdaf8d9b173a8",
        "Parsers.Handshake_pretyping_e820e8f1af892b0c2d02b3e800c975d6",
        "b2t_def", "bool_inversion", "bool_typing",
        "disc_equation_Parsers.Handshake.M_client_hello", "eq2-interp",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.lte", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt32.lte", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.SLow.Base.bytes32",
        "equation_LowParse.SLow.Base.serializer32",
        "equation_LowParse.SLow.Base.serializer32_correct",
        "equation_LowParse.Spec.Base.serialize",
        "equation_Parsers.Handshake.handshake_parser_kind",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders",
        "equation_ParsersAux.Binders.has_binders",
        "equation_ParsersAux.Binders.set_binders",
        "equation_ParsersAux.Binders.truncate_clientHello_bytes",
        "equation_ParsersAux.Binders.truncate_handshake",
        "function_token_typing_FStar.UInt8.t",
        "kinding_Parsers.Handshake.handshake@tok",
        "lemma_FStar.Bytes.hide_reveal", "lemma_FStar.Bytes.length_reveal",
        "lemma_FStar.Seq.Base.lemma_eq_elim", "lemma_FStar.UInt32.uv_inv",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_22f045d4a6dfeb53d32dcc3c403d606c",
        "refinement_interpretation_Tm_refine_3222344f513ab29ebe06c013530c1097",
        "refinement_interpretation_Tm_refine_5236d721da64f4dd14560395c478fc0e",
        "refinement_interpretation_Tm_refine_58e48de108dd8d3561ae781a7312b1bf",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_8879e4d447c306881afdf046534ba346",
        "refinement_interpretation_Tm_refine_90fd489489a21ad57e4f61392edf5b6d",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f72fa123e541c05d0133fb44a028b079",
        "refinement_kinding_Tm_refine_609152d84d8b640876aaac6ef0ab5cb7",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.Bytes.slice", "typing_FStar.Seq.Base.append",
        "typing_FStar.UInt32.v", "typing_LowParse.Spec.Base.serialize",
        "typing_Parsers.Handshake.handshake_parser",
        "typing_Parsers.Handshake.handshake_parser_kind",
        "typing_Parsers.Handshake.handshake_serializer",
        "typing_Parsers.Handshake.handshake_serializer32",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_serializer",
        "typing_ParsersAux.Binders.binders_offset",
        "typing_ParsersAux.Binders.has_binders",
        "typing_ParsersAux.Binders.set_binders",
        "typing_ParsersAux.Binders.truncate_clientHello_bytes",
        "typing_ParsersAux.Binders.truncate_handshake"
      ],
      0,
      "93b15ae9b0485af0b88ef63d49c50755"
    ],
    [
      "ParsersAux.Binders.truncate_handshake_eq_left",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "Parsers.HandshakeType_pretyping_4ae277eb4b83707366cb7ae1906c30cf",
        "Parsers.Handshake_pretyping_e820e8f1af892b0c2d02b3e800c975d6",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_Parsers.Handshake.M_client_hello",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "data_typing_intro_Parsers.HandshakeType.Client_hello@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Parsers.Handshake.M_client_hello",
        "disc_equation_Prims.Cons",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equality_tok_Parsers.HandshakeType.Client_hello@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ClientHello.clientHello_parser_kind",
        "equation_Parsers.Handshake.handshake_parser_kind",
        "equation_Parsers.HandshakeType.handshakeType_parser_kind",
        "equation_Parsers.Handshake_m_client_hello.handshake_m_client_hello",
        "equation_Parsers.Random.random",
        "equation_ParsersAux.Binders.binders_offset",
        "equation_ParsersAux.Binders.clientHello_binders_offset",
        "equation_ParsersAux.Binders.handshake_m_client_hello_binders_offset",
        "equation_ParsersAux.Binders.has_binders",
        "equation_ParsersAux.Binders.truncate_handshake",
        "equation_ParsersAux.Binders.truncate_handshake_m_client_hello",
        "equation_Prims.nat",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "kinding_Parsers.ClientHello.clientHello@tok",
        "kinding_Parsers.Handshake.handshake@tok",
        "kinding_Parsers.HandshakeType.handshakeType@tok",
        "lemma_FStar.Bytes.length_reveal",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Spec.Base.serialize_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_Parsers.ClientHello.MkclientHello_random",
        "proj_equation_Parsers.Handshake.M_client_hello__0",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_07cba04f76569dfe26aa5e86f1e18bfb",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_2d2db2a5803cb5e1bbd5d727d9420b8c",
        "refinement_interpretation_Tm_refine_3222344f513ab29ebe06c013530c1097",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_8879e4d447c306881afdf046534ba346",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_bd9fabdc7462fb82e4ed0bc4a231f4e6",
        "refinement_interpretation_Tm_refine_c177109d136242edf41b990347a35d5f",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.Bytes.reveal", "typing_FStar.Seq.Base.append",
        "typing_FStar.Seq.Base.empty", "typing_FStar.Seq.Base.length",
        "typing_FStar.UInt.fits", "typing_FStar.UInt32.add",
        "typing_FStar.UInt32.uint_to_t", "typing_FStar.UInt32.v",
        "typing_LowParse.Spec.Base.serialize",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__random",
        "typing_Parsers.ClientHello.clientHello_parser",
        "typing_Parsers.ClientHello.clientHello_parser_kind",
        "typing_Parsers.ClientHello.clientHello_serializer",
        "typing_Parsers.Handshake.handshake_parser",
        "typing_Parsers.Handshake.handshake_parser_kind",
        "typing_Parsers.Handshake.handshake_serializer",
        "typing_Parsers.Handshake.uu___is_M_client_hello",
        "typing_Parsers.HandshakeType.handshakeType_parser",
        "typing_Parsers.HandshakeType.handshakeType_parser_kind",
        "typing_Parsers.HandshakeType.handshakeType_serializer",
        "typing_Parsers.Handshake_m_client_hello.handshake_m_client_hello_parser",
        "typing_Parsers.Handshake_m_client_hello.handshake_m_client_hello_parser_kind",
        "typing_Parsers.Handshake_m_client_hello.handshake_m_client_hello_serializer",
        "typing_ParsersAux.Binders.binders_offset",
        "typing_ParsersAux.Binders.clientHello_binders_offset",
        "typing_ParsersAux.Binders.handshake_m_client_hello_binders_offset",
        "typing_ParsersAux.Binders.has_binders",
        "typing_ParsersAux.Binders.truncate_handshake",
        "typing_ParsersAux.Binders.truncate_handshake_m_client_hello",
        "typing_tok_Parsers.HandshakeType.Client_hello@tok"
      ],
      0,
      "53d13879065f735cf227b9ace6ae6931"
    ],
    [
      "ParsersAux.Binders.truncate_clientHello_bytes_inj_binders_bytesize",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_1ea557206cf20dccb0bbdaf8d9b173a8",
        "Parsers.Handshake_pretyping_e820e8f1af892b0c2d02b3e800c975d6",
        "b2t_def", "bool_inversion", "bool_typing",
        "disc_equation_Parsers.Handshake.M_client_hello", "eq2-interp",
        "equality_tok_Parsers.HandshakeType.Client_hello@tok",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.lte", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt32.lte", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.SLow.Base.bytes32",
        "equation_LowParse.SLow.Base.serializer32",
        "equation_LowParse.SLow.Base.serializer32_correct",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.Handshake.handshake_parser_kind",
        "equation_Parsers.HandshakeType.handshakeType_parser_kind",
        "equation_ParsersAux.Binders.binders_offset",
        "equation_ParsersAux.Binders.get_binders",
        "equation_ParsersAux.Binders.has_binders",
        "equation_ParsersAux.Binders.truncate_clientHello_bytes",
        "equation_ParsersAux.Binders.truncate_handshake",
        "function_token_typing_FStar.UInt8.t",
        "kinding_Parsers.HandshakeType.handshakeType@tok",
        "lemma_FStar.Bytes.length_reveal",
        "lemma_FStar.Seq.Base.lemma_eq_elim", "lemma_FStar.UInt32.uv_inv",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_22f045d4a6dfeb53d32dcc3c403d606c",
        "refinement_interpretation_Tm_refine_3222344f513ab29ebe06c013530c1097",
        "refinement_interpretation_Tm_refine_58e48de108dd8d3561ae781a7312b1bf",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_8879e4d447c306881afdf046534ba346",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f72fa123e541c05d0133fb44a028b079",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.Bytes.slice", "typing_FStar.Seq.Base.append",
        "typing_FStar.UInt32.v", "typing_LowParse.Spec.Base.serialize",
        "typing_Parsers.Handshake.handshake_serializer32",
        "typing_Parsers.HandshakeType.handshakeType_parser",
        "typing_Parsers.HandshakeType.handshakeType_parser_kind",
        "typing_Parsers.HandshakeType.handshakeType_serializer",
        "typing_ParsersAux.Binders.binders_offset",
        "typing_ParsersAux.Binders.has_binders",
        "typing_ParsersAux.Binders.truncate_handshake",
        "typing_tok_Parsers.HandshakeType.Client_hello@tok"
      ],
      0,
      "25950ddc1c2f6f0c30ae82065fb281f3"
    ],
    [
      "ParsersAux.Binders.truncate_clientHello_bytes_inj",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "disc_equation_Parsers.Handshake.M_client_hello",
        "equation_ParsersAux.Binders.has_binders",
        "primitive_Prims.op_AmpAmp", "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_5236d721da64f4dd14560395c478fc0e",
        "refinement_interpretation_Tm_refine_8879e4d447c306881afdf046534ba346"
      ],
      0,
      "0966deaf1e0b4d04f5c446b146cbdb31"
    ],
    [
      "ParsersAux.Binders.valid_truncate_clientHello",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.last.fuel_instrumented",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_1ea557206cf20dccb0bbdaf8d9b173a8",
        "Parsers.Handshake_pretyping_e820e8f1af892b0c2d02b3e800c975d6",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_LowParse.Slice.Mkslice",
        "data_elim_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "data_elim_Parsers.Handshake.M_client_hello",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Parsers.Handshake.M_client_hello",
        "disc_equation_Prims.Cons", "eq2-interp",
        "equation_FStar.Bytes.lbytes",
        "equation_FStar.Monotonic.HyperHeap.hmap",
        "equation_FStar.Monotonic.HyperStack.is_tip",
        "equation_FStar.Monotonic.HyperStack.is_wf_with_ctr_and_tip",
        "equation_FStar.Monotonic.HyperStack.mem",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lte",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt32.lte", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Low.Base.bytes_of_slice_from_to",
        "equation_LowParse.Low.Base.valid_pos",
        "equation_LowParse.SLow.Base.bytes32",
        "equation_LowParse.SLow.Base.serializer32",
        "equation_LowParse.SLow.Base.serializer32_correct",
        "equation_LowParse.Slice.buffer_srel_of_srel",
        "equation_LowParse.Slice.srel",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowStar.Monotonic.Buffer.length",
        "equation_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions",
        "equation_Parsers.Handshake.handshake_parser_kind",
        "equation_Parsers.Handshake_m_client_hello.handshake_m_client_hello",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "equation_Parsers.PreSharedKeyClientExtension.preSharedKeyClientExtension",
        "equation_ParsersAux.Binders.get_binders",
        "equation_ParsersAux.Binders.has_binders",
        "equation_ParsersAux.Binders.truncate_clientHello_bytes",
        "equation_Prims.nat", "equation_Prims.squash",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_LowParse.Slice.slice",
        "function_token_typing_FStar.Monotonic.Heap.heap",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "kinding_Parsers.ClientHelloExtension.clientHelloExtension@tok",
        "kinding_Parsers.Handshake.handshake@tok", "l_and-interp",
        "lemma_FStar.Bytes.length_reveal",
        "lemma_FStar.Map.lemma_ContainsDom",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.uv_inv",
        "lemma_LowParse.Low.Base.content_length_eq",
        "lemma_LowParse.Low.Base.content_length_post",
        "lemma_LowParse.Low.Base.get_valid_pos_post",
        "lemma_LowParse.Low.Base.valid_elim_",
        "lemma_LowParse.Low.Base.valid_exact_elim_",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_Parsers.OfferedPsks_binders.offeredPsks_binders_bytesize_eqn",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Slice.Mkslice_base",
        "proj_equation_LowParse.Slice.Mkslice_len",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key__0",
        "proj_equation_Parsers.Handshake.M_client_hello__0",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_05e15190c946858f68c69156f585f95a",
        "refinement_interpretation_Tm_refine_14204cbf581c67c0bcdd8469a13d0929",
        "refinement_interpretation_Tm_refine_1ba8fd8bb363097813064c67740b2de5",
        "refinement_interpretation_Tm_refine_22f045d4a6dfeb53d32dcc3c403d606c",
        "refinement_interpretation_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_54d8e4368ef4be5e2ddd5dfe39051b03",
        "refinement_interpretation_Tm_refine_58e48de108dd8d3561ae781a7312b1bf",
        "refinement_interpretation_Tm_refine_609152d84d8b640876aaac6ef0ab5cb7",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_8879e4d447c306881afdf046534ba346",
        "refinement_interpretation_Tm_refine_9864cb84bafe0bc511caf24c3876607c",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_b8b6aeb489b761b86c0ce3170a6f72d6",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f72fa123e541c05d0133fb44a028b079",
        "refinement_interpretation_Tm_refine_fe73bdb8b9cb8fc03d6c2d252618ec90",
        "refinement_kinding_Tm_refine_609152d84d8b640876aaac6ef0ab5cb7",
        "typing_FStar.Bytes.append", "typing_FStar.Bytes.empty_bytes",
        "typing_FStar.Bytes.len", "typing_FStar.Bytes.reveal",
        "typing_FStar.Bytes.slice", "typing_FStar.List.Tot.Base.last",
        "typing_FStar.Map.contains", "typing_FStar.Monotonic.HyperHeap.rid",
        "typing_FStar.Monotonic.HyperStack.get_hmap",
        "typing_FStar.Monotonic.HyperStack.get_tip",
        "typing_FStar.Seq.Base.empty", "typing_FStar.Seq.Base.length",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.serialized_length",
        "typing_LowParse.Slice.__proj__Mkslice__item__base",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_LowStar.Monotonic.Buffer.len",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__extensions",
        "typing_Parsers.Handshake.handshake_parser",
        "typing_Parsers.Handshake.handshake_parser_kind",
        "typing_Parsers.Handshake.handshake_serializer",
        "typing_Parsers.Handshake.handshake_serializer32",
        "typing_Parsers.OfferedPsks.__proj__MkofferedPsks__item__binders",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_bytesize",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_serializer",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_serializer32",
        "typing_ParsersAux.Binders.has_binders",
        "typing_ParsersAux.Binders.truncate_clientHello_bytes"
      ],
      0,
      "e9dd60b96f0f0512c13e0d7dc68fc201"
    ],
    [
      "ParsersAux.Binders.truncate_clientHello_valid",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_1ea557206cf20dccb0bbdaf8d9b173a8",
        "Parsers.Handshake_pretyping_e820e8f1af892b0c2d02b3e800c975d6",
        "b2t_def", "bool_inversion", "data_elim_LowParse.Slice.Mkslice",
        "disc_equation_Parsers.Handshake.M_client_hello", "eq2-interp",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.lte", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_FStar.UInt32.lte",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Low.Base.bytes_of_slice_from_to",
        "equation_LowParse.Low.Base.valid_content",
        "equation_LowParse.Low.Base.valid_content_pos",
        "equation_LowParse.Low.Base.valid_pos",
        "equation_LowParse.SLow.Base.bytes32",
        "equation_LowParse.SLow.Base.serializer32",
        "equation_LowParse.SLow.Base.serializer32_correct",
        "equation_LowParse.Slice.buffer_srel_of_srel",
        "equation_LowParse.Slice.srel",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowStar.Monotonic.Buffer.length",
        "equation_Parsers.Handshake.handshake_parser_kind",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "equation_ParsersAux.Binders.binders_offset",
        "equation_ParsersAux.Binders.get_binders",
        "equation_ParsersAux.Binders.has_binders",
        "equation_ParsersAux.Binders.truncate_clientHello_bytes",
        "equation_Prims.nat", "fuel_guarded_inversion_LowParse.Slice.slice",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "kinding_Parsers.Handshake.handshake@tok",
        "lemma_FStar.Bytes.length_reveal",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice", "lemma_FStar.UInt32.uv_inv",
        "lemma_LowParse.Low.Base.content_length_post",
        "lemma_LowParse.SLow.Base.serializer32_correct_length",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Slice.Mkslice_base",
        "proj_equation_LowParse.Slice.Mkslice_len",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_22f045d4a6dfeb53d32dcc3c403d606c",
        "refinement_interpretation_Tm_refine_3222344f513ab29ebe06c013530c1097",
        "refinement_interpretation_Tm_refine_322f9f85c27323ee5f57b288fa61f42b",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_3ae7934f7bb0b211572daa2c0f2cb446",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_58e48de108dd8d3561ae781a7312b1bf",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_8879e4d447c306881afdf046534ba346",
        "refinement_interpretation_Tm_refine_9864cb84bafe0bc511caf24c3876607c",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f72fa123e541c05d0133fb44a028b079",
        "refinement_interpretation_Tm_refine_fe73bdb8b9cb8fc03d6c2d252618ec90",
        "refinement_kinding_Tm_refine_609152d84d8b640876aaac6ef0ab5cb7",
        "typing_FStar.Bytes.append", "typing_FStar.Bytes.empty_bytes",
        "typing_FStar.Bytes.len", "typing_FStar.Bytes.reveal",
        "typing_FStar.Bytes.slice", "typing_FStar.Seq.Base.empty",
        "typing_FStar.Seq.Base.length", "typing_FStar.Seq.Base.slice",
        "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.bytes_of_slice_from_to",
        "typing_LowParse.Slice.__proj__Mkslice__item__base",
        "typing_LowParse.Slice.__proj__Mkslice__item__len",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_LowStar.Monotonic.Buffer.len",
        "typing_Parsers.Handshake.handshake_parser",
        "typing_Parsers.Handshake.handshake_parser_kind",
        "typing_Parsers.Handshake.handshake_serializer",
        "typing_Parsers.Handshake.handshake_serializer32",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_serializer",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_serializer32",
        "typing_ParsersAux.Binders.binders_offset",
        "typing_ParsersAux.Binders.get_binders",
        "typing_ParsersAux.Binders.has_binders",
        "typing_ParsersAux.Binders.truncate_clientHello_bytes"
      ],
      0,
      "7b43f76774db1f757a17de455be58182"
    ],
    [
      "ParsersAux.Binders.binders_pos",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "refinement_interpretation_Tm_refine_a0863fb03730faf5c05012c36e62accb"
      ],
      0,
      "69cb1f1eac6a8ef1dceeba3819f617fa"
    ],
    [
      "ParsersAux.Binders.binders_pos",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.List.Tot.Base.last.fuel_instrumented",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.SLow.Base_interpretation_Tm_arrow_1ea557206cf20dccb0bbdaf8d9b173a8",
        "LowParse.SLow.Base_interpretation_Tm_arrow_b04d122514f99a72ff9ce3f85f1f08f9",
        "LowParse.Spec.Base_interpretation_Tm_ghost_arrow_e273f661900a8a745968309e4e276255",
        "Parsers.HandshakeType_pretyping_4ae277eb4b83707366cb7ae1906c30cf",
        "Parsers.Handshake_pretyping_e820e8f1af892b0c2d02b3e800c975d6",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_LowParse.Slice.Mkslice",
        "data_elim_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "data_typing_intro_Parsers.HandshakeType.Client_hello@tok",
        "disc_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key",
        "disc_equation_Parsers.Handshake.M_client_hello",
        "disc_equation_Prims.Cons", "eq2-interp",
        "equation_FStar.Bytes.lbytes", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.lte", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_FStar.UInt32.lte",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Low.Base.bytes_of_slice_from_to",
        "equation_LowParse.Low.Base.seq_starts_with",
        "equation_LowParse.Low.Base.valid_pos",
        "equation_LowParse.SLow.Base.bytes32",
        "equation_LowParse.SLow.Base.serializer32",
        "equation_LowParse.SLow.Base.serializer32_correct",
        "equation_LowParse.SLow.Base.size32",
        "equation_LowParse.SLow.Base.size32_postcond",
        "equation_LowParse.SLow.Base.u32_max",
        "equation_LowParse.Slice.buffer_srel_of_srel",
        "equation_LowParse.Slice.bytes_of_slice_from",
        "equation_LowParse.Slice.live_slice", "equation_LowParse.Slice.srel",
        "equation_LowParse.Spec.Base.bare_serializer",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.serializer",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.ClientHello.clientHello_parser_kind",
        "equation_Parsers.ClientHelloExtension_CHE_pre_shared_key.clientHelloExtension_CHE_pre_shared_key",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions",
        "equation_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "equation_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites",
        "equation_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser_kind",
        "equation_Parsers.ClientHello_compression_methods.clientHello_compression_methods",
        "equation_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser_kind",
        "equation_Parsers.Handshake.handshake_parser_kind",
        "equation_Parsers.Handshake.tag_of_handshake",
        "equation_Parsers.HandshakeType.handshakeType_parser_kind",
        "equation_Parsers.Handshake_m_client_hello.handshake_m_client_hello",
        "equation_Parsers.Handshake_m_client_hello.handshake_m_client_hello_parser_kind",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "equation_Parsers.PreSharedKeyClientExtension.preSharedKeyClientExtension",
        "equation_Parsers.ProtocolVersion.protocolVersion_parser_kind",
        "equation_Parsers.Random.random",
        "equation_Parsers.Random.random_parser_kind",
        "equation_Parsers.SessionID.sessionID",
        "equation_Parsers.SessionID.sessionID_parser_kind",
        "equation_ParsersAux.Binders.binders_offset",
        "equation_ParsersAux.Binders.clientHelloExtensions_binders_offset",
        "equation_ParsersAux.Binders.clientHello_binders_offset",
        "equation_ParsersAux.Binders.get_binders",
        "equation_ParsersAux.Binders.handshake_m_client_hello_binders_offset",
        "equation_ParsersAux.Binders.has_binders",
        "equation_ParsersAux.Binders.truncate_clientHello_bytes",
        "equation_Prims.nat", "fuel_guarded_inversion_LowParse.Slice.slice",
        "fuel_guarded_inversion_Parsers.OfferedPsks.offeredPsks",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_Parsers.Random.random", "int_inversion",
        "int_typing", "kinding_Parsers.ClientHello.clientHello@tok",
        "kinding_Parsers.ClientHelloExtension.clientHelloExtension@tok",
        "kinding_Parsers.Handshake.handshake@tok",
        "kinding_Parsers.HandshakeType.handshakeType@tok",
        "kinding_Parsers.ProtocolVersion.protocolVersion@tok",
        "lemma_FStar.Bytes.length_reveal", "lemma_FStar.Ghost.reveal_hide",
        "lemma_FStar.HyperStack.ST.lemma_equal_domains_trans",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_refl",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.uv_inv",
        "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Low.Base.content_length_post",
        "lemma_LowParse.Low.Base.get_valid_pos_post",
        "lemma_LowParse.Low.Base.seq_starts_with_append_r_elim",
        "lemma_LowParse.Low.Base.valid_elim_",
        "lemma_LowParse.Low.Base.valid_exact_elim_",
        "lemma_LowParse.SLow.Base.serializer32_correct_length",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_LowStar.Monotonic.Buffer.lemma_live_equal_mem_domains",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_LowStar.Monotonic.Buffer.length_null_1",
        "lemma_LowStar.Monotonic.Buffer.length_null_2",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_none_r",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_none",
        "lemma_LowStar.Monotonic.Buffer.modifies_buffer_elim",
        "lemma_LowStar.Monotonic.Buffer.modifies_trans_linear",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Slice.Mkslice_base",
        "proj_equation_LowParse.Slice.Mkslice_len",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_Parsers.ClientHello.MkclientHello_cipher_suites",
        "proj_equation_Parsers.ClientHello.MkclientHello_compression_methods",
        "proj_equation_Parsers.ClientHello.MkclientHello_random",
        "proj_equation_Parsers.ClientHello.MkclientHello_session_id",
        "proj_equation_Parsers.ClientHello.MkclientHello_version",
        "proj_equation_Parsers.ClientHelloExtension.CHE_pre_shared_key__0",
        "proj_equation_Parsers.Handshake.M_client_hello__0",
        "proj_equation_Parsers.OfferedPsks.MkofferedPsks_binders",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_07cba04f76569dfe26aa5e86f1e18bfb",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_1ba8fd8bb363097813064c67740b2de5",
        "refinement_interpretation_Tm_refine_22f045d4a6dfeb53d32dcc3c403d606c",
        "refinement_interpretation_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_interpretation_Tm_refine_2d2db2a5803cb5e1bbd5d727d9420b8c",
        "refinement_interpretation_Tm_refine_3222344f513ab29ebe06c013530c1097",
        "refinement_interpretation_Tm_refine_322f9f85c27323ee5f57b288fa61f42b",
        "refinement_interpretation_Tm_refine_3ae7934f7bb0b211572daa2c0f2cb446",
        "refinement_interpretation_Tm_refine_40a24c6c363915cd0813473da688de21",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_54d8e4368ef4be5e2ddd5dfe39051b03",
        "refinement_interpretation_Tm_refine_58e48de108dd8d3561ae781a7312b1bf",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_816be49a366fab599ab8e4964cb47493",
        "refinement_interpretation_Tm_refine_870dc8a73b27151e0403bb23ded8a971",
        "refinement_interpretation_Tm_refine_884faf748fc82169b7d26be84136eada",
        "refinement_interpretation_Tm_refine_88e21d36d9e713615fce456e18b30e39",
        "refinement_interpretation_Tm_refine_9864cb84bafe0bc511caf24c3876607c",
        "refinement_interpretation_Tm_refine_a0863fb03730faf5c05012c36e62accb",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_bd9fabdc7462fb82e4ed0bc4a231f4e6",
        "refinement_interpretation_Tm_refine_c177109d136242edf41b990347a35d5f",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d619c861f528df2a95feefef2671011a",
        "refinement_interpretation_Tm_refine_e70272bbea6f6c7d05ad2f356644d43f",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f72fa123e541c05d0133fb44a028b079",
        "refinement_interpretation_Tm_refine_fe73bdb8b9cb8fc03d6c2d252618ec90",
        "refinement_interpretation_Tm_refine_ff296b3699d0c4d7235c057ddd607a43",
        "refinement_interpretation_Tm_refine_ff3f214a1d72a8cdeaa968f7e92cedb4",
        "refinement_kinding_Tm_refine_0df20aeef6421df55165f8821c001cf0",
        "refinement_kinding_Tm_refine_1506f9bd8a9f298520f6ac5f043b46bc",
        "refinement_kinding_Tm_refine_2bae5c3803c6c608e1680d3a46547c16",
        "refinement_kinding_Tm_refine_609152d84d8b640876aaac6ef0ab5cb7",
        "refinement_kinding_Tm_refine_7ecfee61ad5954fd130d64a2dba634f0",
        "refinement_kinding_Tm_refine_beec71e2de9ddfab99931e183d4c495c",
        "typing_FStar.Bytes.append", "typing_FStar.Bytes.empty_bytes",
        "typing_FStar.Bytes.len", "typing_FStar.Bytes.reveal",
        "typing_FStar.Bytes.slice", "typing_FStar.List.Tot.Base.last",
        "typing_FStar.Seq.Base.empty", "typing_FStar.Seq.Base.length",
        "typing_FStar.Seq.Base.slice", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.add", "typing_FStar.UInt32.sub",
        "typing_FStar.UInt32.uint_to_t", "typing_FStar.UInt32.v",
        "typing_LowParse.Low.Base.bytes_of_slice_from_to",
        "typing_LowParse.Low.Base.content_length",
        "typing_LowParse.SLow.Base.u32_max",
        "typing_LowParse.Slice.__proj__Mkslice__item__base",
        "typing_LowParse.Slice.__proj__Mkslice__item__len",
        "typing_LowParse.Slice.bytes_of_slice_from",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_LowStar.Monotonic.Buffer.loc_buffer",
        "typing_LowStar.Monotonic.Buffer.loc_none",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__cipher_suites",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__compression_methods",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__extensions",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__random",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__session_id",
        "typing_Parsers.ClientHello.__proj__MkclientHello__item__version",
        "typing_Parsers.ClientHello.clientHello_parser",
        "typing_Parsers.ClientHello.clientHello_parser_kind",
        "typing_Parsers.ClientHello.clientHello_serializer",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_parser_kind",
        "typing_Parsers.ClientHelloExtensions.clientHelloExtensions_serializer",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_parser_kind",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_serializer",
        "typing_Parsers.ClientHello_cipher_suites.clientHello_cipher_suites_size32",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_parser_kind",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_serializer",
        "typing_Parsers.ClientHello_compression_methods.clientHello_compression_methods_size32",
        "typing_Parsers.Handshake.__proj__M_client_hello__item___0",
        "typing_Parsers.Handshake.handshake_parser",
        "typing_Parsers.Handshake.handshake_parser_kind",
        "typing_Parsers.Handshake.handshake_serializer",
        "typing_Parsers.Handshake.handshake_serializer32",
        "typing_Parsers.Handshake.tag_of_handshake",
        "typing_Parsers.Handshake.uu___is_M_client_hello",
        "typing_Parsers.HandshakeType.handshakeType_parser",
        "typing_Parsers.HandshakeType.handshakeType_parser_kind",
        "typing_Parsers.HandshakeType.handshakeType_serializer",
        "typing_Parsers.Handshake_m_client_hello.handshake_m_client_hello_parser",
        "typing_Parsers.Handshake_m_client_hello.handshake_m_client_hello_parser_kind",
        "typing_Parsers.Handshake_m_client_hello.handshake_m_client_hello_serializer",
        "typing_Parsers.OfferedPsks.__proj__MkofferedPsks__item__binders",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_serializer",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_serializer32",
        "typing_Parsers.ProtocolVersion.protocolVersion_parser",
        "typing_Parsers.ProtocolVersion.protocolVersion_parser_kind",
        "typing_Parsers.ProtocolVersion.protocolVersion_serializer",
        "typing_Parsers.ProtocolVersion.protocolVersion_size32",
        "typing_Parsers.Random.random_parser",
        "typing_Parsers.Random.random_parser_kind",
        "typing_Parsers.Random.random_serializer",
        "typing_Parsers.Random.random_size32",
        "typing_Parsers.SessionID.sessionID_parser",
        "typing_Parsers.SessionID.sessionID_parser_kind",
        "typing_Parsers.SessionID.sessionID_serializer",
        "typing_Parsers.SessionID.sessionID_size32",
        "typing_ParsersAux.Binders.binders_offset",
        "typing_ParsersAux.Binders.clientHelloExtensions_binders_offset",
        "typing_ParsersAux.Binders.clientHello_binders_offset",
        "typing_ParsersAux.Binders.handshake_m_client_hello_binders_offset",
        "typing_ParsersAux.Binders.has_binders",
        "typing_ParsersAux.Binders.truncate_clientHello_bytes"
      ],
      0,
      "f967a5d6ca2be5d65fbe6af6e9da49e3"
    ],
    [
      "ParsersAux.Binders.valid_binders_mutate",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def", "bool_inversion",
        "data_elim_LowParse.Slice.Mkslice",
        "data_elim_LowParse.Spec.Base.Mkparser_kind_",
        "equation_FStar.Bytes.lbytes",
        "equation_FStar.Monotonic.HyperHeap.hmap",
        "equation_FStar.Monotonic.HyperStack.is_tip",
        "equation_FStar.Monotonic.HyperStack.is_wf_with_ctr_and_tip",
        "equation_FStar.Monotonic.HyperStack.mem",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Low.Base.bytes_of_slice_from_to",
        "equation_LowParse.Low.Base.valid_content",
        "equation_LowParse.Low.Base.valid_content_pos",
        "equation_LowParse.Low.Base.valid_pos",
        "equation_LowParse.Slice.buffer_srel_of_srel",
        "equation_LowParse.Slice.live_slice",
        "equation_LowParse.Slice.loc_slice_from_to",
        "equation_LowParse.Slice.srel",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders",
        "equation_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "equation_Parsers.Random.random_parser_kind",
        "equation_ParsersAux.Binders.binders_offset",
        "equation_ParsersAux.Binders.has_binders",
        "equation_ParsersAux.Binders.set_binders", "equation_Prims.nat",
        "equation_Prims.squash",
        "fuel_guarded_inversion_LowParse.Slice.slice",
        "function_token_typing_FStar.Monotonic.Heap.heap",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "kinding_Parsers.Handshake.handshake@tok", "l_and-interp",
        "lemma_FStar.Map.lemma_ContainsDom",
        "lemma_FStar.Seq.Base.lemma_eq_refl", "lemma_FStar.UInt32.uv_inv",
        "lemma_LowParse.Low.Base.content_length_post",
        "lemma_LowParse.Low.Base.valid_elim_",
        "lemma_LowParse.Low.Base.valid_pos_get_valid_pos",
        "lemma_LowStar.Monotonic.Buffer.length_null_1",
        "lemma_LowStar.Monotonic.Buffer.length_null_2",
        "lemma_LowStar.Monotonic.Buffer.loc_buffer_from_to_eq",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_gsub_buffer",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_sym_",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_union_r_",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_refl",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_union_l_",
        "lemma_LowStar.Monotonic.Buffer.loc_union_comm",
        "lemma_LowStar.Monotonic.Buffer.modifies_loc_includes",
        "lemma_Parsers.OfferedPsks_binders.offeredPsks_binders_bytesize_eqn",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Slice.Mkslice_base",
        "proj_equation_LowParse.Slice.Mkslice_len",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_05e15190c946858f68c69156f585f95a",
        "refinement_interpretation_Tm_refine_096dcb399122345db27f37346c43e5dc",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_3222344f513ab29ebe06c013530c1097",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_8879e4d447c306881afdf046534ba346",
        "refinement_interpretation_Tm_refine_b8e3f240af550142f6926578ec87a44b",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_fe73bdb8b9cb8fc03d6c2d252618ec90",
        "refinement_interpretation_Tm_refine_ff3f214a1d72a8cdeaa968f7e92cedb4",
        "refinement_kinding_Tm_refine_609152d84d8b640876aaac6ef0ab5cb7",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.Bytes.reveal", "typing_FStar.Map.contains",
        "typing_FStar.Monotonic.HyperHeap.rid",
        "typing_FStar.Monotonic.HyperStack.get_hmap",
        "typing_FStar.Monotonic.HyperStack.get_tip",
        "typing_FStar.UInt.fits", "typing_FStar.UInt32.add",
        "typing_FStar.UInt32.sub", "typing_FStar.UInt32.v",
        "typing_LowParse.Slice.__proj__Mkslice__item__base",
        "typing_LowParse.Slice.loc_slice_from_to",
        "typing_Parsers.Handshake.handshake_parser",
        "typing_Parsers.Handshake.handshake_parser_kind",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_bytesize",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_parser_kind",
        "typing_Parsers.Random.random_parser_kind",
        "typing_ParsersAux.Binders.binders_offset",
        "typing_ParsersAux.Binders.get_binders",
        "typing_ParsersAux.Binders.has_binders",
        "typing_ParsersAux.Binders.truncate_clientHello_bytes"
      ],
      0,
      "fac104586e45db02416efd2e4d16199e"
    ],
    [
      "ParsersAux.Binders.build_canonical_list_binders",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "binder_x_041e3a67a2d2b51fd702f1f88cfc3b44_0",
        "binder_x_8d83431d06581d5ccf2b5f86e945471a_1",
        "equality_tok_Prims.LexTop@tok", "equation_FStar.Bytes.lbytes",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lt",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt32.lt",
        "equation_Parsers.PskBinderEntry.pskBinderEntry",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "lemma_FStar.Bytes.length_reveal",
        "lemma_FStar.Seq.Base.lemma_create_len",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_LowParse.Bytes32.b32_reveal_create",
        "lemma_Parsers.OfferedPsks_binders.offeredPsks_binders_list_bytesize_cons",
        "lemma_Parsers.PskBinderEntry.pskBinderEntry_bytesize_eqn",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_09bd1ff69f58bb317aa7bf18d8fee7e4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_71ea40360194fe02ee1272538c9cacbc",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_80b9fa1848cd4b08f626f8a84eef7f15",
        "refinement_interpretation_Tm_refine_9a5867ee735299a7d440e4d6898018d1",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.Bytes.empty_bytes", "typing_FStar.Bytes.len",
        "typing_FStar.UInt32.uint_to_t", "typing_FStar.UInt32.v",
        "typing_FStar.UInt8.uint_to_t",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_list_bytesize",
        "typing_Prims.pow2", "well-founded-ordering-on-nat"
      ],
      0,
      "7e0af2e30c3c19253e13d511a77e3933"
    ],
    [
      "ParsersAux.Binders.build_canonical_binders",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "d4ea7c4d5cb2f80b8e5583c3b26ecb02"
    ],
    [
      "ParsersAux.Binders.build_canonical_binders",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def", "bool_inversion",
        "bool_typing", "eq2-interp", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_Prims.eq2", "equation_Prims.nat", "equation_Prims.squash",
        "function_token_typing_Parsers.OfferedPsks_binders.offeredPsks_binders_list_bytesize_nil",
        "int_inversion",
        "lemma_Parsers.OfferedPsks_binders.offeredPsks_binders_bytesize_eqn",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.UInt32.v",
        "typing_Parsers.OfferedPsks_binders.offeredPsks_binders_bytesize"
      ],
      0,
      "2756a9ac9b39fa9f377743f5c456bdc0"
    ]
  ]
]