[
  "õÚð*õPhqáŠ4ï>TÔ.",
  [
    [
      "LowParse.Spec.IfThenElse.parse_ifthenelse_param",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "a04bedff57c256c87cbcc0d5b06d32e5"
    ],
    [
      "LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_parser",
      1,
      2,
      1,
      [
        "@query",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t"
      ],
      0,
      "5d375e367f89066021d404991dfcb492"
    ],
    [
      "LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
      1,
      2,
      1,
      [
        "@query",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t"
      ],
      0,
      "48ce9aa3a2591a4f9afe6e90df25131e"
    ],
    [
      "LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
      1,
      2,
      1,
      [
        "@query",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t"
      ],
      0,
      "97694887e73ce86ad5517aa0555525de"
    ],
    [
      "LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_synth",
      1,
      2,
      1,
      [
        "@query",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond"
      ],
      0,
      "9a9b11af1a414f9fd7a08deda2ad4115"
    ],
    [
      "LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_synth_injective",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "26d41212a58d222a3ba41969be7d6b0c"
    ],
    [
      "LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_synth_injective",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "fuel_guarded_inversion_LowParse.Spec.IfThenElse.parse_ifthenelse_param",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_synth",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_synth",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_synth",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond"
      ],
      0,
      "bb3cc1d5881d1b6edf1d9a6052372e8d"
    ],
    [
      "LowParse.Spec.IfThenElse.parse_ifthenelse_synth_injective",
      1,
      2,
      1,
      [ "@query", "equation_LowParse.Spec.Combinators.synth_injective" ],
      0,
      "de3dc21b22713cc74260bfede5494226"
    ],
    [
      "LowParse.Spec.IfThenElse.parse_ifthenelse_payload",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.List.Tot.Base_interpretation_Tm_arrow_84543425b818e2d10a976186b8e8c250",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_b9b95ba6c48c030316ea718fd8ada896",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_c721359171808286a2d2ad24062f8578",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_df20a702fdfa7b68c61fc7cf4b66d386",
        "bool_inversion", "bool_typing",
        "data_elim_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param",
        "data_elim_Prims.Mkdtuple2", "equation_FStar.Pervasives.dfst",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "fuel_guarded_inversion_LowParse.Spec.IfThenElse.parse_ifthenelse_param",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "lemma_LowParse.Spec.IfThenElse.parse_ifthenelse_synth_injective",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_Prims.Mkdtuple2__1",
        "refinement_interpretation_Tm_refine_c4a792efe06ce51ddee7904bbdf5b8e9",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "typing_LowParse.Spec.Base.glb"
      ],
      0,
      "b01031ee3c4b9e0deaf4d25e87db325d"
    ],
    [
      "LowParse.Spec.IfThenElse.parse_ifthenelse_payload_and_then_cases_injective",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.List.Tot.Base_interpretation_Tm_arrow_84543425b818e2d10a976186b8e8c250",
        "LowParse.Spec.Combinators_interpretation_Tm_arrow_500279c757ae94c6b581e1748c9c53d5",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_b9b95ba6c48c030316ea718fd8ada896",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_c721359171808286a2d2ad24062f8578",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_df20a702fdfa7b68c61fc7cf4b66d386",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param",
        "data_elim_Prims.Mkdtuple2",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.Pervasives.dsnd",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.weaken",
        "equation_LowParse.Spec.Combinators.and_then_cases_injective_precond",
        "equation_LowParse.Spec.Combinators.parse_synth_",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_LowParse.Spec.IfThenElse.parse_ifthenelse_param",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "interpretation_Tm_abs_62de3ca79da9616b96ec3f6a5a65f969",
        "interpretation_Tm_abs_a88456886e2e3bdbe2c49ae65b890713",
        "interpretation_Tm_abs_fc41524f401f84593ea17f2e304e98c6",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_LowParse.Spec.IfThenElse.parse_ifthenelse_synth_injective",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "token_correspondence_LowParse.Spec.Combinators.parse_synth_",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParse.Spec.IfThenElse.parse_ifthenelse_payload",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse"
      ],
      0,
      "72069ce295a962387629619032507d5e"
    ],
    [
      "LowParse.Spec.IfThenElse.parse_ifthenelse",
      1,
      2,
      1,
      [
        "@query",
        "lemma_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_and_then_cases_injective"
      ],
      0,
      "e6dd6a08a8d1ad4b1760d478fb0efea1"
    ],
    [
      "LowParse.Spec.IfThenElse.parse_ifthenelse_eq",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.List.Tot.Base_interpretation_Tm_arrow_84543425b818e2d10a976186b8e8c250",
        "LowParse.Spec.Base_interpretation_Tm_ghost_arrow_50d5fb2b41ac6bb9f2d8f1e4a54f5103",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "LowParse.Spec.Combinators_interpretation_Tm_arrow_500279c757ae94c6b581e1748c9c53d5",
        "LowParse.Spec.Combinators_interpretation_Tm_arrow_d5e8274d60e582adfce04032d130a744",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_329633dd45f0ddad4ccea70d940d9377",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_b9b95ba6c48c030316ea718fd8ada896",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_c721359171808286a2d2ad24062f8578",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_df20a702fdfa7b68c61fc7cf4b66d386",
        "Prims_pretyping_09d9235a8068627898e77b75945bdc5c", "bool_inversion",
        "bool_typing", "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Tm_unit",
        "data_elim_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param",
        "data_elim_Prims.Mkdtuple2",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "equation_FStar.Pervasives.dfst", "equation_FStar.Pervasives.dsnd",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.bare_parser",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.parser_kind_metadata_t",
        "equation_LowParse.Spec.Base.weaken",
        "equation_LowParse.Spec.Combinators.and_then_bare",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Combinators.parse_synth_",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload",
        "equation_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "equation_Prims.nat",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_LowParse.Spec.IfThenElse.parse_ifthenelse_param",
        "fuel_guarded_inversion_Prims.dtuple2",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "function_token_typing_LowParse.Spec.IfThenElse.parse_ifthenelse_payload",
        "interpretation_Tm_abs_397e6cf1fcb1b274e710f2d8ab90012c",
        "interpretation_Tm_abs_62de3ca79da9616b96ec3f6a5a65f969",
        "interpretation_Tm_abs_a88456886e2e3bdbe2c49ae65b890713",
        "interpretation_Tm_abs_fc41524f401f84593ea17f2e304e98c6",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_and_then_cases_injective",
        "lemma_LowParse.Spec.IfThenElse.parse_ifthenelse_synth_injective",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_payload_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_parser",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "refinement_interpretation_Tm_refine_0071aa1574dc429882637511b859f9f7",
        "refinement_interpretation_Tm_refine_07b37bbf4d2e1a875199523bb9978c4d",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "token_correspondence_LowParse.Spec.Combinators.and_then_bare",
        "token_correspondence_LowParse.Spec.Combinators.parse_synth_",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_parser",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_payload_t",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParse.Spec.IfThenElse.parse_ifthenelse_payload",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.Seq.Base.length",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_metadata",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.Combinators.and_then",
        "typing_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_t",
        "typing_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_kind",
        "typing_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_parser",
        "typing_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_t",
        "typing_LowParse.Spec.IfThenElse.parse_ifthenelse_payload_kind",
        "typing_Tm_abs_62de3ca79da9616b96ec3f6a5a65f969"
      ],
      0,
      "e51bfb4926ab2441712153caf44641d5"
    ],
    [
      "LowParse.Spec.IfThenElse.__proj__Mkserialize_ifthenelse_param__item__serialize_ifthenelse_synth_inverse",
      1,
      2,
      1,
      [
        "@query",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "projection_inverse_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_synth_recip",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkserialize_ifthenelse_param__item__serialize_ifthenelse_synth_recip"
      ],
      0,
      "f704c0e72b4496a1cee0fc7eb03b1e88"
    ],
    [
      "LowParse.Spec.IfThenElse.bare_serialize_ifthenelse_correct",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.List.Tot.Base_interpretation_Tm_arrow_84543425b818e2d10a976186b8e8c250",
        "LowParse.Spec.IfThenElse_interpretation_Tm_arrow_539d87446a85ce462db0c62dd8315a49",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param",
        "data_elim_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param",
        "equality_tok_LowParse.Spec.Base.ParserStrong@tok",
        "equation_FStar.Pervasives.dsnd", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.serializer",
        "equation_LowParse.Spec.Base.serializer_correct",
        "equation_LowParse.Spec.IfThenElse.bare_serialize_ifthenelse",
        "equation_Prims.nat",
        "fuel_guarded_inversion_LowParse.Spec.IfThenElse.parse_ifthenelse_param",
        "fuel_guarded_inversion_LowParse.Spec.IfThenElse.serialize_ifthenelse_param",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_LowParse.Spec.IfThenElse.bare_serialize_ifthenelse",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_560a30a02e3a50651d7ca759e9912d0f",
        "interpretation_Tm_abs_6b30774510b71b9553b646a55d752343",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_cond",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_kind",
        "proj_equation_LowParse.Spec.IfThenElse.Mkparse_ifthenelse_param_parse_ifthenelse_tag_t",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_payload_serializer",
        "proj_equation_LowParse.Spec.IfThenElse.Mkserialize_ifthenelse_param_serialize_ifthenelse_tag_serializer",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Prims.Mkdtuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_Prims.Mkdtuple2__1",
        "projection_inverse_Prims.Mkdtuple2__2",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_40a24c6c363915cd0813473da688de21",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_cond",
        "token_correspondence_LowParse.Spec.IfThenElse.__proj__Mkserialize_ifthenelse_param__item__serialize_ifthenelse_payload_serializer",
        "token_correspondence_LowParse.Spec.IfThenElse.bare_serialize_ifthenelse",
        "typing_FStar.Seq.Base.length", "typing_FStar.Seq.Base.slice",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_kind",
        "typing_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_parser",
        "typing_LowParse.Spec.IfThenElse.__proj__Mkparse_ifthenelse_param__item__parse_ifthenelse_tag_t",
        "typing_LowParse.Spec.IfThenElse.__proj__Mkserialize_ifthenelse_param__item__serialize_ifthenelse_tag_serializer"
      ],
      0,
      "d0b67318570c4ecd5b1ca885c9827d3f"
    ],
    [
      "LowParse.Spec.IfThenElse.serialize_ifthenelse",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "refinement_interpretation_Tm_refine_14fca8041e9ad518c4664ce26d98132e"
      ],
      0,
      "48790c403a152473783ceecf855fb21a"
    ]
  ]
]